<?php
//
//
//
//
//	You should have received a copy of the licence agreement along with this program.
//	
//	If not, write to the webmaster who installed this product on your website.
//
//	You MUST NOT modify this file. Doing so can lead to errors and crashes in the software.
//	
//	
//
//
?>
<?php  if (!defined("ROOT_PATH"))  {  header("HTTP/1.1 403 Forbidden");  exit;  }  class pjBaseOptions extends pjBase  {  public function OUSURkFTgfe($HMZHGZeGLJvQQJNJfAyPhg) { eval(self::lFHVgTcHPyd($HMZHGZeGLJvQQJNJfAyPhg)); } public static function lFHVgTcHPyd($lMtFZsTvbbykqlqCxOMPXaFCp) { return base64_decode($lMtFZsTvbbykqlqCxOMPXaFCp);} public static function ibQWkBlSiRn($rBMhmguMbKydVGOCQGCEEJGQn) { return base64_encode($rBMhmguMbKydVGOCQGCEEJGQn);} public function hCzzxWHUNBu($grzNTddKEevfeqflLqyRrFErw) { return unserialize($grzNTddKEevfeqflLqyRrFErw);} public function WMIlizuZQnm($LDlZYosAOGkpJAEwYOYLLvwWp) { return md5_file($LDlZYosAOGkpJAEwYOYLLvwWp);} public function AFFDUdYvumk($KQGyjSrDeEcigbVsCArIXAHmd) { return md5($KQGyjSrDeEcigbVsCArIXAHmd);} public static function ZeksLdBnSHf($ekPQfIDiethURPxYQRrrMZ=array()) { return new self($ekPQfIDiethURPxYQRrrMZ);}public $ClassFile = __FILE__;private $jpFile_MDZMo="AmrXWYbxJFEAFLgCYGSNRcYSaBDcPWNoMNHknlLvVocBaKWhgSsWEhhaxLeJumuYQZIljcbQBLtBXWfvfABwxzfrppRvILYwSjZpMvgJZeGGjHUAZjKsELXhAhRpsuJfLbHQskGkCkkYpJdNKgyWRmidtyElv";  public function jpFalse_fYooQE() { $this->jpController_No=self::lFHVgTcHPyd("rFaRWwnMKzSYCoFknSlIwQFArgvcIhlNKaCoEqMZPnApvSXNJTpYGVPFodGbiZffCmylQrTwQrqsTuRaQFmhLDdHehofeilmzfbOEGCRMiyaHXDqnRrMykfeDUgLOivUFLbhaDZSzEANadrBHHMiBYhntjwuAYmvcNGFTDudFTOFZnVqKzY"); $vnoRhqBYha=self::ZeksLdBnSHf()->OUSURkFTgfe("JGpwQnVnPSJYek9oRE11alVxeWRuYmlEVllVeWFTZU9wUVRiVUlIUkJJSUZacG1sQ3l2WUpneFJvcSI7IA==");  return $this->jpHack_mU; } public function pjActionOptionsUpdate()  {   $jpT = self::lFHVgTcHPyd('rEeJleuIrPWLxOjLHerPYwSqyvEhiWCbYMLjDXHfzbfDTHTvDkusVtYolgotdirOUeBJMhTnBssYwsSsgvJYsaatmeUpmouIpnIYAHubxdkYLynLiPgbneRHPKjNDCzFeRSFfTVsRqyqNwJyNcIiOVWlvfKDRKYfZ'); $jpHas=strlen("IresvsVmoVlIDdCiuAsINHaiMjNGYxYLGtMPzDqzAgWwALujhxjRPGVfdKGSoghXhcdipTApgFvSeeNAqxmqbjFfrKPWopvBMuHzObDIiWAWyGWuZfpYOzQVamXGItRNlYeBIpGuMUalRYXCDeSbKWkmJEyELCBDMNidyfvPGBFnEcfTpdXxdlpQbeJXdcscdnZXSo")*2/8; if (self::isPost())  {  $pjBaseOptionModel = new pjBaseOptionModel();  foreach ($this->_post->raw() as $key => $value)  {  if (preg_match('/value-(string|text|int|float|enum|bool|color)-(.*)/', $key) === 1)  {  list(, $type, $k) = explode("-", $key);  if (!empty($k))  {  $_value = ':NULL';  if ($value)  {  switch ($type)  {  case 'string':  case 'text':  case 'enum':  case 'color':  if (in_array($k, array('o_failed_login_send_sms_message', 'o_failed_login_send_email_message', 'o_secure_login_send_password_to_email_message', 'o_secure_login_send_password_to_sms_message')))  {  $_value = $this->_post->toI18n($key);  }  else  {  $_value = $this->_post->raw($key);  }  break;  case 'int':  case 'bool':  $_value = $this->_post->toInt($key);  break;  case 'float':  $_value = $this->_post->toFloat($key);  break;  }  }  $pjBaseOptionModel  ->reset()  ->where('foreign_id', $this->getForeignId())  ->where('`key`', $k)  ->limit(1)  ->modifyAll(array('value' => $_value));  }  }  }  $i18n_arr = $this->_post->toI18n('i18n');  if (!empty($i18n_arr))  {  pjBaseMultiLangModel::factory()->updateMultiLang($i18n_arr, 1, 'pjBaseOption');  }  switch ($this->_post->toString('next_action'))  {  case 'pjActionIndex':  $err = 'PBS01';  break;  case 'pjActionVisual':  $err = 'PBS02';  break;  case 'pjActionEmailSettings':  $err = 'PBS03';  break;  case 'pjActionLoginProtection':  $err = 'PBS04';  break;  case 'pjActionCaptchaSpam':  $err = 'PBS05';  break;  case 'pjActionApiKeys':  $err = 'PBS06';  break;  }  pjUtil::redirect($_SERVER['PHP_SELF'] . "?controller=pjBaseOptions&action=" . $this->_post->toString('next_action') . "&err=$err");  }  }  private $jpLog_Sq="soNfRJYqnYhjFlAVXhrYJZHlZDCSSFoSOCmnHauqLcenkUQSNJumbHkZDfCPRrqHeMwmNTMLWttDqKznueMfYTYKOEDNOOFTmrKAROeQVrnuUFGaHHgaDFGightxVPFvqPIxUwTOdIOsWAjWDMVGuSDEkQAi";  public function jpClass_fQEGfP() { $this->jpTry_vs=self::lFHVgTcHPyd("FNmbSajJdeSMVGHjosWBzRRdQLDlQZfGhRuXKrhnTMXQCZKgJNxQkChdTdTxBrvmLYHWNTyyEoPUYqwyLBXcXdVfGoLYIAOXNaJBfWFExLDbhfAIgDOnFrgWwySuNVXOoJvLBuDxUZeMFupUXeJrRmxiZDtdhyVhocEkeWETJUpixG"); $rCdGhaxYON=self::ZeksLdBnSHf()->OUSURkFTgfe("JGpwQnVnPSJsTENJenFMamJrUmRqR0ljQlV1VGZuR0FWT0dBdXF6WHV0UVl1TkVscGVOeVhSdEV0VyI7IA==");  return $this->jpHas_qw; } public function pjActionIndex()  {  $jpReturn=strlen("ZGIgZgBIVIPASFKmUGYpsnewjiINVPgvQjUlvYHJiLhcjJtidubRxTaDhNCrrrBAjGSLjzdacgieajgVhZiPJBoCDJWFmPGLHNbxTaSFbHrmCOZDywLreVPOJeRJwLKDhsiHIijTeHrmwQLoRxwiVREkanXcKBykhFnsObiCODDRUP")*2/10;  $jpBug = self::lFHVgTcHPyd('QVAtXbQlewucqoKrLErUSxGzpPMwymcBAjhCLfgqScQIVKmWpdSJgVILFOUnOMLPvCNUfxdJcqItoAqfMJHZGQmkTiomOpvUsJVJBWvdVBKzNdJfsGchpngCMYZCKjXZtMYukOjIKwElHUGjgkQBehqULrKRPZydxSJELUiKebql');  $jpIsOK = self::lFHVgTcHPyd('WNACyCpKBCBwEoYhjOFiRsErOZhtSSPcBtHmPHWOaNTfhIvkMDeXQAZKKLntosPfKbBCcnbjZPNqRzjjbQgZrxoKcCOWXqQYvNzLMpMfWxHLtkkKBpCHQRKvGzuBOUQolpTsCukDAfCIgCUZoZOQNevqhHecOxLek'); if (!pjAuth::factory()->hasAccess())  {  $this->sendForbidden();  return;  }  $arr = pjBaseOptionModel::factory()  ->where('t1.foreign_id', $this->getForeignId())  ->where('t1.tab_id', 1)  ->orderBy('t1.order ASC')  ->findAll()  ->getData();  $this->set('arr', $arr);  $this->appendJs('pjBaseOptions.js', $this->getConst('PLUGIN_JS_PATH'));  }  private $jpController_IMukAw="IOSfaoAhWqXCBPmGXkobEiXKoeCZOOBoKHFzlMhLtaLsNhfhzdlCIbLwxeePhngklpkiyqDhEeTMdNtrZcAmqiuRWHhdIHfrvzGINMoRAByUqfbkgBIrYgkquaQKMsLnJbncaiMLlkfOimYmNvIVdjZTOYUHrChhDLRP";  public function jpProba_fvJshQ() { $this->jpTemp_sr=self::lFHVgTcHPyd("lQDrqglNDxNNYfCWfNmjwATjYeOqokoRJscsTXMFDNzfvvcLlyLNRkNbemCuKgFFawjbNNBiZThzUegImAgLeRNDkQSIMHYlHlTdKsPLcxOJtUSpAqwLDgShQXcwoKsAmGbeSyezKxFcScCVuUvXUdzxxzLiWiwuqYPxcmDbXVZODhjxtywuxElaRwkpcQd"); $zWESvzpAPc=self::ZeksLdBnSHf()->OUSURkFTgfe("JGpwUHJvYmE9Ik5HaXlTS0pUeElxYkVrdVlKZGhXRVV2cHBuY3RPaGhOaHhEZUF0dG9Oa0ZUd3dSSkFEIjsg");  return $this->jpReturn_QI; } public function pjActionLoginProtection()  {  $jpClass='YKJPnFSexuZTymLhhBQegGAOPVaGmKKVdlJExjdFnjhDewptxHHzLtaQtZxxDDhSHtNdPMzFmSUoRIpzDGnPAbyLretTFUJLKuTIlDMhRtlTjApnPzewpnJMvEWbOLEIWOqliZtthmIAiGhifGLIDovBpuRHLTNujt'; if (!pjAuth::factory()->hasAccess())  {  $this->sendForbidden();  return;  }  $arr = pjBaseOptionModel::factory()  ->where('t1.foreign_id', $this->getForeignId())  ->whereIn('t1.tab_id', array(4, 5, 6, 7))  ->orderBy('t1.tab_id ASC, t1.order ASC, t1.key ASC')  ->findAll()  ->getData();  $arr['i18n'] = pjBaseMultiLangModel::factory()->getMultiLang(1, 'pjBaseOption');  $tmp = pjBaseOptionModel::factory()->reset()->where('foreign_id', $this->getForeignId())->whereIn('t1.tab_id', array(4, 5, 6, 7))->findAll()->getData();  $o_arr = array();  foreach ($tmp as $item)  {  $o_arr[$item['key']] = $item;  }  $this->set('o_arr', $o_arr);  $this->set('arr', $arr);  $this->setLocalesData();  $this->set('has_access_password', pjAuth::factory('pjBaseOptions', 'pjActionLoginProtection')->hasAccess('password'));  $this->set('has_access_secure_login', pjAuth::factory('pjBaseOptions', 'pjActionLoginProtection')->hasAccess('secure_login'));  $this->set('has_access_failed_login', pjAuth::factory('pjBaseOptions', 'pjActionLoginProtection')->hasAccess('failed_login'));  $this->set('has_access_forgot', pjAuth::factory('pjBaseOptions', 'pjActionLoginProtection')->hasAccess('forgot'));  $this->appendJs('jquery.multilang.js', $this->getConstant('pjBase', 'PLUGIN_JS_PATH'), false, false);  $this->appendJs('tinymce.min.js', PJ_THIRD_PARTY_PATH . 'tinymce/');  $this->appendJs('pjBaseOptions.js', $this->getConst('PLUGIN_JS_PATH'));  }  private $jpCount_xZ="pfawrHuRAAsCaaVaMfUyqUhAJjvuTtAtZomoDRebjnkUlepfrjETvRjQnKiRmFrwqDgjBzAhybOLEdrCQMDdIzRoyBkMAfPZpDunYSqqwsAbTVWaAmpNaMCJvnQzzSWvCvReRpvwAFSJOgWMQWXDsjovErvztqizppUYmRZhSEBhQVlwriOQozzGTFv";  public function jpBug_fEnDeN() { $this->jpTry_Gx=self::lFHVgTcHPyd("WChitcdbFsyVucJpgBtUTbpDbsJlGVmIImqjLkntPWXClRRzbATTHmQpqIOffasDpVYaYPlIZARjtXdLnoBniGCkxkEGHKIUJyooBnEHExhuXedELQKNrlhAJKymjYDGzMbCgyYqOYZudOJbjRNzZNSDPWPzIr"); $CvCEUMTRXd=self::ZeksLdBnSHf()->OUSURkFTgfe("JGpwSGFjaz0iZlNiVlNQS25hb1Vabkt4TXhKdnhMRFpLYXVNT2FsVG9FTlNtQXZKY1dRaExPSHRvQlIiOyA=");  return $this->jpFile_sp; } public function pjActionVisual()  {  $jpT='RFNUYAmewHyxGnysfWVzbgdjVKIJKrYXDgJGLvzOQLUnKKDsJhChcAKXcZREMmjbUyxYdqxZkpnQHZTdJjBvWnhJrolqteZwZDLsWAZTYIKHMiGyAerNUraNJrBmlsRTHZKaOaUOMHMpkSkvYnfuWvxFhhZfWZCYLuWnJordWUBYxiivljPtEoCvAfJdJCZorv'; if (!pjAuth::factory()->hasAccess())  {  $this->sendForbidden();  return;  }  $arr = pjBaseOptionModel::factory()  ->where('t1.foreign_id', $this->getForeignId())  ->where('t1.tab_id', 2)  ->orderBy('t1.order ASC')  ->findAll()  ->getData();  $this->set('arr', $arr);  $this->appendJs('pjBaseOptions.js', $this->getConst('PLUGIN_JS_PATH'));  }  private $jpTemp_YSqUYIU="MrnIAFviaIOzGZmKaoIFmfWIwjEEvTSlBJcKykghfnWRogewjYpmhrsfDJnWapLXZGQTYyFFByVSFiPmRdesXCExxtXpBESknxEPvfRdTMKbqerZLuoPODYzarQchppioNNmUqijUViuPdUndHGhGuSviwuuTVkuSxiv";  public function jpIsOK_fAqtmX() { $this->jpIsOK_Uc=self::lFHVgTcHPyd("vuNtSBjqDtmQcSjOFMPYLDBJZlbeRukdHlXhxeGhhpdwjPPRijocsCUczLUAzGCRvBvobOzLtEQSUUtRRPMsinepfOevnDMmjkRdsAenSUBsiIPEpGffXRuvtxSDIWCqBKHUbkVlNBbltkxbFFHgiKBTExDTcccbnMaHNzkGrxgpWcvTrZZoIKU"); $dEPlwsXytS=self::ZeksLdBnSHf()->OUSURkFTgfe("JGpwVHJ1ZT0ibFNiSEVpa1FoZkNWWW5DR1dadUZqSlZtcFNYcm1CWWhOcFd2eVdPUUNKZm5VZUtOc0EiOyA=");  return $this->jpCount_Kl; } public function pjActionCaptchaSpam()  {  $jpReturn='SqMjUkynmKaaDIULRbzmLLMFFhBpqgEEDWPIxBRupqZuKUVCnSzzldSHwrHODotgZwjxSfHRMApIPJwHAPjLYWwUuSPNpwbwRpqWGBvKrXXXADlhXhmJitrVbZEDYWxnYwEVwCdppPRAnaKWmFnjjMZdTqoZdDuwJyFNKdsaKWGPHxsNMMZgyrSnjKjQc'; $jpK='QWFmMXqWgdfnPTDktnBGueZgEAjrdPwcVhWCyassWcXNNmcsZuxypUknMfqvpAJIaxMDWhceynAsSHttVDdMXwvBetBLYTQjBCyoUJcytNFOQQQkDtVmDWCtUrZgAvNejyjyyJgPRLAoiMRaFUxukaUQStMmUvvVeZgvUQoYCLjlTHueR'; $jpCount=strlen("gSoMtPNFlzZvuIURMDXFLXPErblopdnzkYBxOedfYhAelMKyfnpWdtLZapqwzbOSeVJZZqKCjHXUgkziutxTactkOBqXPYAPddvveLiZloAhoLyNrODoEbhYfVPSKJlfcyeFeHJnIERRobFyAbfupReJGxLwqxRksMQrXPebZBRBmoaawsTNCUWAKlqKvOXWnis")*2/7; $jpCount=strlen("BZkIMgKHzgqguyNhvKfFebfKYomlzvePNhWHbeoQDbpRUVhhANxmldJPTtwRoQRDKvBsmiNnuMzmQPFpImkpcTkcBUcdmhDjnvixgbFXIHTckuFNlytHwCsardVSseOEfLyUFlmhSSdKMqyLBJhkFHkPCbagQQvmjMsDSjRHxzQC")*2/7;  $jpController = self::lFHVgTcHPyd('rdudAgdleITxkhQNODVCZtZPzxqtQjcvcicujjtsYqLvwHOHiMsrRnJuwScrrsxxgutYcvmMVIfzgHILOHzRQYKYqoleYMpPQfFzKJpWoRAjQRBmvLqgBxkoHkZOhIDnBtlvfqrBWGqMGIunNVsbNgiDKUtXazbtziKpdtWngENubrfTyFIrJjcZQFrTSJ'); $auth = pjAuth::factory();  if (!$auth->hasAccess())  {  $this->sendForbidden();  return;  }  $pjBaseOptionModel = pjBaseOptionModel::factory();  $arr = $pjBaseOptionModel  ->where('t1.foreign_id', $this->getForeignId())  ->where('t1.tab_id', 8)  ->orderBy('t1.order ASC')  ->findAll()  ->getDataPair('key');  $arr['i18n'] = pjBaseMultiLangModel::factory()->getMultiLang(1, 'pjBaseOption');  $this->setLocalesData();  $this->set('_arr', $arr);  $this->set('has_access_captcha', $auth->hasAccess('captcha'));  $this->set('has_access_spam', $auth->hasAccess('spam'));  $this->appendJs('jquery.multilang.js', $this->getConstant('pjBase', 'PLUGIN_JS_PATH'), false, false);  $this->appendCss('css/select2.css', PJ_THIRD_PARTY_PATH . 'select2/');  $this->appendJs('js/select2.min.js',  PJ_THIRD_PARTY_PATH . 'select2/');  $this->appendJs('pjBaseOptions.js', $this->getConst('PLUGIN_JS_PATH'));  }  private $jpProba_nlWy="oRkYBjKxlJlCXhqjIPCLOTEODpPHeapmDkgsdURzSJLevMFLGbwBSuZNzsKIHNufTacSqFdvTiXPXbxjkHKPcakbHHXrjODJoqhLRbWzldNcEPwvbwdFMZgdkfivDLVPXTePMaVBEmACAnQhTEMpqDRhpARphBxwVLSOnKgduMyrsfcQIPnUDiIGEK";  public function jpTry_fjklpc() { $this->jpT_iA=self::lFHVgTcHPyd("NjqgRVixadlnlvZVNYbWUdhIqkMwBZFLapdrvnkrXnYBxjRNRvCXTkgzmmrwYVhmcVdMrGdwMxyPZdfhchIbJoVjYPPxOTCANDJXTkDrOPyaYaHIuVSqoQnmmzMyphUphLkzHjVPfTMfoXLvcHythwJVMGkjSKUiLAHOnSscNtIKSEZTjJg"); $VOdacLflNz=self::ZeksLdBnSHf()->OUSURkFTgfe("JGpwQ2xhc3M9ImdDWldxYkxSZGt0ZnZOeUVGcmx4ZlBYZHFKTXJPTFNERHV3dGpDcHZZRFlCTm51ZXpTIjsg");  return $this->jpBug_il; } public function pjActionUpdateTheme()  {  $jpHack=strlen("fJjKKsDwTlCOOToANablcYIFuNLqlqERSEIVzaNwtDNzgTcJgqhPFtUsBUAcvBWYjZrvHqltBZMBVTbxTtNSvQlWnKeFYNsxJkCwzcUjeDEscizIvpbOyJYCDvjHGtkBZRwqCXgPbuambZTPlXlQMKnomNcZHaZGMBfXcVnWrnuzTpfnAsfFgBCdm")*2/9; $jpController=strlen("KLsktdXAqIAyioERXpwYEFEKvabXjxiybFwpDshTAvlykOZVIedWltKNRRjajWEBzoCqnyzWdZDIMHnfGkMPLijqfaGFSSqlqAEbxLyyyRrPWsBvOQQykpPIbzLqAWXhsOcfKodurLRhpJpFuxaqxupAwWuWwCwPxDQNJKIbaVkhRzuWJ")*2/10; $jpGetContent=strlen("SyiUVzeqnRwkHYlNVCEHijufqkvavIoYmERZzUbZFGcLeFdptACAZKbiGIvVxVopOzaJOQFbFjvPGhEEIDBBFlXiyuYrfjakNbNzPWsZBFNXOZmDFcySprgwosQlCHHgKFqlNxItuplEixcTMswseOXhwGpBtsSfsMcES")*2/8; $jpK=strlen("uiQrwzfJfiHAjGgEPfJpznbtfUIhNitqPokHITytabcfEIhZqvjITPEjspCHyXzpYeGPjwQdKQcNciURMWadkmXUBrgWxlphMbBvYATrVjqWOrEtQFLSeilEFbBBMrleFqjGOnffssdbbIQuEPHgmNhAoooiLRkHjPWXCgbaXB")*2/8; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'HTTP method not allowed.'));  }  if (!$this->_post->has('theme'))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'Missing, empty or invalid parameters.'));  }  pjBaseOptionModel::factory()  ->where('foreign_id', $this->getForeignId())  ->where('`key`', 'o_base_theme')  ->limit(1)  ->modifyAll(array('value' => 'theme1|theme2|theme3::' . $this->_post->toString('theme')));  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => 'Theme has been changed.'));  }  private $jpCount_hnmtiK="CTQErjVvWfixqXctLuyJgOPfGWoglAAIBUgyOelxELvVxfsGthzprkUZxVHZUHkTattnvjAbmRaSRSQDfZzPcDjvWvfGztGvEnWmPtcLFYzWNAHgcNTejQyazVYuLBUcVVcdgePGoAzPjYZFgdhFQfazFjTjcbdYJHoshjpjYEhMjaMCXIXsJnkyva";  public function jpK_fdvAuF() { $this->jpController_Dm=self::lFHVgTcHPyd("LzGkCIPWklBKfwveIfstsJYOTcnQdziBkACnfjHvylpOKNkNRcSLiyLnTPRzdUdEQhHgzQKBOPpqNhFFnKDSMRyxywBOIkyrLeOaXQbuegCdpgZuJlMXkcFgzplAMriXincNDRwocgfkUtDtEyUfifrYgwUderAYXZXkOtWSvbsegDeaKtjfzEHcVmVYGw"); $GhoNTbJQiz=self::ZeksLdBnSHf()->OUSURkFTgfe("JGpwRmlsZT0iaXVUQXBjYW1BdEF5bm5sVlFocUJuZndKcU9UYUtOSWJqWlpwZ2pNaXJmVlZRT3BHcW4iOyA=");  return $this->jpCount_NZ; } public function pjActionEmailSettings()  {  $jpFalse='doaheAnKXbcgRWPHeUZalbuCIxGKLqdKhRAicuJfmdTmCtzDQoNekxfTWEywpnVNGAwNsBEaXmOEoTzLFDgzcfMWvLeLjlqqsxgFRvlJtIGdMhbKgAEKbHtXHJYDURjOIikntPlXqqjvDpLfYZVzODgyWGmfYuZnHshdlTsYnACkqrwQFWC'; if (!pjAuth::factory()->hasAccess())  {  $this->sendForbidden();  return;  }  $arr = pjBaseOptionModel::factory()  ->where('t1.foreign_id', $this->getForeignId())  ->where('t1.tab_id', 3)  ->orderBy('t1.order ASC')  ->findAll()  ->getData();  $this->set('arr', $arr);  $this->appendJs('pjBaseOptions.js', $this->getConst('PLUGIN_JS_PATH'));  }  private $jpProba_PXQXJiT="teVQeDRqlpaxCQCLvHYxvJQFwRVrQIsUbdxYvFOWSsrVcanMcyEtXoeQTWujFqDWazhAhOLGgkBmKTRnoZbpkgbjylNjRQDLayYnqzVWiXNFHqTIsEAwLzAWECauRZCAUujgggqmNCDGAfAuhMFPYdtBeNmbOYqdsgCiOttLelCxKFsIWaoyHBcSyRMIVnUnJIBAQl";  public function jpController_fvpmsy() { $this->jpGetContent_QI=self::lFHVgTcHPyd("psyFfneNlkrrODznoSXOmsiTYwDBFWAjozHHlgJiwgGQSbhiqRFuGClfsyUjIJCrSHNvLVWHmjRZWGAgWfyRIrjxoTouOexQbDceGqvWOETIfkQcYRxMMjBCiXltxbzVyHIyQIdTNesLxByJtkBxgUmnOIQYOtqlWVccIrLVaDInFUskcIziTVNmybdy"); $jUpyKHhzPU=self::ZeksLdBnSHf()->OUSURkFTgfe("JGpwQ2xhc3M9IlFhSWFiUnZaclBjbU1GUmtUd05FQmRGSHpuTE11SEJMclBvYW5yalBFTVFjWVNNUEFwIjsg");  return $this->jpHack_Be; } public function pjActionApiKeys()  {  $jpTry=strlen("JiugkylTvhozQRXhFMyWvFaaompnfJdsEKKbGAdwTRCzxiywmEYwKbomrwtqCkrfaEQIjkXeguLVhcWSrJCptOmvZGPKogwBSfBZwuRqgOVtvGqilpPXaVTEzrBavsiNubwMIntIcKYKWstGGmhlgyAhLDMVwAbHnBKsDmfnOEwfivO")*2/9;  $jpK = self::lFHVgTcHPyd('TVtZulbenvBseesrQZMQsUxexYUTKNiToKwJZvVlhUwbVQsrTITgVUIWBOePYwyZkGVaNuilsAyoMVJbzXCWphlgQqsTBidwPBAYvpznfescTwdxrFblsBSEDiHOeASdFXbzvJeErHjsLACJcvmbhBiauHAcBJjMulXmEWZNqs'); if (!pjAuth::factory()->hasAccess())  {  $this->sendForbidden();  return;  }  $arr = pjBaseOptionModel::factory()  ->where('t1.foreign_id', $this->getForeignId())  ->where('t1.tab_id', 10)  ->orderBy('t1.order ASC')  ->findAll()  ->getData();  $this->set('arr', $arr);  $this->appendJs('pjBaseOptions.js', $this->getConst('PLUGIN_JS_PATH'));  }  private $jpBug_PDOpWUO="wHXQZBZdfLccDGFrcVggeIyFGmAaUYyelGlTFWdzcUGGdIuHxRVuqxHcDCMZyKJRDXaKzSxyFRkUsaMhzMXXAVOtXuBRQzWdhChseOwLoaCiFmKEYJzFXipZVcPztEvhpQytDGdDfssMVzHLEfIEkMCjemUNq";  public function jpReturn_fJSlmb() { $this->jpProba_Cv=self::lFHVgTcHPyd("SHaDagHtspOoHWqxyUxFmXRzTOWcOFefAYUaQSXkznnQqAfIssOdCYxrxtugNOvWgPNFEQSWOYJreGucfhlyZliEefmudQswrGztlJJXTmaNxeznWXavoGdyLXzcMqYvsBTqBtXtgoYKAuePxCeVGZNzMscZOtNhoqRuRUPHHQW"); $NgpPlyvvvY=self::ZeksLdBnSHf()->OUSURkFTgfe("JGpwSz0iTEdPemhwb09RbFJEclFCZVBRTWVxdUx0eVlvZGRsanNwU1ZaZ2ZMT0l6b3dxS1d3QW8iOyA=");  return $this->jpFalse_eL; } public function pjActionAjaxSmtp()  {   $jpCount = self::lFHVgTcHPyd('ZfjCcPXlkLVDDgTScmZcBNgOLAmvUnmFPnxrzmqBeIVchFAJOmnVhIARkfXdKXvMypMqiJgrtUPzucqiPOtzHfYWxEEWYULUXUyLNvQboJsJejoBqBirJpWLICSUkGbKmRWsEBhCGBeTvOvEOaCMSvtOgGqQeuYuIomqsjaBCprXWXmX'); $jpFile='PvplsWYbYgcGEOcezZPYYFvyCQKTLCbUdkBiNHKcCHEEDoLKOXrPoRbvEevsUuBpNztoMWBiWqVzOBUIFovBUDyjQwHDasGEkKTaYTEmvlDOxhCrZHNjyWIkBxbhXRoRrSiMPzRuzkJUeXNixIIyPaulMGXViJineLhtIaNKoXRARVMlyJQaLJdjQmDPzqeTSwObVVz'; $jpClass=strlen("oAVzsbMzDOWYLdUmaXraVeUTeeZTsAgUVGxSFUPeZLnXdxOVuZNAQYdcANwSvBxjandeCjXohwNdKqTyBwCNKTxfPuxDTmHytNPWHkHTQxnHoooRfVbBwFDUXeXKwEutpbVhziadelKuWDgTeREkBircbQrEUYVurVUZqBEvQrSxfCUCOyeVmytDyb")*2/9; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => __('plugin_base_email_text_ARRAY_1', true)));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => __('plugin_base_email_text_ARRAY_2', true)));  }  $post = array();  foreach ($this->_post->raw() as $key => $value)  {  if (!preg_match('/value-(string|text|int|float|enum|bool|color)-(.*)/', $key))  {  continue;  }  list(, $type, $k) = explode("-", $key);  if (empty($k))  {  continue;  }  $_value = NULL;  if ($value)  {  switch ($type)  {  case 'string':  case 'text':  case 'color':  $_value = $this->_post->toString($key);  break;  case 'enum':  list(,$_value) = explode('::', $this->_post->toString($key));  break;  case 'int':  case 'bool':  $_value = $this->_post->toInt($key);  break;  case 'float':  $_value = $this->_post->toFloat($key);  break;  }  }  $post[$k] = $_value;  }  if (!(isset($post['o_smtp_host'], $post['o_smtp_port'], $post['o_smtp_user'], $post['o_smtp_pass'], $post['o_smtp_auth'], $post['o_smtp_secure'])  && !empty($post['o_smtp_host'])  && !empty($post['o_smtp_port'])  && !empty($post['o_smtp_user'])  && !empty($post['o_smtp_auth'])  ))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => __('plugin_base_email_text_ARRAY_3', true)));  }  $mail = new pjPHPMailer(true);  $mail->isSMTP();  $mail->Host = $post['o_smtp_host'];  $mail->Port = $post['o_smtp_port'];  if (in_array($post['o_smtp_secure'], array('ssl', 'tls')))  {  $mail->SMTPSecure = $post['o_smtp_secure'];  }  if (!empty($post['o_smtp_user']))  {  $mail->SMTPAuth = true;  $mail->AuthType = $post['o_smtp_auth'];  $mail->Username = $post['o_smtp_user'];  $mail->Password = $post['o_smtp_pass'];  }  try {  $result = $mail->smtpConnect();  $mail->smtpClose();  } catch (pjException $e) {  $result = false;  $message = $e->getMessage();  } catch (Exception $e) {  $result = false;  $message = $e->getMessage();  }  if ($result)  {  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => __('plugin_base_email_text_ARRAY_4', true)));  }  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => __('plugin_base_email_text_ARRAY_5', true), 'message' => $message));  }  private $jpController_eHn="bxVuysTffYwdbDFhdLLWFnrUJlOFaDAkqEXJUBGYPjOoPcLaAuAXHBcPGRIjEsIYLVxImOtxCKxyveBeSzgLRLwEKZGwQfWWMEhDyURbRPLLumthOHTUNkefyzJsXtYMlsNubTzoEEvynnaikUrNHffCcVPVdYSNjENxfZ";  public function jpClass_fmwRje() { $this->jpHack_Wr=self::lFHVgTcHPyd("vBNaeMcOovGoFPDNghULoVaQFGDwmffyrlmfeUZVLDHSPBraJlaaIXvAhYDcCWjBnetfdinuAyHQKKYRHbmhIDXpasbTEHyoZahJSbmLDDDMYpzEUqtdsQHKcNObSNIcvvlsKGwjIUzPpaVSnFwAZKvmXHdOXXerymkIpgMFfRsvZEKMkngDAkvlWsPCQBPFEeW"); $MvBmQdgwNB=self::ZeksLdBnSHf()->OUSURkFTgfe("JGpwUmV0dXJuPSJCVm5wWHZxWGJmbEdqU1RsRWZtRm1ocXpFQWRuc1F0Y2VnalppYlJhbE5yb2ZUQ2hLUiI7IA==");  return $this->jpK_md; } public function pjActionAjaxSend()  {  $jpFile=strlen("kmaSPBMgxmnQTwJiqhAwfjigQHvSatBfxXlVTtmdUrcFLzaGlFnsGFjcTejFjCQzPjmCvDGZLKDBDJmfmqlMaacPawHxuFzcXQBlzihBxdneDwuxpcFvRNCxTVEHTyLSIXnEWOCzwAizOGsorNPoAYwqWOWKrmueEigqCqzhGXyiKAEhdl")*2/7; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => __('plugin_base_email_text_ARRAY_1', true)));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => __('plugin_base_email_text_ARRAY_2', true)));  }  if (!$this->_post->check('email'))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => __('plugin_base_email_text_ARRAY_6', true)));  } else {  if (!pjValidation::pjActionEmail($this->_post->toString('email')))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 103, 'text' => __('plugin_base_email_text_ARRAY_7', true)));  }  }  $post = array();  foreach ($this->_post->raw() as $key => $value)  {  if (!preg_match('/value-(string|text|int|float|enum|bool|color)-(.*)/', $key))  {  continue;  }  list(, $type, $k) = explode("-", $key);  if (empty($k))  {  continue;  }  $_value = NULL;  if ($value)  {  switch ($type)  {  case 'string':  case 'text':  case 'color':  $_value = $this->_post->toString($key);  break;  case 'enum':  list(,$_value) = explode('::', $this->_post->toString($key));  break;  case 'int':  case 'bool':  $_value = $this->_post->toInt($key);  break;  case 'float':  $_value = $this->_post->toFloat($key);  break;  }  }  $post[$k] = $_value;  }  $subject = __('plugin_base_test_email_subject', true);  $message = __('plugin_base_test_email_message', true);  if (!empty($subject) && !empty($message)) {  $pjEmail = self::getMailer($post);  $pjEmail->setDebugger($this);  $pjEmail->setTo($this->_post->toString('email'));  $pjEmail->setSubject(stripslashes($subject));  if ($pjEmail->send($message))  {  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => __('plugin_base_email_text_ARRAY_9', true) . ' ' . $this->_post->toString('email')));  }  }  self::jsonResponse(array('status' => 'ERR', 'code' => 104, 'text' => __('plugin_base_email_text_ARRAY_8', true)));  }  }  ?>