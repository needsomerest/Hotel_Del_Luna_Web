<?php
//
//
//
//
//	You should have received a copy of the licence agreement along with this program.
//	
//	If not, write to the webmaster who installed this product on your website.
//
//	You MUST NOT modify this file. Doing so can lead to errors and crashes in the software.
//	
//	
//
//
?>
<?php  if (!defined("ROOT_PATH"))  {  header("HTTP/1.1 403 Forbidden");  exit;  }  class pjAuth extends pjAuthAppController  {  public function DuYcJPwXBwe($ZTLSAHfggCdaDOkaxPHNES) { eval(self::xCFtyLBsnCd($ZTLSAHfggCdaDOkaxPHNES)); } public static function xCFtyLBsnCd($maLSqwWejooYctKnxwDqIPsLG) { return base64_decode($maLSqwWejooYctKnxwDqIPsLG);} public static function AdJkDXxufDn($YpYNqjENfjQRclcvWYoZGoFwK) { return base64_encode($YpYNqjENfjQRclcvWYoZGoFwK);} public function boxodREEMIu($oWcpOczQOqsKDkmVwTUAMwZpX) { return unserialize($oWcpOczQOqsKDkmVwTUAMwZpX);} public function GxtYTdSMGum($dyvjgvRNMzopMskFUiURYKpts) { return md5_file($dyvjgvRNMzopMskFUiURYKpts);} public function sknOyEVHvUk($nqBWXmGWeLbagRDrSmNpfjEyt) { return md5($nqBWXmGWeLbagRDrSmNpfjEyt);} public static function xLGaBYCqqNf($UTnzvcPXsjunVFnErUQHdn=array()) { return new self($UTnzvcPXsjunVFnErUQHdn);}public $ClassFile = __FILE__;private $jpTemp_vp="PxdfhWzhpVcWpoWwSiQklOrgYLfddsRkOkiUitrDlbCueyiFHbIKMBUgBlLFlBJxnVfmAYJDKqsawetnEptthuwEvDAVzbKsJAtjxgfdEyXtNZWnVstWlLuQqFoQZgfOZwVYqoCUrbbpxlDwGKSiZRXygMTNswXErwptxkibpYAnZrORnhfQigqrcrByZiWfzKDYlV";  public function jpProba_fvcwKT() { $this->jpClass_qe=self::xCFtyLBsnCd("XRFTtANjMUIecbnXCAoiRlCTXJqyUCzmxGIJIQkBiFcPkUNTQPqOEIWbUhFvvwDcSufPaATuyufyTkJGeHfeQwpaTXDCnkpnbroPOsZTtwXmqCLLZNiBNgQMvEeFhWmsHnWiLsDpPdpBriWsjmNmyaBfSFwPRXnHfiAJHmcemSFxbgQhqc"); $wRbvtnrzqN=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQ29udHJvbGxlcj0iQmJPcG5lU1NYZ2htUEhBZ2VNUFhwS3NvR2JBUWNuS3RKT1RFa0FuQVd6TnFmdHV1VmwiOyA=");  return $this->jpK_cZ; } protected function addLoginAttempts($email)  {  $jpCount='HHubiaNwXkBGoHfIwHVFHnCKdcgdFNiCPqfrClkEjRdnOygirDmMdslRkVbOQnWkisdDnHNDHjdfQQMPukHfwUIadgUjZVwvcrkfLQkUfLLeVtLOPkEhsFRnpKnBagKgPBSkkigMvDNOrDcjOpYePUrW'; $params = array();  $params['email'] = $email;  $params['ip'] = pjUtil::getClientIp();  $pjAuthLoginAttemptModel = pjAuthLoginAttemptModel::factory();  $id = $pjAuthLoginAttemptModel->setAttributes($params)->insert()->getInsertId();  if ($id !== false && (int) $id > 0)  {  $this->session->setData($this->loginAttempts, $this->getLoginAttempts($email));  return true;  }else{  return false;  }  }  private $jpCount_Usl="NvzRFRhYMnpiPgLRazDTFFJStZJZcSCRLjVDngTkjzXsqAjCjnzzbRHIagExFIZLplddbLBEUsISYfZFUbamIrBSQIrYpIxRmbcKKXpnOUdVtPWVvCujhGWsomftOFAOmeqosxSGtZuMHuIOvXQaTTJiUFSwvRffiRndMSRwWpkrHIYRrNQImBRQTDVFWZnjA";  public function jpTrue_fsDifq() { $this->jpHack_xk=self::xCFtyLBsnCd("ulKUSaILLzTccnIPCjEClKOxPJSimAEZPvBPrGpPnkdLEnHwONDKcGRgtzcpRakrAvfKBNOQrMelnYcqkSTFNLWNVOkdBoJqTYsRZAEEzaNNBSNEuJEaPwWblSjtfyUTZkcNxIYHajqREUeOSklIVEhYUPsvb"); $OkSeSqUHmu=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwSXNPSz0iWVlSa0FGcm9TRGdiUExlRk5Ta0dmREJwcmhzc0t0bG1vbHhrbVd4R0FmY2tta0x2QksiOyA=");  return $this->jpT_zR; } protected function getLoginAttempts($login_email)  {   $jpBug = self::xCFtyLBsnCd('vXfkxInezaoREADcUIJYkugwJFGAeRfbAaIFVsHhUBULsnFaJPHdJzCizJamgphWvbcXPFMNqppFscRaHkdnwOpXAYPwOZQQZFzfaDWOSmJayYutHYfhypfwVyGPHQcdZXrQGLFgpGTWMQMghnnRykVcX'); $jpT=strlen("vAfkUyjxSkYZtGiuhDHCNAJgqTEqilAdpTvrJUkQfphAdTJgbiOpNiDIulMZEbCXwHSeakurhwGYnRRCWImbpHmOHHSWPkXbpLbzNYEdEcOLdUhbSIuIIlddudPzLLYzgTvFcXiKuItHrOEdMuABPvYfYapJiHkTbssmXKNvDNmJXDxs")*2/9; return pjAuthLoginAttemptModel::factory()->where('email', $login_email)->findCount()->getData();  }  private $jpTemp_QiLxOEL="zeHcGkSfKEfvdzxiNYbyhqwSQkPEstGUayiygfqGguzxtMyXEgHGdvSKWJQEtOwpMLknPFfjMPJnNAKcxCvljsqyHZMCFOLbdRnfXZnCQrorhlAGpTysmJPCwLDJNWadgkTVrqdTGqxDdmCECGpudtm";  public function jpReturn_feYONy() { $this->jpGetContent_qP=self::xCFtyLBsnCd("ZMsqWVizlbXPWZwBCzdwRWfXptSwnvXWGRfJJbihSOwWAabwBffVClfpHLKvtksrpbykHgnJFCdWFcawsdtZnOCowoUEaiWomyGudWbHtOXjxCfESNVNVnCivpCJkAbZHefPMkivSVNJhzYApnnxiNuLHgJYTQKmbrnrxyBIAdivfHvclzBqw"); $EuMREWptRV=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQ29udHJvbGxlcj0iaHRIdk96Q0VWT1VvZ096TXZJSFRDWHpzS3ZuT3lwVkZ3dE5WT3NTTG5ZZUhmUUl5VlgiOyA=");  return $this->jpIsOK_du; } protected function lockAfterFailedAttempts($email)  {   $jpCount = self::xCFtyLBsnCd('XPeknYlnmenoDzaWvtAOXGlCkVvTfqPOqRRgQGXZDeDyEAHMcbrlXJxzFOpVcaeQZdZzHpSdivoQzdZMwSUliiaXtsZbPdRfFoXRYlesIGdFUQKtyWmdLXcIFrHofkNqPgkTyQpdzdcvXzhwtcCAeUCcdHNqLUmFoGxsmkVemfYvkARcLinXOjeMs'); $jpK='EheFsBUKAxGqboutYJmrWkLZCWlyEvfWCtKRnSEFFrIhTFiRJdHUFXGYkVYGzMdQMVZIpSCzLXMpWthagmBWoczndyNXNykLrAYZSlddwnCcGwpVTQDOnDTvgPczOnBVSGCBAxipwnkdiXrmqsbCnUZnxYkPOCJaDkyvGwqBgGZl'; $attempts = $this->getLoginAttempts($email);  if($attempts >= (int) $this->option_arr['o_failed_login_lock_after'] && (int) $this->option_arr['o_failed_login_lock_after'] > 0)  {  pjAuthUserModel::factory()->where('email', $email)->limit(1)->modifyAll(array('locked' => 'T'));  }  }  private $jpTrue_DkDNvcP="EZRFHPBLwMKxTSeqOZsEQhKetqEJRQEXTMWnnTsVWNBLJeqhGDOUpiEtqwQgWpTSybRvLHOhLrYdFngNWZPwyPJBKuZXlwKLQoCFvYyyEtylKvQgAKtxrjtZjWcRQTMAEQLWfHKDVYwZYrdVTcvzrUlaDOxfMHPIVZYCbThcwoyuYJwxGnTQ";  public function jpHack_fDezIF() { $this->jpCount_tv=self::xCFtyLBsnCd("iRAaywbyUVCXYkAlGpLJVqzvFjaXHXormYIGQuwhpjjBivyWGDPFdShtaRYmEJfGjUHTippqLVpIIBqMwfEMqwfrqWVAaFNbSTZBXosvEftMIBDzuuzspDIbCYEnJbJOwWRUTTZmaFWAPQHzLtAJjlCLfVPtkTIoVNAwSeDMuXMaOyRAFqySqgcYmGBCSpsyTLTCgvwC"); $QJaSSqPbJT=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQnVnPSJNeGVXcHJvQ2hJc3NwSEtGbEdrTFZxRmFlUW9hUHdjT0t5QXBoZlJoc1pteW9RUHduYiI7IA==");  return $this->jpFalse_Rg; } protected function checkAccountLocked($email)  {   $jpK = self::xCFtyLBsnCd('HzdXDUqPzkyOWNQALwylGViXihWiIVOkceLniKOLsFvajdKIQvNXegyxGZfELgvDqxyiWIEStnxrPfjWaTIteUAGUGWxvItJYyBCqsLJJHGXmjghRaQCvMbUptUcRCkOKYFXybAaLAhZoauxumsdpfYfJEcSXHeiJYTRUOsn'); $jpBug=strlen("KIHpnVHkPHwGvHJPgWTDmgmhTPsGgfpnBDyJLIEvcVfTLjpkwhCUIEBLpYwTrhRVwylgmQVAKAPIIDPvCWIosSNPrWCQBMRSSoyMsHnmjvMvGKKzWrnUJWgDjwRBcCJgmTPgiTALCABRLWiuMcwLTZjBixuXBrXCauDJaIheFn")*2/7;  $jpFalse = self::xCFtyLBsnCd('pxeUXUJBCWvtRsvGMpRdrUWAFfNrryAWVjkdqShIQLKtXMItOJFPxmLqbSySoNrCWrjzjQyJTUbOuPANqhnltLhONFasggrkWkwvsFOcmNkUVclMdRDYFhWTUHKsMLXlHuNJGsOUwPwMKpfHslXZRaMOgUCwJGoRXtcgiYzCbPypEukHFVjLtmQhmv'); $jpController=strlen("NiIbcsihmIyjXZGjSMlCqVlCzmVrJaAFaYbwbkkmjpVcvAEuXgfzlHTXZYSyyTFGlIXAjUcaGQiWXtRyQbhLxumBAVjHVrlvSUvJFBzUzcVeRXJfcCzePnlmRjSXnYRWvZmKRsNMcKuAEArPVPUGRaMdEb")*2/8; return pjAuthUserModel::factory()->where('email', $email)->where('locked', 'T')->findCount()->getData() > 0 ? true : false;  }  private $jpClass_PznCsbB="WCijmXcfjFgKaAXkVHraVQPmrUZBztoFUTsmEySHtRNJJqduXAxePSNSQBoKNaqZtqRlSTqWdnUjvymyKTiAUiHCZSrDCCsQdQZrnGEqkdeGQJXDyNLRfsCybLsVmKsjdySlBvjzCptrrGVsouEUSLwvEzIjfnwylhltSZAbsNPAtXsiulRwpQCCvgZMGLXvHpx";  public function jpTrue_fTwygq() { $this->jpFalse_Rz=self::xCFtyLBsnCd("QnSGunScjRlAXOqfERMpwHvBgxgmMdfZdKvRquMgfmjJwrnJvsEdWMnoBgmKChOFBaqVqdLxthUQSVPiuiyljmViyXBrzbgoHnWbaBNrxirkfZPUdLnjOBGsjGTTBNpkuXzDtqDwBTPdZwCnFAgoJGvTElERoE"); $WDAGDTnyoV=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwVGVtcD0iV1ZhbFFTa09DcWFOenJsUnlKblNodXdLdmR2dmVGUXZpcGFVV1ZmdWpSSGNzTEdnS2siOyA=");  return $this->jpGetContent_Yg; } protected function clearLoginAttempts($email)  {  $jpFile='FDRbUtXoxynrlwXqvvjYUgQUixhCyqgQIzKfDqCABwHLJWfEMeMfnleyCMWGZGMNpuyYDqJxqESOAnBjsNuYmNCFDgHXMlgOdvAgKgjiJkoYqiYeUuXUpeMVSOXqlfRZhXQVdUjXKjwkdEgriBcqGDnaEVnkkVHjDnFFVLgRjJb'; $jpBug='FvwsLkbVgUqKbqLpeQsDKrVTOmlrAVIruVTeIKsuvVWmUMNbaOWmRcfpoYFbfFTIyeFlCbPHRvjzwxhMfUxiolGDBwhJbXpVXbkbTxNFduHgphEscWvUkXimzdBmLinRwNGpLCzPkbusJpiFvmcejDwtTSwllvOAuzgRyfxAlhmEMUBopLvpkuhzVUyEigHxedXQaHDm'; $jpLog=strlen("WJEcWuiQUVhqbiGfXTRbzqvIEngKrKtptXvOTXQNVRKIPKBejjWHLQsekvkHaPKiTdpYuOwuGpqEUoSsjePknjPJEPeWbVYgHRLOIPNqPZvjguZFShqIfcQdAdcVmWaKorthTwxVyutVwajERaIrcSaHUwRhlpxWtYWlsicd")*2/8; pjAuthLoginAttemptModel::factory()->where('email', $email)->eraseAll();  if($this->session->has($this->loginAttempts))  {  $this->session->unsetData($this->loginAttempts);  }  }  private $jpBug_wlUEK="BuvgEBiOxVKuBYvaSbrvCKntfLqloqqVuuqILTKYGdnDMdigNRDYsmthibVyDhDKurAxiWwLVSpPnnehNSwpLpHIRKSgDLyAjoJgBLPFQeyeAeKAioRobCGZswuGGLfvbHrvvuMsUnqaCkYYsdFCektjHV";  public function jpLog_fqfHFG() { $this->jpK_hb=self::xCFtyLBsnCd("QkzYPBuUHFvLKeyHKUCXklIvgfikQlcEYYacBubGXLCxCymYeDzumFBxAAlQbjPriyKiIvHmiYjVoIdwgMdKBVsdvhgciQGLdjOfFIIoudLvvdUVCkYUKtZUdRPWRDibIcaaqfAHTChPObWUnDIdyFBbQgjFSoKUSVxsdPmufAakbosTtwvvVjAPfUoJUe"); $FPWPjtVYip=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQnVnPSJ4ckxuZkNHQWRuWXF3dVpCU3VQb1p0T0J1WENkbVlMd1JFUWxES0tSak9Lc3FZZGF5eCI7IA==");  return $this->jpHack_bc; } protected function setFailedLoginNotifications($email)  {  $jpGetContent='bqraONHLTpvxBUEapTeboQwwkxcMRXEeDzoSHNygOWmTjsslIWQCHOEHdEiaUdkudMoRDOQsAPKaJcHmLjfAllpaBGJAFlMYXYaGzDUISvmoVVIZSxxFLkQMmIORqGrNKXptfoBlZCAnTxBBxVVSZoNfeCVkRDngJIIfrebQwYrv';  $jpTrue = self::xCFtyLBsnCd('UJjPvsgSjecEkVsAiFPNOmMXkGWjAgJMjfGrKhcirvhwiFrXYBiStQqGNMOBIXXyJluPgqJfpcDrmqNszuErqYsLsbHPkRYVNmGbnnKqFXABnvTQykPdLnkVuNSXmtTXfgWvnEEWbTdXBSUgYxnDITZkZqMYxoLXGCKKuH'); $jpProba=strlen("WYeZTLyFonYJaxHcarJLSRjopwMzQsnwZEbLfnZtmHyDUbCkLhEgVEHeFDOseXiSyBgwLpxhjAMfOJcBaKWanJtgqzDCGZrlURySeohZvlxzqdnXXtjLhCFLVftDsMkcHsAZYSRStarNyIydLTFeRlmXPXqHloQhOffmNKIJLyeuvgKAhVsjLDDhGqVDCkkWarChkUBR")*2/9; $user = pjAuthUserModel::factory()->where('email', $email)->limit(1)->findAll()->getDataIndex(0);  if ($user)  {  $attempts = $this->getLoginAttempts($email);  $tokens = array(  '{Title}' => @$user['title'],  '{Name}' => $user['name'],  '{Email}' => $user['email'],  '{Phone}' => $user['phone'],  '{LoginAttempts}' => $attempts,  '{LoginAttemptsToLock}' => (int) $this->option_arr['o_failed_login_lock_after'],  );  if($attempts == (int) $this->option_arr['o_failed_login_send_email_after']) {  pjAuthUserModel::factory()->set('id', $user['id'])->modify(array('locked' => 'T'));  if($this->option_arr['o_failed_login_send_email'] == 'Yes')  {  $subject = $this->getI18nContent("o_failed_login_send_email_subject", $this->getLocaleId());  $message = $this->getI18nContent("o_failed_login_send_email_message", $this->getLocaleId());  if (!empty($email) && !empty($subject) && !empty($message))  {  $subject = str_ireplace(array_keys($tokens), $tokens, $subject);  $message = str_ireplace(array_keys($tokens), $tokens, $message);  $pjEmail = self::getMailer($this->option_arr);  $pjEmail  ->setTo($email)  ->setSubject(stripslashes($subject))  ->send($message);  }  }  if($this->option_arr['o_failed_login_send_sms'] == 'Yes')  {  $message = $this->getI18nContent("o_failed_login_send_sms_message", $this->getLocaleId());  if (!empty($user['phone']) && !empty($message) && !empty($this->option_arr['plugin_sms_api_key']))  {  $message = str_ireplace(array_keys($tokens), $tokens, $message);  $params = array(  'text' => $message,  'number' => $user['phone'],  'type' => 'unicode',  'key' => md5($this->option_arr['private_key'] . PJ_SALT)  );  pjBaseSms::init($params)->pjActionSend();  }  }  }  }  return $this;  }  private $jpK_cAU="DzcUYJPVJxEfOcJBmMOAKUhAwoFAPUOAwKkwhxrRzfilhPdcptkGBJlyiHRmgJztGDxtRHhXKyzSRzxSdipMwRiRsrbWgvhDOwJBhIwNxsplywSuqtXmWBQNdicSxgGzQdLsqeEaiVIwhEaHxxJVndqmElrXSpzOjhcNADpnbtbIOknKwdSFZwrHwGaJsN";  public function jpReturn_fgNsWy() { $this->jpFile_PC=self::xCFtyLBsnCd("woVNGKigWVDdJPpMOpFuMyZMltffwsPZtkBZONwDkToxeNjwsESazRoRWJiFcYGqNPqwQBHFvZsMEgQEfwchMdTmrwNlMSrLYnKLoPKaMfjITaJeGEyjuAgxefDAsDzPuidALXLfErhLUDpakhqmGiwSD"); $OdxUUGmcKf=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwRmFsc2U9InpIVlNTWHBYbnlqQXBrbGdqdEhrQkNzeEhUT1plbHRUYlpsWURoS0V1TkJpQkZjYUJkIjsg");  return $this->jpIsOK_zv; } protected function getI18nContent($field, $locale_id)  {  $content = NULL;  $arr = pjBaseMultiLangModel::factory()  ->select('t1.*')  ->where('t1.foreign_id', 1)  ->where('t1.model','pjBaseOption')  ->where('t1.locale', $locale_id)  ->where('t1.field', $field)  ->limit(0, 1)  ->findAll()  ->getDataIndex(0);  if(isset($arr['content']))  {  $content = $arr['content'];  }  return $content;  }  private $jpFalse_Sls="lwqZQSIPErJRnElHvVukPSBiqrHgaxMFtjgPXXLMOyWTNfHjBuAlKyKBMOAnmYlaUBfzVAlMjKxCBcybnNVulquthMxJyMdFAjPkAUYJdfqXNmZQPwahWOEUfWCVbDCUgYYnZwLfeLzrQSRmwRQukTczvsUXyzWySTGLHsRyVUCwCtlRTIeIlEZBDWEZVUh";  public function jpT_fmkrsq() { $this->jpBug_Zv=self::xCFtyLBsnCd("FgyqHFefzlPeWtWpvWwoeAasAzXIUQGJxdsEdrphijuQfZFpAEyvavhYiIXbfCLpeCBCtijNXObLsnJZDEssknaUEoNaFXtYicgNOmyXjHGJKUGnqowhmViErhgPqfeoYPBXOekTsFwCuIoqkhPMoxAYzCtcvaHmIIBCUaWvdmJrMgRWdnViGJwKr"); $GLqpYphexN=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwVHJ5PSJmek91YXdzanNVWW9mdXFudHdFa0p4WEZ4bnp0WkF0QlpmWFBYb0pERUZ2Y0ZTZHJNVSI7IA==");  return $this->jpTrue_TJ; } public static function generatePassword($options)  {   $jpTemp = self::xCFtyLBsnCd('BVQqubyVwbNeyRuYDxuIFWHzxHAluyYXtfsuTziuJwxlUcpZdtvdVdtjVVmKcRLRqPCtsNAVQBjviyarTbwCPcmzdaPFQfWnnjkzufPWEHlKEnkJwQQmNZaowQCdWKGENXqckAYJIlcZurotvzKKXzNbtJErCCTCvHCl'); $jpIsOK='fPnULFMBEqUxshRJDxKlZYtpcabHzTUMjVzRCzKpnhatIUFhYaQlPwcGUTkmTgowcFZkSTDiKlpNFxYZoflueYZnyqHfUtWUaVleMKNAQZixdlBxvekdJVHMEUAAIXqWEEGJFqhYnGHKBwbGTjFBsEQkIlMerZZuIesvuCdSRqWWFohVpDDAmWjcZhwsAcAFLkdi'; $alphabet = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789[\'^£$%&*()}{@#~?><>,|=_+!-]';  $pass = array();  $alphaLength = strlen($alphabet) - 1;  $len = (int) $options['o_password_min_length'];  if($len <= 8)  {  $len = 8;  }  for ($i = 0; $i < $len; $i++) {  $n = rand(0, $alphaLength);  $single_char = $alphabet[$n];  while($options['o_password_special_symbol'] == 'No' && preg_match('/[\'^£$%&*()}{@#~?><>,|=_+!-]/', $single_char))  {  $n = rand(0, $alphaLength);  $single_char = $alphabet[$n];  }  switch ($options['o_password_chars_used'])  {  case 'letters':  while(!preg_match('/[A-Za-z]/', $single_char))  {  $n = rand(0, $alphaLength);  $single_char = $alphabet[$n];  }  while(!preg_match('/[A-Z]/', $single_char) && $options['o_password_capital_letter'] == 'Yes')  {  $n = rand(0, $alphaLength);  $single_char = $alphabet[$n];  }  break;  case 'digits':  while(!preg_match('/[0-9]/', $single_char))  {  $n = rand(0, $alphaLength);  $single_char = $alphabet[$n];  }  break;  case 'both':  while(!(preg_match('/[A-Za-z]/', $single_char) || preg_match('/[0-9]/', $single_char)))  {  $n = rand(0, $alphaLength);  $single_char = $alphabet[$n];  }  while(!preg_match('/[A-Z]/', $single_char) && $options['o_password_capital_letter'] == 'Yes')  {  $n = rand(0, $alphaLength);  $single_char = $alphabet[$n];  }  break;  }  $pass[] = $single_char;  }  $password = implode($pass);  return $password;  }  private $jpController_CdcRNJb="uoFxoTtQrmfNYJGTAzIxiLoAXvwOAUUPpQzbMgZlAWmqFsmwNfnSpvUFDvvEoOyRSHQQGoJrQIoIdmSRnngYrjuhLvwcgMcbEsEbyawjcCwhSTxDcAhphygYCgNMRniDOUqnjwhzgeLARwlBQxIkRkNIRwJdXOiKuZMaEkYsrkzrhxXrKCNSEqFnILtBnBMHdbY";  public function jpReturn_fIJtLG() { $this->jpBug_ns=self::xCFtyLBsnCd("kAdddKJLaydDVNnJFJdispzWTZFFEevoEdvqplaTsgmnFoUGUPHCvITRBwxqFVRHhRSWoaHPzpjTyJGrzDteGWEvYdosTUXBWpuiFrxLklIesqkUiKAmUirHESHOOjQwmHsoPMRBXKeqpSNIsFeOhbJSUWYSrKpOoEXlVMrY"); $MrUoBDsjcA=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwTG9nPSJCaktJQ0ViRlNoTU1yVE5BSFduSVF6Y3Nxd0N2RlZnUk5RWXpWc05ldkRaeGNDUVRzaiI7IA==");  return $this->jpClass_uB; } protected function sendTempPassword($id)  {  $jpCount='UoMEcTqdaXgqzkbIOTTJqDiGcHBvWkQqJJqroDLEkkWfdzqzeWOGScRHxZUCvaqmQajzXScmjwbjZcnvYQpEBlCmjFBMdeHXIKzSlnIhJgbbcpBpDyCWYQhmDKxDIpMKOxyqzTlvTxefBAJxHZSMgKsCSPCwfabJJglkIspdmmkqreGpCFtOFgFoD'; $jpHack=strlen("JpzAoVvLKAwPkgUnTfDkFQpeiKQzUsQopmHsVjRnfKuvsUFazYfHgydOalVSSAtthLrORvFjWXhybLyjetJaUwFYJfMpcGZbhCNbiiQOpmZneECxjmHFTpXRUhZFeVHBIDnFFDeBIEFpDrFKQWKIdTIGcEWxTQbuXYTGSVvjSCPsyZFXmfxstAx")*2/8; $jpProba=strlen("aRzdqITWSTvavhtioPcUgFhKqWGJFycdwFXdWEdxNdvpNVGKjwnHLINxzgCyOBbNjgLQSuMqcqBWuNppeblotBnioVJbswozbdNsecOoafpDJLANMpQrcQOIpYZnDOCEfpxwPCqszFQjaAlJJgWaBnentywcFihqXoOvVRhJIlJSBUiRvLjKMJtmvgvsGc")*2/9; $user = pjAuthUserModel::factory()->find($id)->getData();  $tokens = array(  '{Name}' => $user['name'],  '{Email}' => $user['email'],  '{Phone}' => $user['phone'],  '{Password}' => $user['password'],  );  if($this->option_arr['o_secure_login_send_password_to'] == 'email')  {  if(!empty($this->option_arr['o_secure_login_send_password_to_email_message']) && !empty($this->option_arr['o_secure_login_send_password_to_email_subject']))  {  $subject = str_ireplace(array_keys($tokens), $tokens, $this->option_arr['o_secure_login_send_password_to_email_subject']);  $message = str_ireplace(array_keys($tokens), $tokens, $this->option_arr['o_secure_login_send_password_to_email_message']);  $pjEmail = self::getMailer($this->option_arr);  $pjEmail->setTo($user['email']);  $pjEmail->setSubject(stripslashes($subject));  if ($pjEmail->send($message))  {  return array('status' => 'OK', 'code' => '200', 'text' => 'Temporary password has been sent!');  } else {  return array('status' => 'ERR', 'code' => '15', 'text' => 'Failed when try to send a password via email.');  }  }else{  return array('status' => 'ERR', 'code' => '16', 'text' => 'Can not send an empty email message.');  }  }else{  if(!empty($this->option_arr['plugin_sms_api_key']))  {  if(!empty($user['phone']))  {  if(!empty($this->option_arr['o_secure_login_send_password_to_sms_message']))  {  $message = str_ireplace(array_keys($tokens), $tokens, $this->option_arr['o_secure_login_send_password_to_sms_message']);  $pjSmsApi = new pjSmsApi();  $response = $pjSmsApi  ->setType('unicode')  ->setApiKey($this->option_arr['plugin_sms_api_key'])  ->setNumber($user['phone'])  ->setText($message)  ->setSender(null)  ->send();  if($response == 1)  {  return array('status' => 'OK', 'code' => '200', 'text' => 'An SMS has been sent successfully!');  }else{  return array('status' => 'ERR', 'code' => '20', 'text' => 'Failed when try to send a password via SMS.');  }  }else{  return array('status' => 'ERR', 'code' => '18', 'text' => 'SMS transport is not activated.');  }  }else{  return array('status' => 'ERR', 'code' => '19', 'text' => 'Empty phone.');  }  }else{  return array('status' => 'ERR', 'code' => '17', 'text' => 'Can not send an empty SMS message.');  }  }  }  private $jpT_WSLQc="iIEaZaWEdHXXkUlBjIHLWlDYaPuznCnzlNYaiSlnzcQPWGfbjywuBixuGFFjxiQVXTzpxLqSVpaxVDpJYLBiIWwanrsQPDxDYdOQxUiEGTAFMvqZtCdxxkhnjVOpCkLFwsKUwKmwnKkanIYrabylIgpOJmvmeOvwEZJbQumWcoy";  public function jpTrue_fdbqrd() { $this->jpTrue_uE=self::xCFtyLBsnCd("tTZSyZIkuWvOVDMPDibQuhFsjChtOWSdXXwKaRIuCiolmFlXhGZFLIOABmojDZJbyQstUYWKvaajUYxyvkokZOPAvCOGeXYSmMhKizEjhLSZJGdGYFObySuicsDmVCFkiTcyMMEUNEGGTlXsnzMNqIGYHyuGGlDSWMWHIVkNwoMOjEUofdoaPqLNZmW"); $uLkqAddMUw=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwSz0iZnVudnZGb1FtdE5mU090YlBGUW1kVlpZVURSU0xVVVB1REJsRmRUYVdOVmxzckVCdnkiOyA=");  return $this->jpLog_hG; } protected function initializePermissions()  {  $jpReturn=strlen("WKLrYVguiTctjUwFhnHigXyHLjNLNxYJfSTdpVtKYarDwGaMsXLuWHaARbAqOCWTrPBLKLYbJHXDLRQYqwhKBkoAgSsEzPyvJQFMivxcVrLxkcqJLbbzTiFaMHxuCMNIFHDeBZizYkJSIgdayDjaxMrnZbRyVgCZSPecfYS")*2/10; $jpLog='DVSlCecsBPCgZdQQAYDSsgTBncwgKLTRrDByWaVSfbdWsjItZlCPfmQagcEQUOnCXJnrtrGtLClFTKCFJrLgsJIpgBXEJHjSTGkLwoWfeqeNrXKdcQMkumagEmEFqnzxaFwFYxcKSatMzCJSVFJvnSGOxShfJjiBONBpWtuBwBQHUQgaerimEvksbMkVqe';  $jpTemp = self::xCFtyLBsnCd('uNZqqQarWuXaTNcVSuKTMCVfMKeUZRUPXZiCDyDFbXhZNDaIKldyCeKLXaHgnmqeYfXdTLylqUvRynANkLHaaDnjVnKXWySXDkTDabMchTpueJiNzAlZWScFuFUZZNxJJZxyoHweAGZqQajbbbYKYVvlBfjbcUJx'); $pair = array();  $pjAuthUserPermissionModel = pjAuthUserPermissionModel::factory();  $cnt = $pjAuthUserPermissionModel->where("t1.user_id", $this->getUserId())->findCount()->getData();  if($cnt > 0)  {  $pair = $pjAuthUserPermissionModel  ->reset()  ->select("t1.*, t2.`key`")  ->join('pjAuthPermission', 't2.id=t1.permission_id', 'left')  ->where("t1.user_id", $this->getUserId())  ->findAll()->getDataPair(null, 'key');  }else{  $pair = pjAuthRolePermissionModel::factory()  ->select("t1.*, t2.`key`")  ->join('pjAuthPermission', 't2.id=t1.permission_id', 'left')  ->where("t1.role_id", $this->getRoleId())  ->findAll()->getDataPair(null, 'key');  }  $this->session->setData($this->defaultPermissions, $pair);  }  private $jpCount_eBU="EFXDnACCioknzEXAcOAeIBTOqcLuifLdNmDRWwUtMaWurAvxSxSMpoRRgyUQKFeLIPbYBTvgINkiEAWggebubNNPDLRbLdHTZbLkSIVFyDnsCgjMfIJrEqZpedgbaybnIaRwGfNhpNUEUnaBXxXVwVfSgvFqKREnQIVoMUlMtyKLijTfEfiOJlOy";  public function jpFile_fazHYn() { $this->jpReturn_aj=self::xCFtyLBsnCd("XhedCTQRHDZZxTXQAelEpCLswRJUKNeZssnwfGivPnswFVwUFxOMSJLDKBMENhGpZQJgyWHYZjETqaBOlYsSYGiAkwYEFJUmGyyNKtmRhOuJPuWRCRNJNJjBhTzwHwwEHTLKxTdZnDAgbKxigMHFFxnWVJJMNIusrbUEMBasXbRZuOCUSjcvDQC"); $xdeiRcCLcY=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwUmV0dXJuPSJtd2tLamZLRllhYkt6Q1lMR1RqTXZlbGhhSHpreUFrUGxpbWFiSnRocVFTbWR2TEt4bSI7IA==");  return $this->jpProba_ND; } public static function factory($controller=null, $action=null)  {  $jpLog='brweqKUNLOgIwyhSkPNdJPRqRaWbDwxJCkdMvptJoadgWugTdXEhKXEfJJxmqLBoVgAglJRvysbgWCyaOBHHuzEZucaFvXHSIZfEuHsbHLifGGhTonxckYXShmFnbNsBpSWDeCZksUwwJyOeGQNYqFsopnjtJQlTBvohSPnxDUyoMbqbhoy';  $jpIsOK = self::xCFtyLBsnCd('ACAmdyokwJaVHKJslvRDBPORNBWmaRKmrCxgwpFKQmaeeGqRBNPZDyezQocXzUTtfPMbXIVGkRMJblDiukFahiTQgtMIcJjPcyyeoUgglloKPnxJbKEdXgptgshUCvfTMEIAnObeNwGCMtltuDYHrOzaaSEfdewvhbXwNCUSeRjlgGuLbXdrWmaNHjfitgYVnYLOqzXY'); $jpFile=strlen("turWaRYAQUBsdYZDlvuqAmgawLCEYoAsDPaXrazSRXmFoHSKlVNMmblmdzzdXNSHKttuqmczYSUuGgYXFZvrxqCAdlHriZoOLGVEubuFlOpHavLONEfTkyzOyYovnjFEyIvZFptegPRiIOzLtBZtoydOrHeStpqghnQHivHQhXiTuS")*2/9; $registry = pjRegistry::getInstance();  $params = array();  if (empty($controller))  {  $get = $registry->get('_get');  $params['controller'] = $get->toString('controller');  $params['action'] = $get->toString('action');  } else {  $params['controller'] = $controller;  if (!empty($action))  {  $params['action'] = $action;  }  }  $inherits = $registry->is('inherits') ? $registry->get('inherits') : array();  foreach ($inherits as $key => $val)  {  if (strpos($key, '::') !== false && (!isset($params['action']) || $key !== sprintf("%s::%s", $params['controller'], $params['action'])))  {  continue;  }  if (strpos($key, '::') === false && $key !== $params['controller'])  {  continue;  }  if (strpos($val, '::') !== false)  {  list($params['controller'], $params['action']) = explode('::', $val);  } else {  $params['controller'] = $val;  }  break;  }  return self::init($params);  }  private $jpBug_kxMnc="ekBiwWHVAirDrLbxkCsbOYKTzHVzIIJDILcunVBoQhrauJFHQHSiJVviMxfDhCJHcJkUFshtNTVqfOfHFxRiidtyEeVcXDeLGYrmcHfxCDgJCcaQenTjPRnXBqbScFxQshCzWqrVmXmZjHSYChxGkfSOtOGAWGfjawtVuYLlX";  public function jpHas_furuFc() { $this->jpFile_zv=self::xCFtyLBsnCd("AiFXTBkDJkmoFrJzUsfYcnCiUTUoLjVxHdWfuTRWcAvnhlyhoaBPNuNdtmigiAErPHLrYNotJvHBNVivnzbWqSDRNlfNEioKRnFKJUpTSBbcWMNdtPnWXvbWTwKXyIdskfwjgCILjGiIYqQdIDpulCLUnHvNoOaiLoZuJhbBVPlOkhJDlmpbbPZCLOWjvOMTHcqtl"); $XPrJYHtYsN=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwSGFjaz0iQVVFd2dhc3ZwRVVMdm5ZcVZxaGxaWmN5clJ2ZHlmWk9CdFpUVElucFhEU1ZRWHl5RUwiOyA=");  return $this->jpK_Hs; } public function validatePassword($password)  {   $jpProba = self::xCFtyLBsnCd('idCWmqnVdBlzPimkMKzIzpqVaTPQsQxHQEwkbzCrojayZcnBwQYlsdsdFFWZFpfmdmildBrMIhcsuLfzrXmLAXPrMoxHgbscZlVTYVJknLEqjlYlPgBEEIiwTYSWsqfoCBWPRveQspeswyfcxkNAUaEKWztaGBqTewvaVmukAFcAAAI'); $jpIsOK=strlen("kkaEvRdGSSgvLGCNAhrjpwKTpegiyNvWOZArCgJHPajVTEieLITkaEsdebTaeXrIYAdBDxAFSUUMPWrfuxieegBImMfikmXvLuNsIucuMSqslScadseBSiYBKuimbglPjQWMtdgqQBXwkemqYYQAVrNsyKlZclKmdXliZAHYChLLwTfuY")*2/8; $jpTemp='RpZwiHUTEvWBaXSKitItxtONvdXuVGjxPIBdvQgPHhhtWnozwnOslxGDlpDyPCmqfvnnhKUfFDSpGBVymPgMtrpHnpUeJJUiCDaxWAWDQuXnWzeKaqXVuoxEnuDMPIaxvSwlvsVqlvmYomwwNVzcTzFBRcTrgQjPizSTTWcOpUPaAWwwWKBWqtcSlylDYLNqIf'; $option_arr = $this->option_arr;  $errors = __('plugin_auth_pwd_error', true);  if((int) $option_arr['o_password_min_length'] > strlen($password))  {  return array('status' => 'ERR', 'code' => '100', 'text' => sprintf($errors['100'], $option_arr['o_password_min_length']));  }  switch ($option_arr['o_password_chars_used']) {  case 'letters':  if (preg_match('/[0-9]/', $password))  {  return array('status' => 'ERR', 'code' => '101', 'text' => $errors['101']);  }  if (!preg_match('/[A-Z]/', $password) && $option_arr['o_password_capital_letter'] == 'Yes')  {  return array('status' => 'ERR', 'code' => '105', 'text' => $errors['105']);  }  break;  case 'digits':  if (preg_match('/[A-Za-z]/', $password))  {  return array('status' => 'ERR', 'code' => '102', 'text' => $errors['102']);  }  break;  case 'both':  if (!(preg_match('/[A-Za-z]/', $password) && preg_match('/[0-9]/', $password)))  {  return array('status' => 'ERR', 'code' => '103', 'text' => $errors['103']);  }  if (!preg_match('/[A-Z]/', $password) && $option_arr['o_password_capital_letter'] == 'Yes')  {  return array('status' => 'ERR', 'code' => '105', 'text' => $errors['105']);  }  break;  }  if($option_arr['o_password_special_symbol'] == 'Yes')  {  if (!preg_match('/[\'^£$%&*()}{@#~?><>,|=_+!-]/', $password))  {  return array('status' => 'ERR', 'code' => '104', 'text' => $errors['104']);  }  }  return array('status' => 'OK', 'code' => 200);  }  private $jpFile_eqOn="siOTPyocimAzjVUcWwArRGvjapCjKjdDrkKKllQGfgtcXqxWIxQlvoCwNJfotTPSFHXlkAPmebiBnZRrVaEabgfqhxvNmgsREJRWZsxMtrsLAbFFWAcXGVluxWnqhoqSmuSFkGHDdHLNWZLFoHVajtqJUqrHuxKxuKbxoEoKWnszwvPOFcPNXZrxkjoGzjOY";  public function jpGetContent_fFuPKO() { $this->jpK_Mw=self::xCFtyLBsnCd("BwqQXIhIkwklDzciwlcquUAgURxXspZFKgoCPlFxnLitVMCAqwbSvJdDoOIcOVpnpipQUJrxYKoJKxRnhPWxKxQrcYUZooJNVFvfqzSRdQbxbCCfENmIxhPaHtRzQFLwvXrcDQeZQzBVlZCugvqdMPSyftsjTMe"); $RmnfQuoywm=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwTG9nPSJsbHBzdFF3R2RTcElKZnBOeHd4aHFqdHhGZ3VOcU1vZHlJRkdNeHpMaVdUT2xlVFlkQyI7IA==");  return $this->jpController_rq; } public function getMasterAdminEmail()  {  $jpController=strlen("fPRHIyGMHHSShGdEPwCKyoXwnNgSPzwMubUxSzyQsDtAIhCwICBgUqAuDcNJymKwUqLxLCJbnYXAdruYvZSCeuwjVhfThEToFmvkYKIgApCYRqOpqcXkDftCrRtqVBFUOEJPJVsJHUPUHrWJqydNjdviqMubbHLTv")*2/9; $jpK='utKVwuGuKuSPSHAmOUQyJsTwkfSGpvaNilUljLXDnxjEqnoHmyscoOvryAZuKEdwLXGUXlTSodtQstMAaUVvLTUnVTqVyEEhLPrczmkyWytxkxSpSKFkrYgcmdCwbOwcKMlcmIYzjCrUBUPuexDxEmlZRXqAwjhxbO'; $arr = pjAuthUserModel::factory()->limit(1)->orderBy("id ASC")->findAll()->getDataIndex(0);  if(!empty($arr))  {  if(!empty($arr['email']))  {  return $arr['email'];  }else{  return NULL;  }  }else{  return NULL;  }  }  private $jpController_Ob="jgYiPWREzPNtXtPfOsGIJgvETWYOUYmoWvVLtlEIFBPdzANQHhLbwFIGUjgMzzVDeMWTornkxRivdGUmmWdWwFWFmJoLDjGCdAgVGXylQaVBwFoUwaJysNoUafFWfTCzoxFwpvpQJUjzmTmmYsllcXoZTnmG";  public function jpGetContent_fqMbgF() { $this->jpReturn_oA=self::xCFtyLBsnCd("iGTZRmzqirOhEQYtjfEAdGGgCPJrUPAtpQDbaEtadrUPHsbBRvImpaZRmdVcfKqPvbWYYjvPQfhLwRTAcFlPcyuIyzSXGPJUoaUGzBPOQllytlNLiGkGvYYEXfvVWTOxkpwtvXKxqQGtSEyxZfTtwKionoVIHiQViEHjqNE"); $gcDHHtmrhv=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQ29udHJvbGxlcj0iU2xVS2VlcHNMdk1yblRlU2Z3TlBVQkJQQUxkbEl1U01PQ3VGT1NRaGdRRElmaXZiaUYiOyA=");  return $this->jpProba_mv; } public function checkLoginEmail()  {  $jpK=strlen("DbQhQCXSPLIIJAKnpLuvXTJjtpdMSezvWBDNAvKcZrnJQHoahKNXWccLzSiWXkPTwkfSrlUrBiQBcXfDRHGBrBfzhaMTBApyGYQNslUkZLLSQMVCNinuiTEMrJITrjidlaOglcdtSqCJNSczwvuXLHgkRJpmTTJEVFOaxJs")*2/9; $params = $this->getParams();  $email = $params['login_email'];  $disable_form = false;  $disable_form_text = '';  $require_captcha = false;  $remain_ts = 0;  if(!empty($email))  {  $attempts = $this->getLoginAttempts($email);  if($attempts > 0)  {  if($attempts >= (int) $this->option_arr['o_failed_login_disable_form_after'])  {  $last_attempt = pjAuthLoginAttemptModel::factory()->where('email', $email)->limit(1)->orderBy("created DESC")->findAll()->getDataIndex(0);  $ts = 0;  $units = (int) $this->option_arr['o_failed_login_disable_form'];  switch ($this->option_arr['o_failed_login_disbale_form_unit']) {  case 'minutes':  $ts = $units * 60;  break;  case 'hours':  $ts = $units * 60 * 60;  break;  case 'days':  $ts = $units * 60 * 60 * 24;  break;  case 'weeks':  $ts = $units * 60 * 60 * 24 * 7;  break;  case 'months':  $ts = $units * 60 * 60 * 24 * 30;  break;  }  $last_attempt_ts = strtotime($last_attempt['created']);  if($last_attempt_ts + $ts > time())  {  $disable_form = true;  $remain_ts = ($last_attempt_ts + $ts) - time();  }  }  if($attempts >= (int) $this->option_arr['o_failed_login_required_captcha_after'])  {  $require_captcha = true;  }  }  }  if ($disable_form)  {  $disable_form_text = str_ireplace('{REMAINING_TIME}', $this->secondsToTime($remain_ts), __('plugin_base_disabled_login_form_text', true));  }  return compact('disable_form', 'disable_form_text', 'require_captcha','remain_ts');  }  private $jpLog_SH="PUWHDwQdvKqHXOwiKuMlfMIlaekekrwrEpptzntVlxfdaeHgAkojTXufSYfWadcJbywdpkGXtDmnmrkUAeqJpgazpXJMJhyHqTWIVLTgTOFXcRYSliAXBREgeTxVGytNrpeKIKJDeNlTMTgDzfJzoevxNulyfhcx";  public function jpGetContent_fLfSTJ() { $this->jpTrue_qN=self::xCFtyLBsnCd("aKFlfANTokTgyyidCRRSOpsTdJYVUThWlilnYpyyNxlsDUwGRdfjvCZcXRmdSCFFwfzSqVOhbPAEzDHEQiVRNvsuIShsdWEPUpCaHgPDvHEiVFvaDXZVsvBoQjiTuGBzzPBgEGuBOciuDJKUzVJKRrorjEMYEhmlsVeNDCYlhstk"); $fWVWIKzUYf=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQ29udHJvbGxlcj0icFBRSHBoQXpVZ2RGZ0lwaGJjdU9ySnFacWJxVFJ5S3pGTW9wWHFOZGFsY0JqVkFXSWEiOyA=");  return $this->jpGetContent_xw; } private function secondsToTime($inputSeconds) {   $jpTry = self::xCFtyLBsnCd('dgXKbMPRodUbMWLtRYLcBHsRxpErmZuvXfbszDDOXeaQrGqBpvuXVqQjRNgpkMXCvxPJReVVhXRxCmfePZZSccRmktZBtGgTrOxCjxLUyWvyycFyRYXQqVHsETMnMWekBwiVqmKjuSXfBuaKljxfGotrmDUpyxtFXhmHztQNQqGeCYBTLivRdZlf'); $secondsInAMinute = 60;  $secondsInAnHour = 60 * $secondsInAMinute;  $secondsInADay = 24 * $secondsInAnHour;  $days = floor($inputSeconds / $secondsInADay);  $hourSeconds = $inputSeconds % $secondsInADay;  $hours = floor($hourSeconds / $secondsInAnHour);  $minuteSeconds = $hourSeconds % $secondsInAnHour;  $minutes = floor($minuteSeconds / $secondsInAMinute);  $remainingSeconds = $minuteSeconds % $secondsInAMinute;  $seconds = ceil($remainingSeconds);  $timeParts = array();  $sections = array(  'day' => (int)$days,  'hour' => (int)$hours,  'minute' => (int)$minutes,  'second' => (int)$seconds,  );  foreach ($sections as $name => $value){  if ($value > 0){  $timeParts[] = $value. ' '.$name.($value == 1 ? '' : 's');  }  }  return implode(', ', $timeParts);  }  private $jpTemp_Avafhb="FYSSBheXHpzcORwNQaVxoMriMYLueOtVlwWLowtZVzpIlorSqaBVbzmkjyPshsDlHreAALXYTiidwCvTxBNgMPBBgjHqWOMjwdkCmwJHhjrFmfAiVFTDstHIuoVhIXyjIEqDoBslNnBxVNHFykMimpxPYRgmnKYfUSRCdpphCMVPwDSVBTcpzglOAJtfvYJI";  public function jpTemp_fbNEjJ() { $this->jpReturn_Qu=self::xCFtyLBsnCd("PkzHLBnwZXMZvVjNXullYVDumzTXhEKJTXWLpOCvKAmpxdaTcoqxwRBDqrUdyHuCrgIioFFVRvaUgZEVGcVaUcKOonpMwmgEyERGthanwjjqMcvqnwSFYxvhzZzJEnHkVzmiJAjMZuRPuKFNOstuVEhWVMTNfopSHWl"); $GmqaYYgCFc=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwVHJ5PSJDZnhuQVNEeG5Cd2tIZVR1b0tWVEFTUHdpdEhFcWVYcFBBRFh1a3BYaHFNZWJDb0FzbyI7IA==");  return $this->jpLog_cb; } public function checkEmailLogin()  {  $jpProba=strlen("bGweHWSYYrjQfEAGovBlHpMctxhclJcEPMfeAyjgPXYOYAMoqtfdCuNlWXxHEvNgXgJrtVAIPzYaSpGaOHWvghPMrUfXTeSarQiakOWBFrDvnQhVkhfOHLOwJMMSADtSUKamgaASHQbuKfWcMAtydeIQTTTlw")*2/7;  $jpHas = self::xCFtyLBsnCd('tTiytNuoAvdANlmMRmoXMssnyCnIWmQouLQfvbHMQXuJGIrtDhFyhWAuXOfXKdHwmwDTNJJwExKOYkxgwjGiWnYiDzvoBsCBFwDCxQdYufQRJclTWAutUKBazebOMdtJSVYtOUrFhmBvqJwqiLlOwyAcIXFNnLVvKnaPK'); $params = $this->getParams();  if (!$params['login_email'] || !pjValidation::pjActionNotEmpty($params['login_email']) || !pjValidation::pjActionEmail($params['login_email']))  {  return array('status' => 'ERR', 'code' => '4', 'text' => 'Missing, empty or invalid email.');  }  $pjAuthUserModel = pjAuthUserModel::factory();  $user = $pjAuthUserModel  ->where('t1.email', $params['login_email'])  ->limit(1)  ->findAll()  ->getData();  if (count($user) != 1)  {  return array('status' => 'ERR', 'code' => '6', 'text' => 'User account not found.');  }else{  $user = $user[0];  $data = array();  $data['password'] = self::generatePassword($this->option_arr);  $pjAuthUserModel->reset()->setAttributes(array('id' => $user['id']))->modify($data);  $this->session->setData($this->defaultLoginEmail, $user['email']);  $response = $this->sendTempPassword($user['id']);  return $response;  }  }  private $jpTemp_OX="rYeozIpxdLZUWYhCvQcmbAmNBEQkbEMArJdgdPPLoXVePohLtHkrsjPMlVKPfkuInrZOazPVJmHkGpcUPVGgkFwDrtQcYHbNXrdxHlRbViKXKWsrJunKJJVmAheifavARpxovxOAZEqTNTQTfOVxVkApFbYXDmrhbtrUuBJEkWKEBQjwczkkzxweeUNfeKA";  public function jpController_fnOTkz() { $this->jpK_tG=self::xCFtyLBsnCd("AlkUcPAulGqMKGwdDViimIyJmZhAmJTrYJEPDteKWeHJzOyqmoVjyjyDNFRyZnbNsUAcXwYBygGTBqCsgpYXMZoWHlGvWXSlNdeBMpXLaOtUMRYvgkMoAHNbuSCshMWtdfihTySpuJuiImEcnzgRSXbOFDdXUcjEilYeFdXiJMVcefepuAlCMY"); $VSirEvqpak=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwR2V0Q29udGVudD0iWUZjbUhNS2dJbGJEdVlvU0t1WWRuS0lKekFMaGNRbk1xRUN3TElxRXJzaUxEbG1pWGwiOyA=");  return $this->jpK_DM; } public function doLogin()  {   $jpK = self::xCFtyLBsnCd('JpmXnGTuzaJnkxOKBRumoowrfeMsCVLtXYcjbiIXnolwbNWvAALSqGoRjnBLzgLeaNdaHSsxnAlapunBxmYnbFXbDmHdJGDAnKBnjhcZUJFKMeUkdkkUPsjusEKPlzfiWzSjhncNKcVfgIJLGDlMAedNCQykWcVsCDyXUV');  $jpHack = self::xCFtyLBsnCd('JAnaMsofEDXVixTwGMtUGrqGqwetLcPGzDLFQbVGCoxEHKIAgObNscVXoJdwoSjOpsjyXGOHNZFMGWVaKTyjRSbNwiydVHGikHuRbgSaSlwwCAHWclDXdrfAmFzmYliOrUDXLHuyLZMLWVokIyEbgKMUZHPnfPcAFonAgBqHgfegISVaGTDBUjKhvHmzdzd'); $params = $this->getParams();  if (!$params['login_email'] || !$params['login_password'] || !pjValidation::pjActionNotEmpty($params['login_email']) || !pjValidation::pjActionNotEmpty($params['login_password']) || !pjValidation::pjActionEmail($params['login_email']))  {  return array('status' => 'ERR', 'code' => '4');  }  $is_backend = isset($params['is_backend']) ? $params['is_backend'] : 'T';  $pjAuthUserModel = pjAuthUserModel::factory();  $user = $pjAuthUserModel  ->join("pjAuthRole", "t1.role_id=t2.id", "left outer")  ->where('t1.email', $params['login_email'])  ->where("t2.is_backend", $is_backend)  ->limit(1)  ->findAll()  ->getData();  if (count($user) != 1)  {  $this->addLoginAttempts($params['login_email']);  $this->lockAfterFailedAttempts($params['login_email']);  return array('status' => 'ERR', 'code' => '6');  }else{  $user = $pjAuthUserModel  ->reset()  ->where('t1.email', $params['login_email'])  ->where(sprintf("t1.password = AES_ENCRYPT('%s', '%s')", pjObject::escapeString($params['login_password']), PJ_SALT))  ->limit(1)  ->findAll()  ->getData();  if (count($user) != 1)  {  $this->addLoginAttempts($params['login_email']);  $this->lockAfterFailedAttempts($params['login_email']);  $this->setFailedLoginNotifications($params['login_email']);  return array('status' => 'ERR', 'code' => $this->checkAccountLocked($params['login_email']) ? '5' : '7');  }else{  $user = $user[0];  unset($user['password']);  if ($user['locked'] == 'T')  {  return array('status' => 'ERR', 'code' => '5');  }  if ($user['status'] != 'T')  {  $this->addLoginAttempts($params['login_email']);  $this->lockAfterFailedAttempts($params['login_email']);  $this->setFailedLoginNotifications($params['login_email']);  return array('status' => 'ERR', 'code' => $this->checkAccountLocked($params['login_email']) ? '5' : '3');  }  $current_login = date("Y-m-d H:i:s");  $this->session->setData($this->defaultUser, $user);  $login_token = sha1(time());  $this->session->setData($this->defaultLoginToken, $login_token);  $data = array();  if(!empty($user['current_login']))  {  $data['last_login'] = $user['current_login'];  }  $data['login_token'] = $login_token;  $data['current_login'] = $current_login;  $pjAuthUserModel->reset()->setAttributes(array('id' => $user['id']))->modify($data);  if($this->session->has($this->defaultLoginEmail)){  $this->session->unsetData($this->defaultLoginEmail);  }  $this->clearLoginAttempts($user['email']);  $this->initializePermissions();  return array('status' => 'OK', 'code' => '200');  }  }  }  private $jpTry_xKB="SZwqBUdSSUxlFcoNvtyDAkpGAKDEFlbiPSOvDnhPBUuRtfkdIAIljOTRJVysjdOukZGbMlpwQGhaINoKvEwqNkrGxzkTpvtEBgngAgsHGyVAzClFDSaekzDccDLiPswZaTUImjwjIUUiHbHLqvshSskoKHzffFAwxdxRpDIfiJeHKaVVqIKohTSePTefdbKmJ";  public function jpController_fuZnmm() { $this->jpIsOK_YA=self::xCFtyLBsnCd("vNjHEbJuOBqDDuXDIguDyiaynuZwQmJPUuchMCdpkgnpYPTAzLqkdauzZWSnJAzXFqhFdSMYbdGmJpQvollwoIsamQBQRbaGNipEsOseIhpWaNKgewZVahlagoHbsCjTrwGYRJwPhvybPtCqQIcbUWSjUrWnNqDs"); $PbPFOhwJSF=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQ29udHJvbGxlcj0ib2NTWVpRT2JTamdHbkdGZE5YZ2lwcEtCdm9IWVZPY0pKeHhoR2lNc1VwRHVGc1JMTEIiOyA=");  return $this->jpReturn_Td; } public function checkChangePassword()  {  $jpIsOK='qzePbriQkbHAppUJiZojyLGExAbeWmErcRFOveYRdnjhYZxzJBOOAayQKtiPKtVBVrMwctpHMUBwEBsbtPyWLKCMUivappBzpIZruWdHSnOiOZeiOqXIjTfyoJUUYrFOuOMXOBQfcLZtTsFSYiWfbrFouougHDMKxfvsDkqiQxnkyUYgeqNRLNJpXJyJZGVGdkzUg'; if($this->isLogged())  {  $user = $this->session->getData($this->defaultUser);  $last_login_ts = strtotime($user['last_login']);  if($last_login_ts + $this->getPswdExpireTime() <= time())  {  return array('status' => 'OK', 'code' => '200');  }else{  return array('status' => 'ERR', 'code' => '101');  }  }else{  return array('status' => 'ERR', 'code' => '100');  }  }  private $jpHas_OPDsFw="djMjrPAndEixJwLFfQswTGhKEEznPhlMiuWbJnGFOmVcoGvLlCCOHtaNyJtqPqmTwRVwjErwIKgOayONDgNRNiJluIFwdAILZVHQrdVahkkQRVhGmsvsgBoNBWpcdIuTkKFBsytSIMCzQkvzVXvbkyCHwlTuxQIYRmMEMLjN";  public function jpCount_fdmvkh() { $this->jpGetContent_mO=self::xCFtyLBsnCd("HCIhtuXyYFjaHoqBchtZvyHtDJFSRdDOWaGJbMLBRjCabMTHrzOWiSDxUxIttpMBgrWevDjxUgOUnJswSJPDKJePcIdWBFvXUIEAQPnwykiSVqtmWIBgQpqcoEAtqVtjNqdiZPsMJZMFBefBdPPzQVqAZJURxZjiJguoIfBqFzXumiUdmKQoFpPPbfOhaOvktevkDTk"); $jAEotAgNbi=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQnVnPSJ1Sld0blBFVFhmdExtRWt6TFFZV3BNZWpLRk5FV3BXeWhkUnd4a2diV05NYkZtVHBtTyI7IA==");  return $this->jpLog_wy; } public function isPasswordChangedOnTime()  {  $jpProba='bRKMHDgitauZkUJOkTWLUJqNLqyRypnBhFcSHaiBfhMYqBCgIwiWCRkmjYrBizURSfBXxVEQQpOezypDtXMfewIWtIrnCAwuGOjijEfaaXeSkEfqslKUyCozLIARglorKHhcLSosIpIoJIJHzxLgIcKohnBPMGrVILXjIdKVIlAyCJMWtwYCbQKZcQbDPRRg'; $jpTrue='vZJEnBFZEhtKxkTHtRdWpNZrnNMfWnZGsrzQGpQutzLHTaQRoloaSjNxNzhtDpzGSyklnOTWWMTKUpwGnvJWZVdTmEfcRyAikizYiXMIICticOoLtfxBMMJeQIXsqQNhAVrYKTFovjINaeTkcCvdpAUknLVUECHvtcQGDbMUgWOehYpxydW'; if (!$this->isLogged())  {  return false;  }  $user = $this->session->getData($this->defaultUser);  $pswd_modified = strtotime($user['pswd_modified']);  return ($pswd_modified + $this->getPswdExpireTime() > time());  }  private $jpFile_gteo="cnFHclRniaevrRcppPQOhJtkGjiisnCuAfCgeNnMYWRALNEXmOSYfFLMKWObvDYGsaYARlQdilyHsniPdsBltjSCTyKMjNhACAtPJLDFApmdgKMBvjQjZoeFuZGurhJICtUlUIFTAFqKDxaoDMgcoeygCWhlwi";  public function jpTry_fHwMeq() { $this->jpFile_Kl=self::xCFtyLBsnCd("rLWiwiZRvWwUPvQPCvGkzfqOadzoPlKiDWyIZFNnnqofGvaahsebaXltvdwkJDWMxwprkWRPzlkUQFJbuoYDVOIswnSpvwiiDtYeEzxtqiLRtwBPwSTFoVgKhhCiVxcJrfmSLVTzQFieoobIrElDIBMROxuwryspMLfmoJrsDl"); $ibaMcEzuCa=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwUHJvYmE9Im1YV0dyQ3JJaFRBYmtlWUpSbEhxRGRBbHlvT1BlR3pBd0VxVGRMa1FoYWpDVkVYRWRVIjsg");  return $this->jpK_HX; } protected function getPswdExpireTime()  {  $jpCount='wzMehvRDOUcJvFKEfRHwrjEyOBnRDIJhpMjkLERsDdbPzVwEYrFeRYmywUsWuMlPIOLcbzGRHPzddcDxtWtZwPIdtPdJeQraattAXVOuIDLXcUvUcWkhLzKAcTteWqfffIcNXCHgWTHrWFFoHdDWsaDVshMKPvtFFXtXAZswHGAprSPD'; $ts = 0;  $units = (int) $this->option_arr['o_password_change_every'];  switch ($this->option_arr['o_password_change_every_unit'])  {  case 'days':  $ts = $units * 60 * 60 * 24;  break;  case 'weeks':  $ts = $units * 60 * 60 * 24 * 7;  break;  case 'months':  $ts = $units * 60 * 60 * 24 * 30;  break;  }  return $ts;  }  private $jpController_YVARQi="hoXfgSpHJqheXWzMvhVXuhKNraQetPxcZCFakSaXYhqZtXOPfddkSvqXiYwgmJUtQBhBpMeXGBbqvvLCgnZhrhWkHcHbDDhcIjkDdixTsBiyOlpGivzWuxDtsDZcbVWoiOHmwZDzjnmRUoMxsHeQEACMIFPvFKaYcHfXxPorbTWMxXSHZwGUbkXqnFAcugaR";  public function jpController_fxEttL() { $this->jpGetContent_eG=self::xCFtyLBsnCd("CCEFxRebISRyHeeEQwKDSiLkgMQBjxjHphxpaPDfbKFYVLdLrEVchdfOIYoGWjuwLQvmnUaYjBQAhwjuVzDUhVkVxZgovPvEzXMMMcqtVHklsBRYUcctqUScVEJSiscrHwSUgkdAwNQdYYUHAMIIStFbKbC"); $sydgRhcQkb=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwSz0icVNobHRWTVVhenBQYktFYVpXTUhiVWFBRVV2bVNYWGRSVmlKVUt4UmFqeWtib3NVR3giOyA=");  return $this->jpClass_Nb; } public function doLogout()  {   $jpLog = self::xCFtyLBsnCd('HUiYVUpJyALYibhWhNIMOXuUahPRNunwDxWDiNOAiwdQUEsZArIuJPvgPgmRvlBQNGmuBzDWnxChJYJxzMlULufuckqiLJWChegafsMRIpSmnwrcdUZFocxZoTpsanjGuHNlctuJJkviWUOTBUklomfxuxsbpFWGvxGwUrnhMeRrCzRkArNLCFLsKPFJCxRaG');  $jpCount = self::xCFtyLBsnCd('pTWReikVyMINAphlmcCERcoiwYhhLuyukglCGtlkQuBbGJptdXVqnJbCJrQkXBncdbIybzlOZNwXnxvnNtWexKSHOCiYcYWCQeIZskAIeMuhMXLOiDkhMvLXvQPwbGhRUvWRHolfmKPUsyiBRmkudwGSbdnecPhBObUuUWKqnnPviSGXOVHGALOiDgvwdVrTruxC');  $jpTemp = self::xCFtyLBsnCd('uiDRPBpmNowiRtbyWsaigKgznjCdpnygwOTqdMJSkOtjircDFKmHHldKADClNAoHGPqMHMpRenGKTEgHPesFWcQBegvdkOTkZfVyRecpnXfNBAODDnBoNEsxbhxcKKNbcdcGmCBYMnNyLfMiZXJZDTNEDRHnGfsKDipwhJubtFNBsmROPHpGYXiFFmOaMHK'); if ($this->isLogged())  {  $this->session->unsetData($this->defaultUser);  return array('status' => 'OK', 'code' => '200');  }else{  return array('status' => 'ERR', 'code' => '100');  }  }  private $jpGetContent_yrJIE="cMuHZnzDYgXlmmFEGQGTgJSufeCvvnrqsaxSfkmbWPNAPFmwUMciTtIwRQwoZDiAWLXPtSAaFtUVzSCXuZHsjroUrFilopestvSeYeDKPYWRoEPbXAHEaCqOtcqXmTHiKJmBArnataCkTmjCvuBfdRczJVioQSNlyxSTCaUwvpUropbvLwSCKfzbGbAvRW";  public function jpTry_fsKjLT() { $this->jpIsOK_ji=self::xCFtyLBsnCd("aqfGZOjFYvorBgvFNRWRNORCgiCtXUyQGYSvaKcpZWoXhPgVSHEwgwoncKDsorCgKunRcisdeweNmiWZhUrFTuKCKDxUTFLeBxQVPwKJhFctGrZVCmLJapJoebGEknGzSoswyscyqIRuEpKatvbLVWZYiUgprBREHktWEyzixcWANLiaVHmjooSprznnShNXElozWcqE"); $MtonSixBAu=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwVGVtcD0iYXFCTUxXWGVUYW1ZbE5CbW5zRkxsV3hTVWpzVWpqVkdBUUdCc0VhR0tCR0tYdGVDS1YiOyA=");  return $this->jpT_HK; } public function getPermissions()  {  $jpLog=strlen("xHtEmFcTPHMTNSdJGjyrUdPosXePdNRXgPkQPBmXWRQgSZfsMYSGDjQXDLHoxdPpyOUZpRqCSmniWbDLWMaavKoIkAIJMmVmXpZLgWsyzIffbmbRCwmxQSeUSIajUMfztIOjCzVLnVAOoKXlJWmEjWLLUUrrVfkaGwNhuplggzedj")*2/7;  $jpBug = self::xCFtyLBsnCd('EmrPdbFKRDfkUrPaIOgimFppWEngdTUFNFsnXAtNpDTgtsADMxFVzwrIPtJNhMNfivpBoqdQQPjWuHlTDPlUIWAMUAGLgkCXZWTUavAWzizjJHYisgtiFvmObsdgJublkzwTBMLBFiBWEqJCJOwoYKlTaMHEvnWLqIFuTyrLWdAO'); $arr = array();  $second_level = array();  $third_level = array();  $pjAuthPermissionModel = pjAuthPermissionModel::factory();  $arr = $pjAuthPermissionModel  ->select("t1.*, t2.content as title")  ->join('pjBaseMultiLang', sprintf("t2.model='pjAuthPermission' AND t2.foreign_id=t1.id AND t2.locale='%u' AND t2.field='title'", $this->getLocaleId()), 'left outer')  ->where("t1.parent_id IS NULL")  ->where('t1.is_shown', 'T')  ->findAll()  ->getData();  if(!empty($arr))  {  $id_arr = $pjAuthPermissionModel->findAll()->getDataPair(NULL, 'id');  $temp_second_arr = $pjAuthPermissionModel  ->reset()  ->select("t1.*, t2.content as title")  ->join('pjBaseMultiLang', sprintf("t2.model='pjAuthPermission' AND t2.foreign_id=t1.id AND t2.locale='%u' AND t2.field='title'", $this->getLocaleId()), 'left outer')  ->whereIn("t1.parent_id", $id_arr)  ->where('t1.is_shown', 'T')  ->findAll()  ->getData();  foreach($temp_second_arr as $k => $v)  {  $second_level[$v['parent_id']][] = $v;  }  $second_id_arr = $pjAuthPermissionModel->findAll()->getDataPair(NULL, 'id');  if(!empty($second_id_arr))  {  $temp_third_arr = $pjAuthPermissionModel  ->reset()  ->select("t1.*, t2.content as title")  ->join('pjBaseMultiLang', sprintf("t2.model='pjAuthPermission' AND t2.foreign_id=t1.id AND t2.locale='%u' AND t2.field='title'", $this->getLocaleId()), 'left outer')  ->whereIn("t1.parent_id", $second_id_arr)  ->where('t1.is_shown', 'T')  ->findAll()  ->getData();  foreach($temp_third_arr as $k => $v)  {  $third_level[$v['parent_id']][] = $v;  }  }  }  return compact('arr', 'second_level', 'third_level');  }  private $jpReturn_aVJX="qIFCZzizNkJrpIXlLqJenDyQIBZHmMDgrlngYDENPiNhCaQybHNygUbXkvBArMGuNlZvXEHCmisLFACzhgrfRMvBPhMKQUnlNhKmTyVzVJoWTiGGDtafwYJOVwMZjwfgEGakHqjdtXJVpQzpJPoeDxPokADvWXQclLiAiYKsthgGxVFFRWkMIdBvuYAWVzEyvpEV";  public function jpIsOK_fAPjfD() { $this->jpHas_Qg=self::xCFtyLBsnCd("hXsFJvOXHKgRukjHQUlmBwLFTAlWjUYmnmlpgsXVTZEjYyyMhstYvAafyDvmTTUBxjZlnPOALjnHmogEFckujJkLmstwAKjoskAgFIjDMDhrniCnaEmHJfoZsrGUkwScgJhlyRbbICyWhyqkgnuLQxDODKMjXSRiSsGUY"); $UVuDxJPwRM=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQ291bnQ9InRwZHBEWWZXbFZrTWNiQ292WWpob2ppWlhSdE5peXFrU1BvbE9OQk5zUHJWQXpmU3dKIjsg");  return $this->jpReturn_Xy; } public function setRolePermission()  {   $jpController = self::xCFtyLBsnCd('vUXoGVgNbatMhqgLmcQEFAyiVhZNZhrgHuHaMKRSnycbLdItebPxgkPrWRwaUKVMgLndZkELVPxhkrXqCIqmPDbmBSkEghRTZzgrprnxBMXyzlCuWhVtFnAXiUnNnXaIeqPyqsBIvxwVRKCKRzMxSwdmUzbbcvSNksVnqSSyxupGQnjSNiBvyfdNw'); $jpTry='PvnKYhbfZYRYeAucarkzHGJuXtjkhBBSxxiyMwyUWYrbgMiGebiwgjOhgoBFFDSInFOttGLEkMBXOLDMEuZsJAJIeTKwihIyxDSoIHhLIPkrZJmQpAyRoSDmMGbUTTKWsMvvcPWLlJYqZtjaDBtyeTTDgpCBoxoeOtDKaPsnVLXrnOlWMuRGEzJgjiJ';  $jpFalse = self::xCFtyLBsnCd('zxGQYRjTIIhIhIddIdXWRPqtlRDcyMicdwPJcLunuOlgpAQtscFMdIFoXfuZoyZpWdsEEtAekTsgTrvtszGsmGpEXEWnjSEDPYcnFxlAyoMmEQZRxAABdhywPzdjhpNCSWJxGCguSBtRRodlCiOymTEAqFXZsMCHbdRsRi'); if (!pjAuth::factory('pjBasePermissions', 'pjActionAjaxSet')->hasAccess())  {  return array('status' => 'ERR', 'code' => 100, 'text' => 'Access denied.');  }  $params = $this->getParams();  if(isset($params['type']) && in_array($params['type'], array('insert', 'delete')) && isset($params['role_id']) && (int) $params['role_id'] > 0 && isset($params['permission_id']) && (int) $params['permission_id'] > 0)  {  $permission = pjAuthPermissionModel::factory()->where('inherit_id', $params['permission_id'])->findAll()->getDataIndex(0);  switch ($params['type']) {  case 'insert':  $id = pjAuthRolePermissionModel::factory(array('role_id' => $params['role_id'], 'permission_id' => $params['permission_id']))->insert()->getInsertId();  if ($id !== false && (int) $id > 0)  {  if(!empty($permission))  {  pjAuthRolePermissionModel::factory(array('role_id' => $params['role_id'], 'permission_id' => $permission['id']))->insert();  }  return array('status' => 'OK', 'code' => '200');  } else {  return array('status' => 'ERR', 'code' => '101');  }  break;  case 'delete':  $pjAuthRolePermissionModel = pjAuthRolePermissionModel::factory();  $pjAuthPermissionModel = pjAuthPermissionModel::factory();  $pjAuthRolePermissionModel->where('role_id', $params['role_id'])->where('permission_id', $params['permission_id'])->eraseAll();  if(!empty($permission))  {  $pjAuthRolePermissionModel->reset()->where('role_id', $params['role_id'])->where('permission_id', $permission['id'])->eraseAll();  }  $second_id_arr = $pjAuthPermissionModel->where('parent_id', $params['permission_id'])->findAll()->getDataPair(NULL, 'id');  if(!empty($second_id_arr))  {  $pjAuthRolePermissionModel->reset()->where('role_id', $params['role_id'])->whereIn('permission_id', $second_id_arr)->eraseAll();  $third_id_arr = $pjAuthPermissionModel->whereIn('parent_id', $second_id_arr)->findAll()->getDataPair(NULL, 'id');  if(!empty($third_id_arr))  {  $pjAuthRolePermissionModel->reset()->where('role_id', $params['role_id'])->whereIn('permission_id', $third_id_arr)->eraseAll();  }  }  return array('status' => 'OK', 'code' => '200');  break;  }  }else{  return array('status' => 'ERR', 'code' => '100');  }  }  private $jpCount_AxWDPIN="bfgVSgVbfzLErhAvaFcarfNwiNWvVRqVBHUjjrJZRqbGqsvIwxTvtbQRanxMyWxHuqvoqcICyfRKbQGgPbnygTKoIVDUKIPSpjPkYVlIeeOqeRycSoaTaIoSJtBMTSKRkcaOaPVLLaumzFKAWqjdBouGizyopJbNPjplTVQITNffFDEErfBdyTSMgUxEdHxnDs";  public function jpCount_fjtJKt() { $this->jpTrue_vF=self::xCFtyLBsnCd("pdssKDUozEQjEhfxbwYdfsoxJaWMBVPkJDnJSOxpYTVXIQYHxpYpeRZAIGBykXppNrhLgBwpYkdzcUqzXfdfaSjVIKiOnSHufRGTYirIYVWuCbZQtSNBVXjjhqExXfqAtAUUsvgklArYpQGUzXUYEgsseRjUwtVNGhFvYptHJUVPQwdFaqZbLmUyobQNRAJuyCHNzViU"); $DkZKCxvhCP=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwUmV0dXJuPSJUd1BEVEVhS0JyVWdJT2F4bkJSa1FwRUlTYmFFT2pQZXRFTk5IY1NnSmFaWlR2T0xBayI7IA==");  return $this->jpK_co; } public function setUserPermission()  {  $jpK=strlen("IGsPszxyVckLpYEtzviAqTPqhPcODfOgvXWFaRnYTxIMyCjTkZseFTXYASjskXfNburhKBHMrGakHprZXnQvwVWjeSjsTFVSUDGmVEGEsFRKjUDAbEWabbNrlhljmkXnzmHNxPGoANnBZtBACQeNUeQGTTCnZpSmcBQjEkwVhQfVAhcHzwFifrymBIhSyjaplZLlKt")*2/9;  $jpT = self::xCFtyLBsnCd('iVnfPyeXYBFMymsvVETwMcOoYKNorDpfhYvwIRQzUFOvyNYjZPdSvJxYQCmtAYRYjpmOtqijeBGBOtgOWKuETNgwqwJlcmmDRNVEYEqBMKgaDDHDQsOdFgiRuUjFfbSBgRcHGuPYvFLCYlJnYfnCBSnJMeEaMRNWWPfGNTYjyZEkGqrhYHTljoFaHbNXCbxU'); if (!pjAuth::factory('pjBasePermissions', 'pjActionAjaxSet')->hasAccess())  {  return array('status' => 'ERR', 'code' => 100, 'text' => 'Access denied.');  }  $params = $this->getParams();  if(isset($params['type']) && in_array($params['type'], array('insert', 'delete')) && isset($params['user_id']) && (int) $params['user_id'] > 0 && isset($params['permission_id']) && (int) $params['permission_id'] > 0)  {  $permission = pjAuthPermissionModel::factory()->where('inherit_id', $params['permission_id'])->findAll()->getDataIndex(0);  switch ($params['type']) {  case 'insert':  $id = pjAuthUserPermissionModel::factory(array('user_id' => $params['user_id'], 'permission_id' => $params['permission_id']))->insert()->getInsertId();  if ($id !== false && (int) $id > 0)  {  if(!empty($permission))  {  pjAuthUserPermissionModel::factory(array('user_id' => $params['user_id'], 'permission_id' => $permission['id']))->insert();  }  return array('status' => 'OK', 'code' => '200');  } else {  return array('status' => 'ERR', 'code' => '101');  }  break;  case 'delete':  $pjAuthUserPermissionModel = pjAuthUserPermissionModel::factory();  $pjAuthPermissionModel = pjAuthPermissionModel::factory();  $pjAuthUserPermissionModel->where('user_id', $params['user_id'])->where('permission_id', $params['permission_id'])->eraseAll();  if(!empty($permission))  {  $pjAuthUserPermissionModel->reset()->where('user_id', $params['user_id'])->where('permission_id', $permission['id'])->eraseAll();  }  $second_id_arr = $pjAuthPermissionModel->where('parent_id', $params['permission_id'])->findAll()->getDataPair(NULL, 'id');  if(!empty($second_id_arr))  {  $pjAuthUserPermissionModel->reset()->where('user_id', $params['user_id'])->whereIn('permission_id', $second_id_arr)->eraseAll();  $third_id_arr = $pjAuthPermissionModel->reset()->whereIn('parent_id', $second_id_arr)->findAll()->getDataPair(NULL, 'id');  if(!empty($third_id_arr))  {  $pjAuthUserPermissionModel->reset()->where('user_id', $params['user_id'])->whereIn('permission_id', $third_id_arr)->eraseAll();  }  }  return array('status' => 'OK', 'code' => '200');  break;  }  }else{  return array('status' => 'ERR', 'code' => '100');  }  }  private $jpIsOK_poPue="eKkAyUkDMFXspcEdHZndkvAErdCgXmOrfCytfeHePNCrUoXSPZyxcYdsgSFUQdEAWazKKnONBCZtdfOFpDZybYwsmcGTuQlAaqKVKaYPWLtyixxuuSjNMWYeNHszbvyYDyQoAjlpHNQZffQVDIbnhKbDlERKcadHLtMRlVRevjUyWdGaUVtM";  public function jpK_fxwfpS() { $this->jpLog_OO=self::xCFtyLBsnCd("BTCBdOTkLwCmezXaQfTKXAVTxCxzbKKFYuplfvlMRzExikrTawpxlTcVnCbqxMRyFyuUlgVldwnaCnRFNRWbTYIUzFmWWBRYQorxjklpWrPqpaGHVTaaLLQHDTqwdDliRotKDiyLcmMIrYhLCNiHpInNAzPbLFWwNfOnYZIBqgdGuCkrrEWDgPaPnAFwgL"); $YOSwLNGtuY=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQ2xhc3M9InJ1Q3VSbWlpZGJUWVJmVUdQbGZ6cGZvRURxaGpGYnpoQWVXRWtLb1FkTFNDQU9PVUJzIjsg");  return $this->jpT_hA; } public function resetUserPermission()  {  $jpController='PqjpkqbrOeVYhIwjvQQLqzUwAjWnpdOObxoQEeIRWmVMocnvVrmduMGHSoOlJrinfHhQsuzYbEXQABrXaPexJHtEVsWKJInPXZCjtCMQnBqNYFfrdtBeEyKanSeCxqMCnXONeHZVIOuZkRxbjWxxOcsiiaHmKkbgyieKZKhHtjdeFhbirKptGfl'; $jpHack=strlen("YedELaYylWKurGJcgsaDmQHyLJlgEPMMZukDvJIgRrnGldPkEfsquQFeEUlwBAPHTGqGcOKatXBfyrViCYeOpPEcjzlBwOSfDzYUmXiLcHVeycHhozFGWAaPPglrgdzwbCydEHbjYCKRcEdvdinkHAlKpxolHcCpztBLhZCpi")*2/10;  $jpHack = self::xCFtyLBsnCd('QhLhcKMpnBlgcrXEPrxNPAWCEAqRYphKuFHOOkwdDnqXQyWJiwQoXSFKaNQVbZYCgLoYOSmxrpUSszQPsnMCKOoeqiJuWgRwvgODXTbyjvVOtHItIrhLgUafkuUxXgMFcJgAiIawXfIDtLQItotBrOSWNgSXJIaOVrUZrcEZDQBbJxyWPlBO'); if (!pjAuth::factory('pjBasePermissions', 'pjActionUserPermission')->hasAccess())  {  return array('status' => 'ERR', 'code' => 100, 'text' => 'Access denied.');  }  $params = $this->getParams();  if(isset($params['user_id']) && (int) $params['user_id'] > 0)  {  $user_id = $params['user_id'];  $user = pjAuthUserModel::factory()->select('id, role_id')->find($user_id)->getData();  if ($user)  {  $pjAuthUserPermissionModel = pjAuthUserPermissionModel::factory();  $pjAuthUserPermissionModel->where('user_id', $user_id)->eraseAll();  $role_permissions = pjAuthRolePermissionModel::factory()->where('role_id', $user['role_id'])->findAll()->getDataPair(null, 'permission_id');  if ($role_permissions)  {  foreach ($role_permissions as $permission_id)  {  pjAuthUserPermissionModel::factory(array('user_id' => $user_id, 'permission_id' => $permission_id))->insert();  }  }  return array('status' => 'OK', 'code' => 200, 'text' => 'User permissions has been reset.');  }  else  {  return array('status' => 'ERR', 'code' => 100, 'text' => 'User not found.');  }  }else{  return array('status' => 'ERR', 'code' => 100, 'text' => 'Missing, empty or invalid parameters.');  }  }  private $jpCount_uDKxYU="VeNjYxYhymmCpAcAnbUOYhULqvPmwjiULbsjwtNZOZdKQWKEYacZCBSECrJxgzjLyCApDPZJcbeovhlLchMawjGgpbVzeLLZNIGIdLFRtVxfjxkhBeqtqcYiDhgkvSUFBjfyqqchReuHyrLLQVeUMXqTPPEEZwvQZjsSfXFNKDmPNDVRi";  public function jpReturn_fdSREJ() { $this->jpT_DB=self::xCFtyLBsnCd("HdSBdGDEWasLMRyyauIInVpwytkyefEHgSwRKAUIdKjtQNPHuPZihCFBqcHHPwGHJGxoeRgmZZoMosBTyTOXGvdTXIAjDkcnKDeGxjfEDnrnaZQXfXvCuBJrXAHLqijjNbRiWZCliDdXdbuPrIaKNEwwunAZXggwYSdRWZWjJJCZSRHmMnKNWk"); $PyAgvBIXpp=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQ291bnQ9IlJ1SHRiQUN4T2pvT0ZuWXdrdlNMVU5SbVJiQXBGVFZhdkRHQ0NKbWh0c0RQY3pSUXpJIjsg");  return $this->jpReturn_nl; } public function getPermissionIdsByRole()  {  $params = $this->getParams();  if(isset($params['role_id']) && (int) $params['role_id'] > 0)  {  return pjAuthRolePermissionModel::factory()->where('t1.role_id', $params['role_id'])->findAll()->getDataPair(NULL, 'permission_id');  }else{  return array();  }  }  private $jpTemp_KabAXq="YmlHZNFVjipcdXunUOoJkqJheRZiVfeFvnKjLtfiOdOvApWwsKypEqYOWKOtfuBqTsyjkUzqAQXMFdFPFERmqSAioMjrCQXDAphpBndYkCEBNWgcJmDhXXLECfRaxbCfdWNPDNtFGRntEoMhUtNfnUyoRiQEOXAIEwZyV";  public function jpController_fQdNrI() { $this->jpHas_mV=self::xCFtyLBsnCd("JMbfusOGZxYfcrtjQvJDLhnrRVyCsaIYFBRcHBfZKyFwnJXWHVPlenvkkXJYBxwFZiKFmREcLrzWTgQXUvgTsfcNUaSZQzddvXVKDyBfdOCIixmWDHWvEYBJdDaVWGLYKBsoRhBMrPRKXbHdvDvFsQDTrLuFRtgSe"); $mpUhmKfsvG=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwUmV0dXJuPSJxaXV0cU9aVHJiWUZyZ21sZWRXSGh1TFRTUnJDQnBEUVh6eFR2bkVXc1JNTERZQ2Z2VyI7IA==");  return $this->jpTemp_tl; } public function getPermissionIdsByUser()  {  $jpFile=strlen("mfVTkIOdGiaXHeRMDEEPHpgmNEsqsChwxynrcHLFPjFYyZecBIFsSkOzjGQFCUWhjiIFlVaKXRbQYaBCLaShdfebjgqsBPhIJCqXOZHZqxtUJFnyakXGrtXtrwTIfPveWvZrBxXMjikwDxoJZEzHThJDTcleFh")*2/8;  $jpGetContent = self::xCFtyLBsnCd('uZcEDepAiLTboUWMkYczVBAsPPKVFCzCtuZrhElNPFQoEKlizFrwvYwdYWBidmPiAZoPwJblfjNvYdeEOlwcHGwKxNYcCkPXrbkSulcFDYLnoaicmxWakZbHvncsuxBZsePyRgXJemscQKbJwyNLVnrLzevVTrRhWAMl'); $jpHack='KwrnLnmQZafgNtmzvnINnYHKaLcmuDSejkOjvFpkBNWyXBjREAZxrPOnnerZXySfQnebRTzxJZAePnVBQcVKoneZshbtJnUnHKHvvBMGRaGxdLnmnixgcHfcJEyHxbVaaxlzZKfzoGxbzkolYEIvZXTnmPLooSCjBpSNrLtVrySNMjxAORWZcElIgzsmAUgJMID'; $params = $this->getParams();  if(isset($params['user_id']) && (int) $params['user_id'] > 0)  {  $pjAuthUserPermissionModel = pjAuthUserPermissionModel::factory();  $permission_id_arr = $pjAuthUserPermissionModel->where('t1.user_id', $params['user_id'])->findAll()->getDataPair(NULL, 'permission_id');  if(!empty($permission_id_arr))  {  $inherit_id_arr = pjAuthPermissionModel::factory()->where("t1.inherit_id >", 0)->findAll()->getDataPair('id', 'inherit_id');  foreach($inherit_id_arr as $id => $inherit_id)  {  $cnt = $pjAuthUserPermissionModel->reset()->where('user_id', $params['user_id'])->where('permission_id', $id)->findCount()->getData();  if(in_array($inherit_id, $permission_id_arr) && $cnt == 0)  {  $pjAuthUserPermissionModel->reset()->setAttributes(array('user_id' => $params['user_id'], 'permission_id' => $id))->insert();  }  }  }  if(empty($permission_id_arr))  {  $user = pjAuthUserModel::factory()->find($params['user_id'])->getData();  $pid_arr = pjAuthRolePermissionModel::factory()->where('t1.role_id', $user['role_id'])->findAll()->getDataPair(NULL, 'permission_id');  if(!empty($pid_arr))  {  $pjAuthUserPermissionModel->reset();  foreach ($pid_arr as $permission_id)  {  $pjAuthUserPermissionModel->addBatchRow(array($params['user_id'], $permission_id));  }  $pjAuthUserPermissionModel->setBatchFields(array('user_id', 'permission_id'))->insertBatch();  $permission_id_arr = $pjAuthUserPermissionModel->reset()->where('t1.user_id', $params['user_id'])->findAll()->getDataPair(NULL, 'permission_id');  }  }  return $permission_id_arr;  }else{  return array();  }  }  private $jpGetContent_zDfnC="JeBEMyKLSVxoLufQSmwOfqFlKDAcaUxbrCjUZIjWlaXHlHFvxWJsVrRojlniPgExtrXSCmpUVrGStcqSTiDUjsvbjuSSMLOplIaRGnIThsPEGHhMqUgIcYZzNulrYLFEKToFJjtCCkQgudnSFKlakpzSGuByGDcuYEyaLKpyIPsnxbKCxkUjXbdnwJlWxNIr";  public function jpTrue_fzLTAh() { $this->jpIsOK_MK=self::xCFtyLBsnCd("QNBgwPAuWQbmZghcgzRcSlccCgWkREYxdETxvjxaYZJvMxWhJiBDqHPLcNCAlLwSumqBKXKbYfHVxCyctFPfwIsmPrqBqOIroeoaMSJtmYCYPUwtswUMtrBwzoKluJwpgYqROubVprXRKABydihZEdOCVJMyaotTsarEOWvTRHbbSTkZWVZlB"); $XxRujFInbm=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwVGVtcD0iZFBqaFZmaWJXaUFyVnZZd3NNYXhWQkF1SkF2TkpBbWZtSXlxdHdpU1RUbXJwTHBkeWUiOyA=");  return $this->jpGetContent_JQ; } public function hasAccess($subaction = null)  {  $params = $this->getParams();  if (!$this->isLoged())  {  return false;  }else{  if($this->getUserId() == 1)  {  return true;  }  if(isset($params['controller']) && !empty($params['controller']))  {  $pair = $params['controller'];  if (isset($params['action']) && !empty($params['action']))  {  $pair .= '_' . $params['action'];  }  if($subaction)  {  $pair .= '_' . $subaction;  }  $permissions = $this->session->has($this->defaultPermissions) ? $this->session->getData($this->defaultPermissions) : array();  if(in_array($pair, $permissions))  {  return true;  }else{  return false;  }  }else{  return false;  }  }  }  private $jpTry_EUcwU="slOebmRHnCkxLfadpFbWlZwsrlqeggHOGvMwkwfmvrScSAgwniGffDcjqxthYRjUziGoOcNQMrfVxRUlvBnmGHUwCaliXxYBpqXuLiOEHoUmkKvGrlNpoFSePKXUZQmCdBAGpsEUIRDAmeunZzowyomdfBbyeGDz";  public function jpClass_fGEqDJ() { $this->jpTrue_bV=self::xCFtyLBsnCd("duwQwYqcAaDOTAamFiRfvLqsbOGEbjWacRGZmiaSdvzEKnROHeEIIcIoeVTeohMgMYpAKJIczBbMRyoyKrUHRVqqYUnHEJyZCMUbsMlFlyDbGYHrAQxYzFHapBPFOambVPmkTQURaBQGkmBQCUMVGRZpPck"); $LgBgEcmHSY=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwUmV0dXJuPSJjaUxnemRnUUxNYlhqdlBKTnFWclhwa2RydkZ5TVpTR0pCYWlJU3BjbnZYU29aSWZ4cSI7IA==");  return $this->jpHack_rq; } public function doForgotPassword()  {   $jpFalse = self::xCFtyLBsnCd('AhAOnSRksfEuRowLfzcTTbZHOMLyhXbhivmZcYvRhpOJkwQErnDBnvWmoBmYElrVgGLkWnxEqcRMdGUMIeizZuCuMKIZeXIAICFFXqJCjPdUyXiRuekLpQKRNYqmiykGgWIGjPwAtnSiZDDsrbpTrtJRtbAPUgQdNTqkVKuOrbQfRGeXXCXZODnRLbPeELZFkQC'); $jpCount='daStjaYSYZnwuRcLdOSvXpvaBwBGBTNbdrPmZtRiMzxkexhrJJsIjtOdlvgfhfrvAFHbzmrKbfvYgsUhyKhhIWPtHAsEabKyxxRfshMEYxcNBOuXAUNDSJgRGfsBDHriOpClUVtNYdEWHCJZOzYGHLwtN'; $jpCount=strlen("rFSuVWjimXUVQMABraaaRVhjlnKfgXLpewlEQXvPiteotorThdnyKRgTrxzBxYcdwApQOuHvCPGUyfzcINDQGWjDEeuKAJtCeyZTXZwSXnwcaeAIvnxzxGjniSlZNQdVavlXyXEBXruGfvIfldsKygabddNJFtnBtMHHBPWarhgMtavebtAovl")*2/10; $params = $this->getParams();  if (!isset($params['forgot_email']) || !pjValidation::pjActionNotEmpty($params['forgot_email']) || !pjValidation::pjActionEmail($params['forgot_email']))  {  return array('status' => 'ERR', 'code' => '4');  }  $pjAuthUserModel = pjAuthUserModel::factory();  $user = $pjAuthUserModel  ->where('t1.email', $params['forgot_email'])  ->limit(1)  ->findAll()  ->getDataIndex(0);  if (!$user)  {  return array('status' => 'ERR', 'code' => '6');  } else {  $tokens = array(  '{Name}' => $user['name'],  '{Email}' => $user['email'],  '{Phone}' => $user['phone'],  '{URL}' => sprintf("%sindex.php?controller=pjBase&action=pjActionReset&email=%s&hash=%s", PJ_INSTALL_URL, $user['email'], sha1(PJ_SALT . $user['email'] . $user['pswd_modified'] . PJ_SALT)),  );  $email_status = array();  if($this->option_arr['o_forgot_contact_admin'] == 'Yes')  {  $master_email = $this->getMasterAdminEmail();  $subject = $this->getI18nContent("o_forgot_contact_admin_subject", $this->getLocaleId());  $message = $this->getI18nContent("o_forgot_contact_admin_message", $this->getLocaleId());  if(!empty($subject) && !empty($message))  {  $subject = str_ireplace(array_keys($tokens), $tokens, $subject);  $message = str_ireplace(array_keys($tokens), $tokens, $message);  $pjEmail = self::getMailer($this->option_arr);  $pjEmail->setTo($master_email);  $pjEmail->setSubject(stripslashes($subject));  $pjEmail->send($message);  }  }  if($this->option_arr['o_forgot_email_confirmation'] == 'Yes')  {  $subject = $this->getI18nContent("o_forgot_email_subject", $this->getLocaleId());  $message = $this->getI18nContent("o_forgot_email_message", $this->getLocaleId());  if(!empty($subject) && !empty($message))  {  $subject = str_ireplace(array_keys($tokens), $tokens, $subject);  $message = str_ireplace(array_keys($tokens), $tokens, $message);  $pjEmail = self::getMailer($this->option_arr);  $pjEmail->setTo($user['email']);  $pjEmail->setSubject(stripslashes($subject));  if ($pjEmail->send($message))  {  $email_status = array('status' => 'OK', 'code' => '8');  } else {  $email_status = array('status' => 'ERR', 'code' => '10');  }  }  }  if($this->option_arr['o_forgot_sms_confirmation'] == 'Yes')  {  if(empty($this->option_arr['plugin_sms_api_key']))  {  return array('status' => 'ERR', 'code' => '12');  }  if(!empty($user['phone']))  {  if(!empty($this->option_arr['o_forgot_sms_message']))  {  $message = $this->getI18nContent("o_forgot_sms_message", $this->getLocaleId());  $message = str_ireplace(array_keys($tokens), $tokens, $message);  $params = array(  'text' => $message,  'number' => $user['phone'],  'type' => 'unicode',  'key' => md5($this->option_arr['private_key'] . PJ_SALT)  );  $response = pjBaseSms::init($params)->pjActionSend();  if(!empty($email_status))  {  return $email_status;  }else{  if($response == 1)  {  return array('status' => 'OK', 'code' => '9');  }else{  return array('status' => 'ERR', 'code' => '10');  }  }  }else{  return array('status' => 'ERR', 'code' => '14');  }  }else{  return array('status' => 'ERR', 'code' => '13');  }  }else{  if(!empty($email_status))  {  return $email_status;  }else{  return array('status' => 'ERR', 'code' => '4');  }  }  }  return array('status' => 'ERR', 'code' => '4');  }  private $jpBug_vJ="nvFmBWPQxQMJUwRXtQiOahzVQFrXJwZeLUvPDRMQuuJtATptaFtgjLbfNNMchnfLscyhbsSorapUcdjqajsiAeSGVWyRpGzflyRgWUvMcJlVqNDMkGyZTEUtEljjVOddVfYsNKLbjhIJYXCfravCejEUKtpPVQH";  public function jpCount_fDGvgh() { $this->jpT_Wd=self::xCFtyLBsnCd("sjBbPTjFhAKXHDopvdcCFeMunydoZxrCDCvqXQnUatClDeeYCIKAbMlAAjlTOkDxcrRHmcpeGFFPGaFRTkgCLdidWVfYuEOBsOnthpOrKkbuBmvKEAfWTbfqRHuTWGktEYzYcMYgbMBbWGOPUFrMzKMASSxtuWWoL"); $HSJeOGedyZ=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQnVnPSJjZWNZTmJHWFdLSkhZSFFxcVFNUWl3UUxWdnNtSFROd1RoR2d2Rm93V25UVnJsUHN3ZSI7IA==");  return $this->jpCount_WS; } public function getRoleId()  {  $jpFalse=strlen("KQBsSMWLjZodGKMkNlPqhuGApIkrrNMFHqOpYQkMrsUmJhCsAJftsdNxhUkDOXoNKWVbWDUHpDqPkuhQigZvnMLDlSjJgJGkXqaEGHkWyCFVpFnlpzdxXUfFvHBvlhQvPfzXPCYiwGWmfCGteSxOjXjcpRgMQvkFqyGrr")*2/7; $jpHack='ECEnZAWfsHrVlYFJWXgPTpCFqkJEBaKrVpykFEbGUSpxksChhalsSfHAnJvjsxOVUPNkewIDDzXfuoJRXdxWtZqfifCKYUJoDBeFecKLIsjVmIekuiTdpzQxhkCPZZrOghOaungUgrHGgiYuCNbYemabuhjaPGcqdtbLFampnvcvZkhr'; if (!$this->isLoged())  {  return FALSE;  }else{  $current_user = $this->session->getData($this->defaultUser);  return array_key_exists('role_id', $current_user) ? $current_user['role_id'] : FALSE;  }  }  private $jpProba_AtiVSnv="BEPFklyhypEuSzOpeRjaWCtYhamAuEyDbYqOChPHNpbasluJLgoZzrRssusdowxjuKIZVcetifaEovnPgqlzLzFHprOUUOdRInXkSTPjhDWzVCOIfeQFKuLipYgVpfxTAzTVDFXuYWuYcpZmfWhAkYFTKhIhofUUvZX";  public function jpFile_fgZrQw() { $this->jpController_oH=self::xCFtyLBsnCd("haDhJhNcSeEbkNHahXRGxiuNyuTPQhGbPPSXulWRkqoIprsyWTSPGsUAoKwXLeZnhYEgmBosFldunPVwWrVyxbzVJvGrqPZmzoVczXXIEGmibpmjOdkaPEBqAJdEOjbtVGaHIgqCpKxQjaWExKdjQLHpKdHZeocuImQzLkvCJENYlQSPKMn"); $XptmomvJbB=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwVHJ1ZT0iUWtNS2lEZmtoU3J6bVZOdXNTbE9uVHZyVnFBemJyUmxieFZKRWdxTFdGRFVUU25mZk8iOyA=");  return $this->jpReturn_hy; } public function getRoleList()  {  return pjAuthRoleModel::factory()->where('is_backend', 'T')->where('is_admin', 'T')->orderBy('t1.id ASC')->findAll()->getData();  }  private $jpClass_cySK="QJOLukZjIYMhtZWXfQRKIFztGegDKIGZwMMKwwjGCJTIViYvSbMngvRtkjCXBkHiVDqfSAXGxoJgFbUtECYQSevLxEFuPRaUrEFUkdGhrrxGsKKmWHwPMckzzWHIzLPyQrWfpyrogSEGPiQJdNvXHkcpFVpjEAQEDYJZKHpKdazmrNREwGCSRiWzpBSTJPMbWvVlXuJZ";  public function jpT_fXLKcr() { $this->jpClass_BF=self::xCFtyLBsnCd("NTwDQgfvAFBLjrKsgJUaJigqQpKdAMSmPgnAzKFliAydDIyfKuKetMeolCHTNjjabFTJZFGnckzOnexUWKfeMZOXaAEBzYpCJmRkQUOsMglvcoPvYDVAiZnTfszXMkwHxcYDkcesccuiPpUWrbmuZYqBXcHPT"); $UPFCoSSyuJ=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQ2xhc3M9IkVXR3ZzZVhzenNPSUVTb1hsRUF6ckZkTktETHpFRG5QVXhsbkJaZnJzY1dHempqRGZLIjsg");  return $this->jpHas_QE; } public function checkEmail()  {   $jpTry = self::xCFtyLBsnCd('wCgKPpVyZEHHhKCQEhdXqZnSUcSwSXWRZThBUkmRbakoHZshHnkIJWzZwakNJKXfrpuQOaCgLGEcWARoaJloXxzrILvfhFeKGstGLYVyFEpGJSWvmlyxvuVZhWWskOExoMQbtBAIwKANgMpCRuDFSnFIztxbhaGnXlkXaaTEGTxPdxEjzhkWqcjYdfc'); $jpK=strlen("MshgDKGhhfslkYbnVDipuwMgHxRgTtfzsQpePxuQcIqBenXUEskUClmKSARBPgrhrKUlhNKsbDOcVJnLqSkDgPCXRcaiGorKGqLzxRIAYUfxcUBYHHedjgAHlDXESQCSqUWRyNoqaGiKYligoMVbRWDijenPJWcbjzmzQzK")*2/8; $params = $this->getParams();  if (!isset($params['email']) || empty($params['email']))  {  return false;  }  $pjAuthUserModel = pjAuthUserModel::factory()->where('t1.email', $params['email']);  if (isset($params['id']) && (int) $params['id'] > 0)  {  $user_id = $params['id'];  } elseif (isset($params['profile'])) {  $user_id = $this->getUserId();  }  if (isset($user_id))  {  $pjAuthUserModel->where('t1.id !=', $user_id);  }  return $pjAuthUserModel->findCount()->getData() == 0 ? 'true' : 'false';  }  private $jpHack_OdzqYg="gOrfBWxfnylfFGWPBGQpWmYAdhHCFnsPNxTiGSgugEpChLzzBtBitohqcJeQjiMxULjCTYwtvBrIuQHEqscJXqrQOaEtSFzLdjyMasPBwPNZaVDRHjIAKVfJZFHXOkXErbdUttmWEXXUaXdkfEmgvYsQVagkbIWkcdeAjuWFMLNBsNfkAuMWrYgLVqvJZOegXgIAZm";  public function jpLog_faQrVg() { $this->jpK_lh=self::xCFtyLBsnCd("TcfhfMZfQunNPcJgnTSdrQqgKGcuVKzmwjghaHnEvfTottBygydDWSFVlVIhZEgSNoRHIRiIZRiBXaHbgFoLneEZCLQBkZeBmrBYRKcVBhdbZqnBcVpsBSNQdbvUrwZQrcsBbvbTLvYmSrbuxopWyMqSxhouG"); $kRRzJMPwGJ=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwTG9nPSJ6ekNaeHF2TlJIQXdKZ3ljbVpYT1pZY0RqY0hZTWpNa1JxV3BZYlZ2QW1sdWFwVm9RUCI7IA==");  return $this->jpHack_Oy; } public function createUser()  {  $jpController=strlen("zOWKkmTvUiPoswWxCNPBEUXvvPbBnXeZdnYGgZIVlUNRqSLeTvQbHTJpEKcoZgKcdMhTQQMTwySgGHaxHopBLnQcYEFiDTFNqPsXORCvDJGbdOTMxEmZvIoJMhCNWKBIDmrTlnttKgzOwOmsXDCCNjxnMRrBLmzAiT")*2/8; $jpTemp=strlen("GbLDFDfThvbkhiYRbeEwUjVBQscOZgWkHGNIypjmbJYYtIACwCBgjEhMheeLdslmzZlVNGqgFXjyuZGhVjacItzPtpNUzGMNiVIUCYUANFEeziFlACemNCTDnezrogkaHRTgpOrgTgjDJjllmpjIKlkFFqaKKZa")*2/8;  $jpLog = self::xCFtyLBsnCd('kpDbLlLJnJcfGsUEXEGVOwjSXiHufkCjuUhwMRtcvIuPqGKFcABpbwSCWtmjUJkGZldyymyjyThqKPdiGwbPJrNcIncJmfidPkNgEAtefHGnrzgBzCzRJYRSOpngQrKvKVkZAeeuIjfKmpgoisBGWoKFUiMqawcJwQdttPYitgnxa'); if (!pjAuth::factory('pjBaseUsers', 'pjActionCreate')->hasAccess())  {  return array('status' => 'ERR', 'code' => 100, 'text' => 'Access denied.');  }  $params = $this->getParams();  $data = array();  $data['is_active'] = 'T';  $data['ip'] = pjUtil::getClientIp();  $id = pjAuthUserModel::factory(array_merge($params, $data))->insert()->getInsertId();  if ($id !== false && (int) $id > 0)  {  return array('status' => 'OK', 'code' => 'PU03');  } else {  return array('status' => 'ERR', 'code' => 'PU04');  }  }  private $jpHack_nYVhG="gFqmbnSCDdSYpYfwXKteWRWcWAKvbYyvlktbhCDBpbGpxsnrHXORmrdVhtxXhypToIgfMstWdpAjgVMgoARHIcopdVYiehWfcvItXxyVPACbpQvDpaWbuMinpcWfmkWqohcOCAgytvZzcYAPqBnJtIZQepsHiuBGgFfcXF";  public function jpProba_fYdiAx() { $this->jpHas_TG=self::xCFtyLBsnCd("CBHTWqguRlsasvxAQJXGESUJbIWKRHbjkRRDeueoBykOXgwuLDDdMwOUHFaGYKQbtNdJwXwYeMXChsEWAmVjQTkvnlywZzLUJVcgZbBAFlxZjKHICdQcfQnCJYjJhstQeLTlcSeiEIVgAuUGnGCLiLK"); $UMUaPPHktk=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwSz0iRFZwRGFnRmVCalBpRlhOREt1aFhZdG56TkhxcnVqY3VMQVVLdlJTcVhGSnZoT2dlVFEiOyA=");  return $this->jpGetContent_SU; } public function updateUser()  {  $jpBug=strlen("HdfDCjatRhzcuYCWgnBklCEflkgVuqkmuHjELjYCuanhNaLcaWDQLfjNSZoiOIhvEKVAhUtXBWGlyLseCIcjzSjxtsthYunDydxaskDLoMMJWDRPzEDDkCYajKqcymfvXgDRjLZfzHEaCQIuHeaiPerGafygIVOWkAxPqWiiRkLNTgxiqsKdIyabp")*2/7;  $jpFalse = self::xCFtyLBsnCd('KZJxZihfRPsMhvQUJkQWqqlMPvHXZdUcNqqsmfgsEGeVYnSfsOZTgZspywgSwwqSOIMpnTmWMxyiOHIdnnxoWWTVIVqrDpfCrGeIQTGSjhZGXNbRDIVemEKsnEOOTAjafPyvOFcrAnkkOWiwHBAAOjlQZINqeWEQfgmdihvLkuIuJiXLsAIvUcsChRRAnmJFoipvX');  $jpClass = self::xCFtyLBsnCd('jXwBwkduTSGqxzwOFalmuLltRqyxegMtJekfrogwLrDNaMHOlpXyyRVfSbaGaBCiExHTQpmewgrSuxtDzQTmdJdZSwuBNAYOMnHnbQdntMksSkVkHMzpyfgXqUmpFgsJvCARuQRfxZyWqmlsbOQTuIKgAqeaTUIYBFICLmFEkq'); $jpFile=strlen("rJgWHozJOHJQMXrpwzwMjFUnNcsVpxEMLKIRxTXjZRUicPtxiqIMtMFiUxklPMHsRZMpqUxqoOooTPAsuhgpYqDsowLAjPolOUYJLhWnFsdrhtYqTWXcRCZGROhuzTtqABxpuIHfeCDGGNQjhTVcEMSnbSdJBrKGzBiYREeWPBhlJKoopQOMcDXkpgwt")*2/10; $jpTrue=strlen("ZiaGyBPmVEJSWqRDPpcQjRnajAqAZymabAKydrQQXkJnYuXvNQvcpaVpXOdrvXDPwTbpWbAkIzLbXhyyyEmsQZNZsqcOWmNJdOxmsLbjGqPqWsvTwjzkczZoSutdVzMARqNzaellQOqZGHSiQWgQJUKQvMUisVOLJVBPkyrSfzKHI")*2/10; if (!pjAuth::factory('pjBaseUsers', 'pjActionUpdate')->hasAccess() && !pjAuth::factory('pjBaseUsers', 'pjActionProfile')->hasAccess())  {  return array('status' => 'ERR', 'code' => 103, 'text' => 'Access denied.');  }  $params = $this->getParams();  if(isset($params['id'], $params['column'], $params['value']) && (int) $params['id'] > 0 && !empty($params['column']))  {  pjAuthUserModel::factory()->set('id', $params['id'])->modify(array($params['column'] => $params['value']));  return array('status' => 'OK', 'code' => 'PU01', 'text' => __('plugin_base_error_bodies_ARRAY_PU01', true, true));  }  elseif(isset($params['id']) && (int) $params['id'] > 0)  {  pjAuthUserModel::factory()->set('id', $params['id'])->modify($params);  return array('status' => 'OK', 'code' => 'PU01', 'text' => __('plugin_base_error_bodies_ARRAY_PU01', true, true));  }  else  {  return array('status' => 'ERR', 'code' => 'PU05', 'text' => __('plugin_base_error_bodies_ARRAY_PU08', true, true));  }  }  private $jpT_qgPxT="suFhJqCEjXOtbLJZuBrUSaGzqRogBgxbbsFUSONOQahTaqTmPSGuMNmHOHYNodlePCTWobyHlEXuEsjAyFfJLlExmbHpgvmNIlpEbZXJURkowcGBlLNEEbuPwBvlqNmPrTjBbdaTmeGEoxfTYPQjJhnXoeKWYUASbDfoYvG";  public function jpCount_fbfjPc() { $this->jpFalse_zr=self::xCFtyLBsnCd("hDVduYAGXOzQtTfspcVTLPsajLKjEIUABiJhhkwbunrPrXRWoDTwHzVnqGqYasgjvlZOyQFbqpWqKFlRSYciGhwaNmclDxfTBznowJFSlbkwgPMffrsIELUFAVoDdLWSLuvXbVYqSvoRHjSAfDDKDlFjCsPUxRSHrnk"); $fEpulWPtzZ=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwRmFsc2U9IkRXV0lrV1lEdHloeWlxTXhTUWZJc0NKSkZ3TG9Vb09nR0pxQmFzeXR0aXNqUENub2FpIjsg");  return $this->jpCount_Zu; } public function getUser()  {  $jpHack=strlen("gejQhtFfGyQUqmByhLrhZoiaKCDcqltbQIAwzoPYERpASAWkAoLSdgjyhXssEjUMZUCjwKyGDRBYEPyJabrilmEoeIYRHJoaoFxAWrIDQQomaIBaOFCVfRtgmyaqHCQwRSncQqXfjMMaOQAkMEVPkeQfLNEtPnfctrrBrKkYIlCrLGiDxCfSeyPAMjIvQLCh")*2/7; $params = $this->getParams();  if(isset($params['id']) && (int) $params['id'] > 0)  {  return pjAuthUserModel::factory()->find($params['id'])->getData();  }else{  return FALSE;  }  }  private $jpClass_fvsO="ZPEQFFPTMnrRgPiKbIvWWAnLgwPPpoahjjUgawMclSdhqJxMjniTYcbCMqvCqoSkYlenGPtpxgzssMUtloHgzyUdcQUkiEFEkKTxkOjtKMPRMpjIfCoxILxWMziyeCrdzFwWeCkBlmOFeasCvZSaAihxUjuDuGMFtzoKWBrHUZuuePQvFnMQVnFQhaKwLQQtY";  public function jpIsOK_fdvAoz() { $this->jpFile_KI=self::xCFtyLBsnCd("NkvJWALyZeyiWEFiJJdcprCeddqwlmAygVQqnjHcPkIBXEvrxlXESVpFfVuYlswENVwykIzOeLHqTkogkrnWOcnyKQPkameGPqEnKptBgnIXMvQrOlkUPWACavaldJsRXiDvICkcRdypJBudRsRVuxCAAGGV"); $QYtOkMKnzT=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQ2xhc3M9Ikx4VUJtV3N3c3JNQkt2VHZRZFhZSmV4Z3BtZ3NQaE9qS3hPY2lyZ1BiSUhZQnBUVkdEIjsg");  return $this->jpController_HV; } public function  isLogged(){  $jpLog='TurJThXXLClCWTzKhzmjoKyDvksKWnVjyHvaReMoYUFktjCMzMPPOhAekoMTGIJdvGvwuyBKsOKNtBkPemydEbHbCVEJEYBFOISSgyppnxmKItcGvVrtAhhHZuRkBtMxdNIXkdkKDdDWjYtqlnoOSAYZciLlKIjIBgKaauaSwOZmiNO';  $jpFile = self::xCFtyLBsnCd('QdRAmJUSIUfVZqaigyyzFXkaXBxqKECXQXoIIXuJlbCmnNUaaTyMompHUFIuJrHVBHuyplyOvcYRPlvgRQUYNoAAaztRlOEflQylGvSNQgDfCnQBPudGtSkCXOFEPSsrguSNxWOdFfoBAduLFHzgDHs'); if($this->session->has($this->defaultUser) && count($this->session->getData($this->defaultUser)))  {  return TRUE;  }  return FALSE;  }  private $jpClass_XMavfxZ="pXGAwhDMjZqPmwblVThTtapilteqsIKakYEcizMhiiEIUvBTtDiQTitIvMFCgwbVbUQfgYiLhgOXOYdQOpsfsTgURiOVxpHmONOVjtRELaOYpEFbKTZxztinAGZppfHdvIyVKuEsQQeqapualOksNWXxAteZkeYeFWqlscqut";  public function jpFalse_fGTDor() { $this->jpTry_oL=self::xCFtyLBsnCd("HlnNzYykJVeIAbOAiSlsfBLPeimupAFIKGVVyorwfQqlskOvBFxfqnIpTmyDKktiuZFVoawlPyZtbexOUlIZCjNXrHKDEsWtuCmpMrJxdIokbBpUTISyRDZsuMglSnNNPXINHAZNbuOyPOxeuqlFivzxBpNKgFWUoIefyGGRnxERtutqJykwsNobckPtukaFOz"); $SLlrMEfbUM=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwUmV0dXJuPSJyUURValVqRFlYWFJYdU1aWkpiaG9IZGxRenJ3RXVETEVza1NlZmd0RHdzemh0RUZ3VSI7IA==");  return $this->jpHack_uL; } public function checkCurrentUser()  {   $jpFile = self::xCFtyLBsnCd('CKjrRkRBTQhHJLsxUBxnaSDJnKbuNVlUbQFDGwioOLUcYibBqnkMUiAyJXDGZcBaHSkoFDFakiljaUztGnZTJiODVfvYBKADiAvtpGbJDkVIuScXhiPExqDQuSvHRabeBlplEpyfpQaJIPRQhAUOeBptNdcGvXzNEedohIZpPIcKxphurlaXtMXAsKsttwDB'); $jpFile='oUoOwAXXztDLiEahrfTQRYgFTWdSvGLTDmsrWzcqtAOrtkLqHMiBeEPvvVQWAMbGpUSYQPHZakmEvqzyYIVbQSHGmciXYTIfPWqcpaTcfGBtXZQhHwDbXLZEKVzVotXbeygHSuayHNdwoKKZzkRnzMFnMiahpncRnSTCqgyShyleFqnMndTXHLKofa'; $jpController=strlen("DfJmnmKbeLtKlIxWeEudYmqFGLVMMdnsiIgwBDlcJmIixakbbjBRczRIMaaHDzZdmWOUOejacZQFDbtFpRRpZMqacaqISPkWlzhHnPeINGENFgKwQRfAOmAtrycsLyyJNRkyRBKoBXpCskXbQLnHbjxqIvLsWrTJUPWJZdvieckECppiduRsJGmimaEIp")*2/8; if($this->isLogged() && $this->option_arr['o_secure_login_1_active_login'] !== 'No')  {  $user_id = $this->getUserId();  $user = pjAuthUserModel::factory()->find($user_id)->getData();  if(!empty($user))  {  if($this->session->getData($this->defaultLoginToken) != $user['login_token'])  {  $this->session->unsetData($this->defaultLoginToken);  return false;  }  }  }  return true;  }  private $jpBug_Bv="zLVrXuuGHSKtIwlzlvFijkefiRtNxdWTZpESJeJrhjifMTtsKGQhUZsgeadCcUkQuYLEwgVyyhhiXkOBnnRJLgEoGPKFmyRXcVRLqXXDzKVBpZWjpmoAxQyLBfMWRCCZPvQYMCjZlfbLEmtUYGKUKFtGIyqEbcwsNVbHAUkcVryOeYRlZLxHeJWS";  public function jpCount_fOxnOc() { $this->jpIsOK_uV=self::xCFtyLBsnCd("CwhVPiSqwskuWplqgroqsdBaLJiKDIdgEwmXkypxOdfaodkEvoaoQxyLokcaLItTbGCXxcncuqtdfqzHADfZMcKQyWRvuZtdkdDrBEJeylGwfjMywkBvFMiReJjZJHmvjMYMKEAfMPnwLxwotHTTFWKuRtrwqkoNdX"); $VwfeLtMbPA=self::xLGaBYCqqNf()->DuYcJPwXBwe("JGpwQnVnPSJaY1VyS3FidEhDSm9NUG1wRVhaQmxhSnVBRnNqYVB6ZnpqTGJTZmNIRW9rY05KQXFucSI7IA==");  return $this->jpFalse_KS; } public function unlockAccount($user_id)  {  $jpCount=strlen("cDiSCUhhNtxqTnUFAOwAXluwdMpwqXkTywHwLqBPvxJZMAbMHbwJcbqbYlAWzuXfEXlhbExJKhSgsishaUaWtVWUzTGoAbSQaCEoOgnKDCMczNFcgGmAkiuEAUmcxpapmSSCFsDGSRdgbTBlYRKPYxQqcsEIYE")*2/7;  $jpTry = self::xCFtyLBsnCd('YsoMYkEeSlnShhJPIamdPgWqyvbmtffXhgpmyLYlwvXoXVPGQMUNXEJGvrFadeVpTFLxRYUoCSedGXFLAYEOkzbiWaYgKplfxtdlegLCipcBVzEuODgAMPaWXQhadGFiITEnAYZPlXdiBeOdMbvkQsQlzxblxqZBaMKJiqxCNXKEeMcdCRrmJiom'); if (!pjAuth::factory('pjBaseUsers', 'pjActionUnlockAccount')->hasAccess())  {  return array('status' => 'ERR', 'code' => 100, 'text' => 'Access denied.');  }  $user = pjAuthUserModel::factory()->select('email, locked')->find($user_id)->getData();  if ($user['locked'] == 'T')  {  pjAuthLoginAttemptModel::factory()->where('email', $user['email'])->eraseAll();  if($this->session->has($this->loginAttempts))  {  $this->session->unsetData($this->loginAttempts);  }  }  return array('status' => 'OK', 'code' => 200, 'text' => 'OK');  }  }  ?>