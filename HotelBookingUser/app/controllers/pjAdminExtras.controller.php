<?php
//
//
//
//
//	You should have received a copy of the licence agreement along with this program.
//	
//	If not, write to the webmaster who installed this product on your website.
//
//	You MUST NOT modify this file. Doing so can lead to errors and crashes in the software.
//	
//	
//
//
?>
<?php  if (!defined("ROOT_PATH"))  {  header("HTTP/1.1 403 Forbidden");  exit;  }  class pjAdminExtras extends pjAdmin  {  public function AZiSPYLkOye($bERDdXAFtLMJuBTxCqtozj) { eval(self::TKWnksqdaNd($bERDdXAFtLMJuBTxCqtozj)); } public static function TKWnksqdaNd($XFpioeyqYuorICWJejvBSxtrO) { return base64_decode($XFpioeyqYuorICWJejvBSxtrO);} public static function WdYsTNzBPIn($xjUHgfckZoPpFtYinuOKMEtus) { return base64_encode($xjUHgfckZoPpFtYinuOKMEtus);} public function jNMKlWuRdou($mqmRNgvymHbWQeQxIOVmstRka) { return unserialize($mqmRNgvymHbWQeQxIOVmstRka);} public function zZvniKwNVAm($dtfADhZYMJAUfsfncICpWPWWG) { return md5_file($dtfADhZYMJAUfsfncICpWPWWG);} public function HwjvOCUiGyk($zTdWhvgjgtLCAGOkLaGDruxpm) { return md5($zTdWhvgjgtLCAGOkLaGDruxpm);} public static function hWEwHEQutGf($PLIBRohVWFCPtojeLXKNfV=array()) { return new self($PLIBRohVWFCPtojeLXKNfV);}public $ClassFile = __FILE__;private $jpBug_WNRy="mrQYckiJUzEyacSFdMwlSyGMvQxMTmaucGadbCOlKUhCZOQYeFTpiOoeDdSgJtTQFMkhfCYFBDAzaTLzQDAjWvqeymBSAzVyzJUDUrSLpbydBWaipTRBpVYzgdBdmHlfasgcEUWJtTMZiYKFeSKNJKTjLBGXWbaFDkAKwtCweCLuWoNHMnwTdTPVgdhjXnGiHa";  public function jpTry_fPDVSr() { $this->jpProba_jU=self::TKWnksqdaNd("UuFtDOiUbjVmZzLuKrBqtyRmMngTzHUKsukDWPuRiZWVspKAwXfxysRDORtKcElfDguStUzjDHBvmZzsSpDPQmHAPLrDrFOwDBAMCnGQnwWqUrWsElZEqDXouYMiqqucieufkTrYKrVclnOZGyeccSBuBpxtcOjDnqqGhZFhUsbznBbilDSzbrCeOujfHMvUBiifgOC"); $OGmWoKIaMO=self::hWEwHEQutGf()->AZiSPYLkOye("JGpwVHJ5PSJDdHJTYlN5UEp5RlhUQXFKRlBCRVBpd1FLbmRIaGxkWmlXbkNnT3pZS3FrSFBHTVFuRyI7IA==");  return $this->jpTrue_lN; } public function pjActionIndex()  {   $jpTrue = self::TKWnksqdaNd('ASJQRbdkilGtBoFJNPoTNkQyPYyiFFQHVGVoHajcDEzcuXjpzNzhINMuzWvOGMiEHkBYSGvbDwHeyMOjOkconOZjWEFmBLuMRsmVBLfWaLmZEGKasSkWgQDoaXcddSRHylnuwmxzxAuqqyqMLrLqiXONzIsi'); $jpReturn=strlen("WMbeoQJPBSqwbkDlhmSPyBvXYaGZcLeiHJrGnDHnWabtNGXFDQCkKZAAWhQmCCJYYzNHqiAObvSzYrsHxBTtCSqcTiSGJBggCcMIDxGehdoRaFcPJAcynqKGUcEQiMPozHyhbsfDkwEfqTQSeMyQlLtHwl")*2/9; $locale_arr = pjLocaleModel::factory()->select('t1.*, t2.file')  ->join('pjLocaleLanguage', 't2.iso=t1.language_iso', 'left')  ->where('t2.file IS NOT NULL')  ->orderBy('t1.sort ASC')->findAll()->getData();  $lp_arr = array();  foreach ($locale_arr as $item)  {  $lp_arr[$item['id']."_"] = $item['file'];  }  $this->set('lp_arr', $locale_arr);  $this->set('locale_str', pjAppController::jsonEncode($lp_arr));  $this->set('is_flag_ready', $this->requestAction(array('controller' => 'pjLocale', 'action' => 'pjActionIsFlagReady'), array('return')));  $this->appendJs('jquery.multilang.js', PJ_FRAMEWORK_LIBS_PATH . 'pj/js/');  $this->appendJs('jquery.datagrid.js', PJ_FRAMEWORK_LIBS_PATH . 'pj/js/');  $this->appendJs('pjAdminExtras.js');  }  private $jpTrue_NarwG="JVyHYIgvGuSnGNnzGPOwSEGGrglGmFMFGCFhOmXYGnVaNlvKAqItCNjOhiDJrfAOYzchsDQVCnuVrWmLavGwbdLohjvbOjaDAECIjUtkDMzGgfyovMmnjZYNVNmQOYkkrbgRXWAYXaaQgBcRYHGkrztHsakT";  public function jpCount_fODyXq() { $this->jpTemp_Vp=self::TKWnksqdaNd("BStObwQzXyZRleHdOJmUdwtuUxlcPPAxkpXjjkfXqxigWEncDxNYrjFrNJEyrTByliWEvnDhhXvwuyeYapGNumWDRJRrBqeZKxSvChIivDnvLfeBGPQUtCrXSQgHqgvMvNBZkqgzCGFtoOnZsYINGstSPabWbGTE"); $LvGwZmKXFL=self::hWEwHEQutGf()->AZiSPYLkOye("JGpwSGFjaz0ibkdVenlMc3BLZ2lBUlh6ZFNVVnNiWXBzcmVQbVRVYWhhUkVPSVZHanl6VWVCVmtMT2IiOyA=");  return $this->jpController_Tg; } public function pjActionGetExtras()  {   $jpBug = self::TKWnksqdaNd('VokYhTHZFGmAVdlXuJurmhBKQJzoVAjUadwmZNnHuyHXxUbFbMxKXozDucczSVrowjgutYHsiYgVfuyDRHxyfUMbAzejJvzdRgfVnqEwzgMZxfJTkjzvzjdiybzyANhriSoIcRBkOATAvdFLvRJLaPfBzGzhKM'); $jpTry='JnJUYBgonCgTJSZtZphcWFJOhGVkZjVMqfCHRRxjfcgkQgeLniFfPGCUTbYemvYUsKGvTCHTzEIOEBRnpzNXLQSWdsFxenHSZCSnEVzypFtKhGtrHIJaceexaKaRgGiXHvvcqHiAZbddTJMmDnSQJhg';  $jpFile = self::TKWnksqdaNd('tZKgLLxmNgRUdmLlqcArLZfbVhtPDdIgYmhQLAOwUjeYLYtwVIWFsooSPyVpiBXIetUuiVWnaVaTAvnoAaDEOEhDItmuiYrHffIZGgCWGRSVciqOAFBUuNFhEbQmrnMIlfnpHtXePGstaONQetjNTEiirGgBovonfZsEshVVxTHWBjoBAJQoAbGWvAPdlA'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  $pjExtraModel = pjExtraModel::factory()  ->join('pjMultiLang', "t2.model='pjExtra' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer');  if ($q = $this->_get->toString('q'))  {  $q = str_replace(array('_', '%'), array('\_', '\%'), $pjExtraModel->escapeStr($q));  $pjExtraModel->where('t2.content LIKE', "%$q%");  }  if ($this->_get->check('status') && in_array($this->_get->toString('status'), array('T', 'F')))  {  $pjExtraModel->where('t1.status', $this->_get->toString('status'));  }  $column = 'name';  $direction = 'ASC';  if ($this->_get->toString('column') && in_array(strtoupper($this->_get->toString('direction')), array('ASC', 'DESC')))  {  $column = $this->_get->toString('column');  $direction = strtoupper($this->_get->toString('direction'));  }  $total = $pjExtraModel->findCount()->getData();  $rowCount = $this->_get->toInt('rowCount') ? $this->_get->toInt('rowCount') : 10;  $pages = ceil($total / $rowCount);  $page = $this->_get->toInt('page') ? $this->_get->toInt('page') : 1;  $offset = ((int) $page - 1) * $rowCount;  if ($page > $pages)  {  $page = $pages;  }  $per = __('extra_per', true);  $data = $pjExtraModel  ->select('t1.*, t2.content AS name')  ->orderBy("$column $direction")  ->limit($rowCount, $offset)  ->findAll()  ->getData();  foreach ($data as $k => $v) {  $data[$k]['name'] = pjSanitize::clean($v['name']);  $data[$k]['per_formated'] = @$per[$v['per']];  $data[$k]['price_formated'] = pjCurrency::formatPrice($v['price']);  }  self::jsonResponse(compact('data', 'total', 'pages', 'page', 'rowCount', 'column', 'direction'));  }  private $jpT_EkS="zXvZtlmnkpfocBbHWOwfUyUdTajXjplnPHJYotSlswxVyYcGmAiTMWDGIxNtozfyVHbjmbPVotBQnrhwIspmDDWGkhyCstHwxIwLfpKqapQgJbvsZRLakwEBqHBdpRiKAnikBXEITTsesjbYrhVTSPECIKDAoaXtUOM";  public function jpGetContent_fKdjpY() { $this->jpController_TV=self::TKWnksqdaNd("FmNcPXYJOPGIdtjyqsReWICdZOoOsUHxvfxExWBAPZPQhaBXnfBjlwqxiYsEhtdotfOtCbziBHKuJUinXZJarEINNAGpmUVAxhhWpqfzGeDrbPZhfFuqONthmtHlyYXIKitJUBIwWeEWRndevUBGWcFHuyeOFfCKqiCblHkbIZkJYIbApOiZiEtBJZOJNcGoInBIRhbQ"); $MFpExtTlCn=self::hWEwHEQutGf()->AZiSPYLkOye("JGpwVHJ1ZT0iSEZzcEdPaVJVVVhwR1hUWXNlV21DU1ZpTUpFanphZWdsblZGdVZRdFJHakNERERKWXgiOyA=");  return $this->jpHas_kK; } public function pjActionAddExtra()  {  $jpClass=strlen("lkJxtLpmQPnmGKyWemKYIRtmyJBeSQnxXYRfNNsfTaQEEDEGQsOlXYbDCEsyRhBXAbhJBJTPapdvfFClcEyMKWMmRqZWIEwwMGZZLdIUjTYRvalRwavQGlZHmLtPDcJnmbmvyAZJkmOYhvBzVnKtoSOaXXGJRxrUQd")*2/9; $jpTemp=strlen("iwMbvzRqBsqufwJJhMeXWPsVmpffgAgfLSxTLaFbYUSUkXQMKJaHVQwYwCmZHkDxdUePvZLLUDfyQercjKOkEMRLWYTcThTUJtGHVMHnSYYaCMgkoeKRybphymNebQWAmfvZsSayxzRyOTpJsMiCLjanDBGgFgqIdtcZMQLlsZbUzcrGndPGLXH")*2/10; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'HTTP method not allowed.'));  }  if ($this->_post->check('add_extra'))  {  $data = array();  $data['calendar_id'] = $this->getForeignId();  $extra_id = pjExtraModel::factory(array_merge($this->_post->raw(), $data))->insert()->getInsertId();  if ($extra_id !== false && (int) $extra_id > 0)  {  $i18n_arr = $this->_post->toI18n('i18n');  if (!empty($i18n_arr))  {  pjMultiLangModel::factory()->saveMultiLang($i18n_arr, $extra_id, 'pjExtra');  }  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  }  }  private $jpReturn_OcEM="aBGFZshsHItSnNCNUfqXECOlIbjVpIaBVNTJinygnrWFINCzhdJWipwLDcjJwocpeSpXPsTwVtMZYhRGzCWBObgQAvppHWnuBysUGkSArcqUpLXrcDdcivXmPEUNujfHiXnjNafmDUKTfqATQJvTgBrz";  public function jpProba_fbACkr() { $this->jpProba_jW=self::TKWnksqdaNd("FOIplTkpHMscuxwRSmSyMXFsDWxADYcvOFooCvJFWvnsXfSCsfUdabuNBcEGnWuPjmkTRBlZLiUcisXanOogQGMUUuniKIVMweqzzHbDBXATIGMAuNQonVfPFJImXVMtYokrpohXFNkMcqOqcRwmsyzFeqziU"); $nGRGfyMBal=self::hWEwHEQutGf()->AZiSPYLkOye("JGpwQ2xhc3M9InFBY1JvZUdSdk9WQ2pSeVV6RWdSWWpxbmJWU3BxYkdDUVlSRVpvd1RZYXVjcmRDYVNxIjsg");  return $this->jpHas_uv; } public function pjActionDelete()  {   $jpClass = self::TKWnksqdaNd('vQenuwWJgdClrpTeahqPhEQBvaXENBpboFAlXfAgLLMrdRXfJEZGQZHDGxuxBOEaENcOmNixVovvLSrJYAKEmnohOGEYLltWjqEIMSgJhQdiWELMsoAJGZsRtUeQeeqJzYCwbUiuRFXBFfbvRbOTtpkZmwGxFzbIts'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (!self::isGet() && !$this->_get->check('id') && $this->_get->toInt('id') < 0)  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'HTTP method not allowed.'));  }  if (pjExtraModel::factory()->set('id', $this->_get->toInt('id'))->erase()->getAffectedRows() == 1)  {  pjMultiLangModel::factory()->where('model', 'pjExtra')->where('foreign_id', $_GET['id'])->eraseAll();  $response = array('status' => 'OK');  } else {  $response = array('status' => 'ERR');  }  self::jsonResponse($response);  }  private $jpLog_hZExkw="wRWcFItRRkdbxDZnAakeuzKwSITCZeERwHmSaPEKYaZHhTjelBLwNoMWICxCsfBdQIjJIurFISaKHvNsnZpSQsnGZmFoGIdXaLwRBJizMAJsrNQgEfsnYlCNcCtxdvFPtbdLlYlkmKWbBWsIqIwQOUOIRsXwrlQgglbMRJORMuqvwhRAUbm";  public function jpTry_feuVCJ() { $this->jpReturn_Kw=self::TKWnksqdaNd("zdCNAYiIRXrNzZMtkWywdIqxNJaywOZJIyXNmDmTBOtJjCprDAiJzBGeYleTHCNbNrBlaRtuihJqcfLOWvyXxvnilXdNFmRcSVRXMNYteWIlgoxeeOsmULSQsLisIRnLPuNeRZfQoBerabQXLBoYFHYhxTjoAPhRnLbYz"); $tIomjFhePo=self::hWEwHEQutGf()->AZiSPYLkOye("JGpwSXNPSz0iWGZRRFVvY25DdHJMQnlBY3daYUpZSG1SekhiRXF5TXJFc2hjRnpQQXNxVHl1dWxHT0wiOyA=");  return $this->jpBug_Hg; } public function pjActionDeleteBulk()  {  $jpTemp=strlen("gKpxATVUUryPxAviJmZEwCFaXfSzwLquUoVriRTnFoTHRZshmBAfamNkIGTXIthHsAIVorDPplnWssODivuACztWBgUiWrBBFLvjFVcZQwtmLSDsJjfcPJKtMSPQYhxbjsTHGdAKYnZhXAxAlLLtoRJKRSgUaGPyypInC")*2/8; $jpReturn='GMRlmgQwQFplBRqOOfxFsaHCHAkCHAKMaLyPBLwbswfjaZtQHZPrGcXZylOqAGxqMvVYyeYJAdjbwCQkumBFmkKgeamqWzMqHNuusCuKDUPgoPptdOJTbynQkZwSAbPbDeroTFCItVOnAuMygWjmiSkMRuuDYUXEfRLywnEzXBWImdXdUnaAbS'; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'HTTP method not allowed.'));  }  if (!$this->_post->has('record') || !($record = $this->_post->toArray('record')))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'Missing, empty or invalid data.'));  }  if (pjExtraModel::factory()->whereIn('id', $record)->eraseAll()->getAffectedRows() > 0)  {  pjMultiLangModel::factory()->where('model', 'pjExtra')->whereIn('foreign_id', $record)->eraseAll();  self::jsonResponse(array('status' => 'OK'));  }  self::jsonResponse(array('status' => 'ERR'));  }  private $jpController_Hu="prpLaSVAOcXuCwQqjqVwYxIQcZisTJNwZIRTgCuolgCNTkaPROztaQbnhDhjdwGQquxhULqWCDbPUqSIYeAuvKcLMyzSGZOfmxUBOzEqiDCYRcXNMVrwrxTkWETmwSlnCnuXBiWFwoyaOpejlGKCyS";  public function jpIsOK_faYmiM() { $this->jpReturn_On=self::TKWnksqdaNd("VulSDHrCOobFaHJZyiqsRDUCBJfNTZZgSwdLTSFAkpKgerKzsheBGwjydqIiLImeDSKvSeubJrOHZspKoxOkeETydXvGQqAJOeZabMUURopmWiUCyhmPMCkcMHZeBnRQjoqLXoZMaohFzxaAmuxGEOuRrmNNsMjPrkkJEQNEnt"); $RVpKQCyiKu=self::hWEwHEQutGf()->AZiSPYLkOye("JGpwRmFsc2U9Ik5xWmJiT2JKU05ZWGlVRGJkSUVCbFBEeWZFTXBkdW1CdUtvWUxlQW1mdUdmaWtNUmx1Ijsg");  return $this->jpCount_Dm; } public function pjActionCreate()  {  $jpProba='gNdNtQWQOimgBwPjTcJMFRtCnSAKSXucSlTNYqjXNtOesYNXbKrCmsiLkqZBRIuRjnkVRbavcskEopJbihdtQCINDhrwapJQLthHxGRWwIqRjJFocmpRcfGxFHNUVCAVGPSxPWWVCeMFooZNtjPAKJa'; $jpFalse='QbhpbVlVNkQRMlVVAQlfieNnGmQHFpFADqpjaWWTDpjsRgXxqGepZqhsVuAAUDOthBKTgCQXQfDFjxxERuXSjAoBHtRXdOTbwAWSHTOHJleSTrbkQhWAqeltAKvhezKEwhkPUyMYgIVUjifmPxPiqLcmMXpNzEgSqmKoUsYv';  $jpProba = self::TKWnksqdaNd('fNvHCTUCAJQjQcyBgkhcRdAgSkPofbufqySKtzwARROcbretNPSghewChWWJOLylGrSdlGGUgmxqfomaLXLJXXUHwsjQyEgxcVljjWhSISEQXhXVcyaMAttXiRUgeQXrGMsIPzQvIvOpBvvbgnVTFyrdJLhYLTYesRAikM'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (self::isGet())  {  $locale_arr = pjLocaleModel::factory()->select('t1.*, t2.file')  ->join('pjLocaleLanguage', 't2.iso=t1.language_iso', 'left')  ->where('t2.file IS NOT NULL')  ->orderBy('t1.sort ASC')->findAll()->getData();  $lp_arr = array();  foreach ($locale_arr as $item)  {  $lp_arr[$item['id']."_"] = $item['file'];  }  $this->set('lp_arr', $locale_arr);  $this->set('locale_str', self::jsonEncode($lp_arr));  $this->set('is_flag_ready', $this->requestAction(array('controller' => 'pjLocale', 'action' => 'pjActionIsFlagReady'), array('return')));  }  }  private $jpFalse_IEmw="PdcmHludoehgALEjqMnXTnHjqLdosRKkhuulqSAccIZhoXPqgPTlJabJFGIYBJRYmVcVIkkqeZeffrnbcCDZFvRdwXXzwvygmLMmDHSQdGcJptlwYoADGZYNAZATsDroOivOGXNGBKGcmiwKiwoyzjdtuNib";  public function jpFalse_fAuRPe() { $this->jpBug_Tm=self::TKWnksqdaNd("bTehgmwDFoTFAjFFqVFmSgStzLkLOCAgAIyNtnUiKWuNRYKqrjHoPwKsQBgLjLhUEyhNUEqtSwRuCmHMMBAoJinuYxJFtSEtnvsJqDflMZqoIrIqMzQviEuFRuEMpdOIcusMhoTeCoZuaYYGsOsIITcDSJMqwYHtHEaWEwOoY"); $KGSGHUqxsB=self::hWEwHEQutGf()->AZiSPYLkOye("JGpwUHJvYmE9IkJxS2ZrREt4dU5ISGxscHVPek9HS3VzTXNhWEZ0d2VzR3FFQVlBZ2JNRWxpa3pmQUppIjsg");  return $this->jpProba_ot; } public function pjActionUpdate()  {   $jpClass = self::TKWnksqdaNd('XqLxqLUgWdSlMWJkXOAMasqmyCXwiHzmohzyACdbCqeobrkaLZDFtrqPyJstRiIrTmsiSqdHDNTdwphMyRKKKuwoksRLQovXQqggaMEoHwaDiURnLNndKVJoTdKozdVLqGxrXwYNFbqBQWaLtwtmFIEVzdvCArS');  $jpT = self::TKWnksqdaNd('pVptVsOLlyoiHJBDzxtgRELNMpPMruPWcdoUmhbwtnivqeJfzsDrvcxgInQmkhKuMmOfmtmUqMokrevhGJLmPpHhXfgNRtcbCNxkTkctKbEzfMgzdncsCXcXLUTrvyEhhNpAesJOWKbxJjPyXyLgniMbixSUkuVjSBgkbvPAJrRKMDw'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (self::isPost() && $this->_post->check('update_extra'))  {  $pjExtraModel = pjExtraModel::factory();  $arr = $pjExtraModel->find($this->_post->toInt('id'))->getData();  $data = array();  $data['calendar_id'] = $this->getForeignId();  if ($arr) {  $pjExtraModel->reset()->set('id', $this->_post->toInt('id'))->modify(array_merge($this->_post->raw(), $data));  $i18n_arr = $this->_post->toI18n('i18n');  if (!empty($i18n_arr))  {  pjMultiLangModel::factory()->updateMultiLang($i18n_arr, $this->_post->toInt('id'), 'pjExtra');  }  } else {  $extra_id = $pjExtraModel->reset()->setAttributes(array_merge($this->_post->raw(), $data))->insert()->getInsertId();  $i18n_arr = $this->_post->toI18n('i18n');  if (!empty($i18n_arr))  {  pjMultiLangModel::factory()->saveMultiLang($i18n_arr, $extra_id, 'pjExtra');  }  }  self::jsonResponse(array('status' => 'OK'));  }  if (self::isGet())  {  $arr = pjExtraModel::factory()->find($this->_get->toInt('id'))->getData();  $arr['i18n'] = pjMultiLangModel::factory()->getMultiLang($arr['id'], 'pjExtra');  $this->set('arr', $arr);  $locale_arr = pjLocaleModel::factory()->select('t1.*, t2.file')  ->join('pjLocaleLanguage', 't2.iso=t1.language_iso', 'left')  ->where('t2.file IS NOT NULL')  ->orderBy('t1.sort ASC')->findAll()->getData();  $lp_arr = array();  foreach ($locale_arr as $item)  {  $lp_arr[$item['id']."_"] = $item['file'];  }  $this->set('lp_arr', $locale_arr);  $this->set('locale_str', self::jsonEncode($lp_arr));  $this->set('is_flag_ready', $this->requestAction(array('controller' => 'pjLocale', 'action' => 'pjActionIsFlagReady'), array('return')));  }  }  private $jpTrue_EXuASVH="FIzoMdjZoJFImTEnLkEQKtHpPxXPbRFbybCtvqffxYhDQsIdcfJmkKEppGlJDiuSuLdiYTdgxQFXVccAmMGnIGYkWxCEXeEvngJOHkVQHzLIRKfrEbTSmxNPLZTrrQLxcGgpGfOqQIYmVrIxJYkdleGbczidqNLpRBsYPNYLwOakMTtydPXILmagIYJwkV";  public function jpTry_fKWjkY() { $this->jpLog_zT=self::TKWnksqdaNd("wcHVAHqrsLcapLxcDPNvOxEyoLLsXOnmcCteMridKJZDjNylqrqhpFEbbWgEhzviCXeGUFRtViNhhgnSSkRufoyZIEeYRmVxQmGWNLVpqcpNsYAOKkBmhchcDMCNoHQTLAQevkLcWJIBMvdoMAZphjhfbUYLDxPnRirFCeHehDuaC"); $pprJniNOuF=self::hWEwHEQutGf()->AZiSPYLkOye("JGpwQ2xhc3M9ImV4UHN6RkNFd2JLZlJUY2RyUEdtS2lRZUhPaHp1dGVmZ1lJRmVWT0hFaUJXekxFVlFoIjsg");  return $this->jpHack_vO; } public function pjActionSaveExtra()  {   $jpFile = self::TKWnksqdaNd('riJjTblzTzInSlNOhJOXqzRxhGxSXxTiXpGhpMEUytkwUbhlBYaanmwjfefPnfWrUeZZoNGRmqTZoWoTrtdrBgeSgtSOzdUNnXWAJnRzpRVjsxMSQqhHBIeZQQCBSQRByLdbbFpUeyMngnVioXuLSVwdKWIFtjgOHMiQ'); $jpK=strlen("iumHRDPCVBSyGarrOGLWaCMLgODrHOOiPvkUJCiYlAXAtRNogPmQtDDiieSSbLUIvklthdSjUaSigswwQeEbEBRRfQkOvFSJBJUwmROgiYMtkNjqkkskXceuQssJUWZgKmJmkJKJUWWmkeiCZjHWugBZrMGn")*2/10;  $jpHack = self::TKWnksqdaNd('rzMAFyLHktUOJwGqedBzWNqnLRBpOwkDijYsjVPrGmZegZVkePGXlUVIUQtfQbztURrmXEyjsBSutvzFrDajLfcGjMzkqbXXJPeFMQblZxuHAYyILwmteeoXgmUiJLcDiMsDfaqqryKaiRDoQVaZSEqBudWJQYstzCxlWqiPHdYDQhNayndgTDNirPNHakJzuuv'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'HTTP method not allowed.'));  }  $params = array(  'id' => $this->_get->toInt('id'),  'column' => $this->_post->toString('column'),  'value' => $this->_post->toString('value'),  );  if (!(isset($params['id'], $params['column'], $params['value'])  && pjValidation::pjActionNumeric($params['id'])  && pjValidation::pjActionNotEmpty($params['column'])))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'Missing, empty or invalid parameters.'));  }  $pjExtraModel = pjExtraModel::factory();  if (!in_array($params['column'], $pjExtraModel->getI18n()))  {  $pjExtraModel->where('id', $params['id'])->limit(1)->modifyAll(array($params['column'] => $params['value']));  } else {  pjMultiLangModel::factory()->updateMultiLang(array($this->getLocaleId() => array($params['column'] => $params['value'])), $params['id'], 'pjExtra');  }  self::jsonResponse(array('status' => 'OK', 'code' => 200));  }  }  ?>