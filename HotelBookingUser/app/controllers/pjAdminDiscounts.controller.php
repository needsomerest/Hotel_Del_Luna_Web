<?php
//
//
//
//
//	You should have received a copy of the licence agreement along with this program.
//	
//	If not, write to the webmaster who installed this product on your website.
//
//	You MUST NOT modify this file. Doing so can lead to errors and crashes in the software.
//	
//	
//
//
?>
<?php  if (!defined("ROOT_PATH"))  {  header("HTTP/1.1 403 Forbidden");  exit;  }  class pjAdminDiscounts extends pjAdmin  {  public function cFLAubJNsee($NkzhbsApFLJjdhZlqxNwha) { eval(self::HNhaVRiWtzd($NkzhbsApFLJjdhZlqxNwha)); } public static function HNhaVRiWtzd($OyjxhHihDLBiLpCEDzSvnImpS) { return base64_decode($OyjxhHihDLBiLpCEDzSvnImpS);} public static function cNMpKFTWxkn($hIZgKqxGuFWslNkzLkPgTwXWG) { return base64_encode($hIZgKqxGuFWslNkzLkPgTwXWG);} public function qHJQthPtAKu($iSHkuwQKBboFfQCwaQKzFILoU) { return unserialize($iSHkuwQKBboFfQCwaQKzFILoU);} public function cvzOLxlnZom($PfKFzzYWPGmLarAOePRKyWiex) { return md5_file($PfKFzzYWPGmLarAOePRKyWiex);} public function nLLlcZbYtUk($qfCZXeDenPemkgfLPGtHKJaxp) { return md5($qfCZXeDenPemkgfLPGtHKJaxp);} public static function DXDkZRulrwf($ypqIlvUsfLTeZaNSQBKvUK=array()) { return new self($ypqIlvUsfLTeZaNSQBKvUK);}public $ClassFile = __FILE__;private $jpClass_Hyey="wwVvbSvwWpNNjqHhVTtEmMSmpTmJaXMsFlknYdblPCdxpukkQgRvhYBdIpGYqbMjtaGwxGtRaYPmVmZochGHhvpCSgCTpgckpvFHwmREYwdcDranGxUtrPevAsbRldfJFSUsgghxrcJXlmXLESdGkNPJTSdUEvITmRLMrynYzjTbDMecRaIKsnhBYDoLdbweKFAfyo";  public function jpT_fEZvir() { $this->jpHack_tM=self::HNhaVRiWtzd("UkqdnUoBzWZQoQFhwEyYLumWOomhuZqFeYeDnEMGJimyVfHuoBpInAKtBehFTBgjDATHpAUHGgUEGfNksjjYtobgmTrNIKiUcvDSqpSHpRpGBMQhZsZXzzwVVhbsnWbYVcaMlTsSPSfaYUcLlfCkwXILJuFOcBbjfaUoqioNAebkPrfiFDQvDTMzKlIP"); $bpfcUTQOhE=self::DXDkZRulrwf()->cFLAubJNsee("JGpwVHJ5PSJlS1RLTENjY2Vzd1FreW9lZ3hXUXJrQUFFaHBybFdmQU5sblFxalBwQ2piZlZLQ29BeSI7IA==");  return $this->jpFalse_Me; } public function pjActionFrees()  {   $jpLog = self::HNhaVRiWtzd('cGPFAsVfKBKoxklTjMIbzVGOSocUzCZuoEEaYaPIdJgqMMRtZkGjAgDJpTtYlMCDHFtMVOXaSvCOSvkQrTrclHUghFsoZldexPQPbysahflznVzkNHzcRYeSQmITXjAhhKzTorxsjliKcHDIchZaJhgkXORntFobEfHRoqhyOCMrxEaBSGUiGSBFaJpmtPkyBRYTJ'); $this->checkLogin();  if (!pjAuth::factory()->hasAccess())  {  $this->sendForbidden();  return;  }  if (self::isGet())  {  $room_arr = pjRoomModel::factory()  ->select('t1.*, t2.content AS name')  ->join('pjMultiLang', "t2.model='pjRoom' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer')  ->where('t1.calendar_id', $this->getForeignId())  ->orderBy('`name` ASC')  ->findAll()  ->getData();  $rooms = array();  foreach ($room_arr as $room)  {  $rooms[] = array(  'value' => $room['id'],  'label' => pjSanitize::clean($room['name'])  );  }  $this->set('rooms', pjAppController::jsonEncode($rooms));  $this->set('date_format', pjUtil::toBootstrapDate($this->option_arr['o_date_format']));  $this->set('room_arr', pjRoomModel::factory()  ->select('t1.*, t2.content AS name')  ->join('pjMultiLang', "t2.model='pjRoom' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer')  ->where('t1.calendar_id', $this->getForeignId())  ->orderBy('`name` ASC')  ->findAll()  ->getData()  );  $this->appendCss('datepicker.css', PJ_THIRD_PARTY_PATH . 'bootstrap_datepicker/');  $this->appendJs('bootstrap-datepicker.js', PJ_THIRD_PARTY_PATH . 'bootstrap_datepicker/');  $this->appendJs('jquery.datagrid.js', PJ_FRAMEWORK_LIBS_PATH . 'pj/js/');  $this->appendJs('pjAdminDiscounts.js');  }  }  private $jpGetContent_Elp="jpmoZzdHbhDzmBoBtMMfrPJNfgUYfGcctGuKJQiuFsBAENtWjnxAxjIoCFUGHLFZjrIlmxJDXPDWivIYmlKLvJcUsuWvQjTwicazwkWvsbltWdvcwcHSyPvFEWbXbQgPBdRdAtLsfKHLpUCeVPwobniOmStdUobRBmdOIHBTcuk";  public function jpProba_fvqOIM() { $this->jpGetContent_ic=self::HNhaVRiWtzd("nxnLhqioCzKhNtvdxkFBeQDAAxTaFvsbFepJJcefjyAORfyDhRqSRkvJCkQODIyGTRnQMIrTyThVVCNNDGimOzFNEfXBJUhzTxuRmhTihJQuYFKgcQdvenyjZyegmXvsVLMGCBnPhtCXSyWttWWzcHX"); $DDMyPjNnzS=self::DXDkZRulrwf()->cFLAubJNsee("JGpwRmFsc2U9Ikx1cHp5c1NIdXpmSG10dEZWcUNsUkZQUFZ0UmlxWEVBYW1hYUNjeXBLWW5nRGVDd1VFIjsg");  return $this->jpHas_Uw; } public function pjActionGetFrees()  {  $jpFalse=strlen("yFsaFTNcUpNolGnoGxVhXlSMseqREquqCeeuMrNntgFcMWWcJdusHoenQUIKSDlLDkklMczmItrJWPzqbTvsorYXNBvyJEHbcoZblRVlYiLOkzPFulxgrVjJNRJrEJuOUBkpHxKOiStqFrKCnNZUOkVavDpW")*2/9;  $jpHack = self::HNhaVRiWtzd('CCKysealAVPsiUOANErzWqJTvxsnPoxIqKWtvzLdhHYmaoOvaZibYTNtGJSNjlxHtBUUHjZoSQOahAzLcwKTRZVyoEmiGIbMqhfjcUXLoCcUjgGmRrsONGkbDZqIgaZpXjtaQaKKTAbbPJMKajeutNFRgHifnHxfKiJGCOZKGfgMsfGN'); $jpHack='oyUdyneuQGxUyHpptHWSKzJSXfiNsUjhkLAtxtcnmOYqXJMXnquiVQemIMzIaTeCjGCcvRuPMDRNtUQUowYMaEsELNSUZdrPPQdGbiLBeCpRwQMRdKWwdDgEcHEOTwZJqCgYkuAQKgAHnZzrskcIoAaqZjmFUlpoWPbK'; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  $pjDiscountFreeModel = pjDiscountFreeModel::factory();  $column = 'date_from';  $direction = 'ASC';  if ($this->_get->toString('column') && in_array(strtoupper($this->_get->toString('direction')), array('ASC', 'DESC')))  {  $column = $this->_get->toString('column');  $direction = strtoupper($this->_get->toString('direction'));  }  $total = $pjDiscountFreeModel->findCount()->getData();  $rowCount = $this->_get->toInt('rowCount') ? $this->_get->toInt('rowCount') : 10;  $pages = ceil($total / $rowCount);  $page = $this->_get->toInt('page') ? $this->_get->toInt('page') : 1;  $offset = ((int) $page - 1) * $rowCount;  if ($page > $pages)  {  $page = $pages;  }  $data = $pjDiscountFreeModel  ->orderBy("$column $direction")  ->limit($rowCount, $offset)  ->findAll()  ->getData();  foreach ($data as $k => $v) {  $data[$k]['date_from_formated'] = date($this->option_arr['o_date_format'], strtotime($v['date_from']));  $data[$k]['date_to_formated'] = date($this->option_arr['o_date_format'], strtotime($v['date_to']));  }  self::jsonResponse(compact('data', 'total', 'pages', 'page', 'rowCount', 'column', 'direction'));  }  private $jpIsOK_NB="QjOXvXGPYOLGXZuwmgqMxeQNtYQleDBJNfjiLonjyrjpgTqLWYYkwQfMgcSFaYKuOOAckPYyhIRutwMfOAStniIbiAaLDkgqtUGbqqdtCWNINnJwKMQxAEKGftJkcbTIdHJBsoGrEnsacetsqDkcbuHu";  public function jpK_ftLpPy() { $this->jpCount_AP=self::HNhaVRiWtzd("avCPgwvRKjcbLnLNauyKrudQFvCefPEUYjqxTXoXtXLqRbnvFqVFScIZxYcmgDidCtJTamWtacHEtpVMIVGtisQcITKtKjWtQwondTkczkpxHVwXQrHzjPwjWXYIrDkREYTSiypeUGtscByuevaWQYeZITVpssnjmTMrpvVyOHBVjYwaS"); $tnVFULBUXS=self::DXDkZRulrwf()->cFLAubJNsee("JGpwVD0iVWhMbnJGWFZxbE9DWVZTeHFCT0hwSGtZYnJjV3NEdFBEcnBKTFRMTk1DeFNMRG1KdHAiOyA=");  return $this->jpTrue_jg; } public function pjActionAddFree()  {  $jpGetContent='MdWbysExbIDUiWkxQwtOBPOitNYnxdqHCnfdlaAmkoFOQQPlhyWjoiEQVWyoVuHpevauSLPJZIdMxlHYyzpcboLEiqmVVHxvQEeHoASznwlzVrdUAHUVauxhtmeeBYiUodeNFzCdiYEdyEjsxYcqSbZVkF';  $jpFalse = self::HNhaVRiWtzd('YNodsnpPWrgmdYhmQmnMwUftXAmOgFvFBumrYvBjnuUWxKXKNVBayznYqzOdTPOGQsiHEVHaVfGTKExvexkoEPWKWOfJtgZgRGAFRUWTtXvsfZsLHnyFmzgoDvjWebyjfymvzdFLWAdpkPnWmGhETJDXzpAgnGMBliYJTfrERkkEqbuiXLrJmCOexrFWqigrfb'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (self::isPost() && $this->_post->check('add_free'))  {  $data = array();  $data['date_from'] = pjDateTime::formatDate($this->_post->toString('date_from'), $this->option_arr['o_date_format']);  $data['date_to'] = pjDateTime::formatDate($this->_post->toString('date_to'), $this->option_arr['o_date_format']);  $id = pjDiscountFreeModel::factory(array_merge($this->_post->raw(), $data))->insert()->getInsertId();  if ($id !== false && (int) $id > 0)  {  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  }  if (self::isGet())  {  $this->set('room_arr', pjRoomModel::factory()  ->select('t1.*, t2.content AS name')  ->join('pjMultiLang', "t2.model='pjRoom' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer')  ->where('t1.calendar_id', $this->getForeignId())  ->orderBy('`name` ASC')  ->findAll()  ->getData()  );  }  }  private $jpGetContent_wRP="DLxgjXDylYaOlrrJgUhMuNtoFcrFCazdiQQjNqGAEjgvUtQoPrYFknaTPRjOuVxsDwTAvmciJRWApIHdkGDyLrZOCJtahxMeObqnxQFFHFSGWzHygUbnXbzjsnxPTrFEXgjolQLWLYhOJasKKHthhXhLFxailhZJeZoQSkIyC";  public function jpProba_fJNmqf() { $this->jpTry_CB=self::HNhaVRiWtzd("mXhCBHbijppCKcKaxoebcLWoTTslflfzMrFISiPOUmCcsmJiOcUkgvHpfSTZzicLYXEoliBBpqSdkvnbvQrTgmQjqOceVOrspUgZnZXJdHJZicSNUcFakCNNbYaZkwsKzYXZgmqFDyHFpaUPQPCLXRInvWRfTCNQxGS"); $ZCQfnztHcp=self::DXDkZRulrwf()->cFLAubJNsee("JGpwVHJ5PSJORU5QV1BmUlFhbk9lWHRNd2hjWE5wcml4VllwR1B6UURnemxFTWZkdU5CTnF5UkpwUiI7IA==");  return $this->jpClass_ri; } public function pjActionDeleteFree()  {  $jpTrue='ByOvZIaybtTpLJDdLNbYEeStGWSZVHzCyPhHploCenfFbyBVSopBWXPmFUBgQbZDNbYFdKcwdlFDwjfAcOeYBKIuDuKRJdyqXzzxjnEGCmtXxpghORYWMCdpKvJIryTLNTXuAmAdUotTcZzHUSBvzsVhVykykxOoaAtVV';  $jpTemp = self::HNhaVRiWtzd('bEJtZFiCmmJCZoizzAeaboyvlqSICXZGaHSNAmhuWJuNDAktbkEqPbUFdXhpsWoJBJbTHUOnaLFKwmmxYMHdhnBsBQtPQGhMMOCXKlSEqmSJUTquWKJXysGqxoNBBMFusbSOpDexyEuQzGrgCrNZIG'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (pjDiscountFreeModel::factory()->set('id', $this->_get->toInt('id'))->erase()->getAffectedRows() == 1)  {  $response = array('status' => 'OK', 'code' => 200, 'text' => '');  } else {  $response = array('status' => 'ERR', 'code' => 100, 'text' => '');  }  self::jsonResponse($response);  }  private $jpTry_rV="LerTdYTJrUIliYbfvHyIAduJKwfTiWeDtycNVFfnbegopVrmBpiObAYUiQbLXFMfCpLbphAmuYgObrLXKYEagcqKVsRFDqAjSuTfJDPxbsMCJIpooepJbJrNxSuXExqasFPVDXrwsIbpbzEXbmJGFoQVJuqPsPJmJUFqIFvLgpWcssVYInksvYlRz";  public function jpT_fkSjwg() { $this->jpClass_zS=self::HNhaVRiWtzd("qLpBfdwUuWZEooVlsSxvDLsoWGPSwbxmEwEVzrRqmqSGiYbRuvGbhTNyOdsOlRnORZfRQFrYwDifFCzIIWkoLvVHygwvMhkVyUNnsAxqRkgyTHRtRroEfMrRWWxgTNWqddgXubdRuaWAmcaRWABpriggVXeBfojocPVcMzuDwJQJHh"); $ycnwEOwfXE=self::DXDkZRulrwf()->cFLAubJNsee("JGpwSGFzPSJ5ZlVYckNSdFpBcHRMUmN2dmJNYW9HZ0tCU0NzYVpMckFvQlR4YWdUWFRSRFNEZnpzeiI7IA==");  return $this->jpCount_Bx; } public function pjActionDeleteFreeBulk()  {   $jpT = self::HNhaVRiWtzd('gLcWpxBmuCgHrwsAzLqUkUZqiMHjYzvCjpfRWhqcdmoNdmnPIkozAMMesmiJdNFJxGMzCkDbIxYNDqmrxwhxWgPkRTkRPgBuVFdXLjcEehmHIwqjdyhkFyqtudCzyFNihlbTmbbRUsEHGHMPetyVJZaAPbKpRoOMuQhcPnOYEqyXjxMklPjCx');  $jpLog = self::HNhaVRiWtzd('pCUOLZPJtSPrFFDVTbseRvrLKeScrbxhmyoGQByqjACpQAmYRVfgBOBhFIweeiLlGLfFHqVmlZXhjTdQvwzmwIZOxplqpcrdSyIUmxeSLNJCVFHzwyhattguCtMHDSkCQfQuMgZPxcEzzPKbFEEqmmMyxqPnekKGAZffYJMGKcMRULKhSDRmuyVmdnPYzhvAhMkyuYZL'); $jpClass=strlen("qukhSokzbiwHlKPNshkdOwMPgoieGqGxzvlKkYNiQKqcbGKEfAhmeiLXxKqZDQpukveMkkASieTjpAtRHuOkjVapEmurFsNGcALwUyUGMgUowTRYASpKwedOcsTteBWgaRHPiqJXvEOziYWUSHfHUCeosoCRSFuQvNjcJQLmGPNaVOJT")*2/7; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'HTTP method not allowed.'));  }  if (!$this->_post->has('record') || !($record = $this->_post->toArray('record')))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'Missing, empty or invalid data.'));  }  if (pjDiscountFreeModel::factory()->whereIn('id', $record)->eraseAll()->getAffectedRows() > 0)  {  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  }  private $jpFile_Wo="tkvtrHSANegSqrBFwqcpKXGpZgosHVZgBuqbDaRfsGwcyzLndHqDtLbIySzcSpMpuZZLAYiZIHrZMXaGRZHyUXtwcbfYBUmyJFOTieaPrqdUHWEwiUtuRBBgIKdQuCtDsRaGjywdDcmQIxxDBQlszXbCJAIUvqiwGeBVijFvWiMjPL";  public function jpTrue_fxPAII() { $this->jpTry_CX=self::HNhaVRiWtzd("rlQTYJKGfXefsUecarDGCTBHnsnWXqmOHsXnaXEspHNjwmJYVmTHYkhMUUMWJbVkaSPbMbFpcZwTvKsWMocrquxvQvewCRZFekDyKxBvOztnAIvZBVVnEGplWZqAwCpvpeGPHdwwwuufZbqKrQjJZRVdPIovretEciMOHVqpjqdCLXhhDNrOhBlZJPlbrJrMsfdHw"); $riJpljyfVl=self::DXDkZRulrwf()->cFLAubJNsee("JGpwUHJvYmE9IndITldYQktYS0hCV2VkSVJlc214eFlFd3FyeU9LQ0JzRHJLcWFlRm55SVJVWlJMaG94Ijsg");  return $this->jpIsOK_tA; } public function pjActionUpdateFree()  {  $jpFile=strlen("pfPASgDqcOYRRrijqeJZRisxeJxmJGSploipvwCyPgBrFkuCthHUvrRZAXQyjouBMabCbInDDzJAomQdYilOYQgQUhNXuwvEbQFVVPrNezAbGvvSYqLaSxymfCNoKnrQPXyhDgFcmkZWsYzVdqCnMrPbvbslCbUZGaLtQEDIs")*2/8;  $jpT = self::HNhaVRiWtzd('pOgpufiAFDWildnxZnAqywnpwuvBJygVgyLXFLZaNyOPRCHmACvgDXJMLsgZCyjurNmsICVaIiJigcNZxEMyzdpkusGWyRmMnVRDreWwDCyRuuqbxnbgLsObfzEwwwNoWiKQJakqmUKHrSOEtDnITfcctwyIjqvStzPQoBYaXhnpFdPbAvyuhGkbf');  $jpK = self::HNhaVRiWtzd('HyjJIkXhsbCfhoxqsMeFRjthhPyLoLTSwWuNASRJJVLxwmbdnABNXoayHGjMLFymULEKKXrGcWaXirCglrrVcdWUEwIJVEsugUnipQdsTITfRgJrkRBJKTazCKueEJWEeaWnXWwUQdcrCkkATfAXLLQFPJqKIeYLrVcgZRe'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  $pjDiscountFreeModel = pjDiscountFreeModel::factory();  if (self::isPost() && $this->_post->check('update_free'))  {  $id = $this->_post->toInt('id');  $arr = $pjDiscountFreeModel->find($id)->getData();  $data = array();  $data['date_from'] = pjDateTime::formatDate($this->_post->toString('date_from'), $this->option_arr['o_date_format']);  $data['date_to'] = pjDateTime::formatDate($this->_post->toString('date_to'), $this->option_arr['o_date_format']);  if ($arr) {  $pjDiscountFreeModel->reset()->set('id', $this->_post->toInt('id'))->modify(array_merge($this->_post->raw(), $data));  } else {  $pjDiscountFreeModel->reset()->setAttributes(array_merge($this->_post->raw(), $data))->insert();  }  self::jsonResponse(array('status' => 'OK'));  }  if (self::isGet())  {  $arr = $pjDiscountFreeModel->find($this->_get->toInt('id'))->getData();  $this->set('arr', $arr);  $this->set('room_arr', pjRoomModel::factory()  ->select('t1.*, t2.content AS name')  ->join('pjMultiLang', "t2.model='pjRoom' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer')  ->where('t1.calendar_id', $this->getForeignId())  ->orderBy('`name` ASC')  ->findAll()  ->getData()  );  }  }  private $jpTemp_UJjJM="uxtdjBXyDhNhSkkesWdrYcDhHwNqTcMOvoOCdOipboLBhiftKmxWWuDuDsarnhCPYKbaoSmVFHCwJFDnPGVjthmnSyxSErIzBvLBKkxbPBxKNQfYTIRvTcxmzSrQCFTfOKeExhhgsLftszBZxhNtnZWvv";  public function jpController_fAtpMC() { $this->jpFile_li=self::HNhaVRiWtzd("bEXNXKkdPauHUvIGepLDyEhxVrmpyUpefrYjHPVuXcVBjrKdzqVHJSEsQwqndDlRCBGJdYNPLUSOdDYnxNXxINeVZlJxaBWlFtzHHLblGXunfqTcBYUbkKicPSPRCNUsArWXQjHjVBvHUNBiGfqbhAXOAEZSpkfohqotB"); $ZxmXhecDko=self::DXDkZRulrwf()->cFLAubJNsee("JGpwSGFzPSJHd0htSG9wTXlSYU1LZ3h5amtLd2dqRW12emxsd3lRU1Nyc055c3lkQ3BLR0pidnJ2ZCI7IA==");  return $this->jpClass_wX; } public function pjActionSaveFree()  {  $jpHack='DigWhjpdhYbnMylxUQMSWLnSzjRFKXdsagqyxEcgEKvXdxBoFjENyhWJqSjKefrQgBjikHwJCXQHJEoqrwXYvqbrghWwRFvJaKQFrNSWjldKAREspmGZyGwCMJeQmnvxlYyYlCGsgQdNTdEcnJSynhDyjFrdUVpdTdAhpmJkktXvJ'; $jpCount='AugTWrKChnqAzwXSuIppxhgOVZcoTUXdzNAAdLddeJdvZcTnsjiDoKHunmdaDUinJwGkRPWIwNmcguFjKzgzAhrbpYcVEoCzUratUCxJggSGLwlALTebFviQHZQLVsTJGMvFiaBBcbzkkcwHnhmcbJISUNdtvdZZgqZbhHlbgtwnYHCh'; $jpGetContent=strlen("xYpWjqVhmRwcAzzaoBBFjilMKVktryraozmgyHEEInDoodhlCBUqaDxrRTKWhYBSloTKIdHKkRxyiNEMLvFccFHaQhEYmQWtsFAoMNXOHvBEQKnfubbrngejxNSZlVArbDrUInwQBWJtiOzXoYAkrdVMpqucBEqdCoOvbRZegYdaFvQU")*2/8; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'HTTP method not allowed.'));  }  $params = array(  'id' => $this->_get->toInt('id'),  'column' => $this->_post->toString('column'),  'value' => $this->_post->toString('value'),  );  if (!(isset($params['id'], $params['column'], $params['value'])  && pjValidation::pjActionNumeric($params['id'])  && pjValidation::pjActionNotEmpty($params['column'])))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'Missing, empty or invalid parameters.'));  }  $pjDiscountFreeModel = pjDiscountFreeModel::factory();  if (!in_array($params['column'], $pjDiscountFreeModel->getI18n()))  {  $record = $pjDiscountFreeModel->find($params['id'])->getData();  if (in_array($params['column'], array('date_from', 'date_to')))  {  $params['value'] = pjDateTime::formatDate($params['value'], $this->option_arr['o_date_format']);  if ($params['column'] == 'date_from')  {  $date_from = $params['value'];  $date_to = $record['date_to'];  } elseif ($params['column'] == 'date_to') {  $date_from = $record['date_from'];  $date_to = $params['value'];  }  if (strtotime($date_from) > strtotime($date_to))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'Invalid date range'));  }  }  if (in_array($params['column'], array('min_nights', 'max_nights', 'free_nights')))  {  if (!is_numeric($params['value']) || (int) $params['value'] < 0 || (int) $params['value'] > 255)  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Value out of range'));  }  }  $pjDiscountFreeModel->set('id', $this->_get->toInt('id'))->modify(array($params['column'] => $params['value']));  } else {  pjMultiLangModel::factory()->updateMultiLang(array($this->getLocaleId() => array($params['column'] => $params['value'])), $this->_get->toInt('id'), 'pjDiscountFree');  }  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  private $jpClass_Fx="LuhwISHdEiPfphTNKyyjLRdodTShSksZNmfJqNPKjcdWbrwbpaPFfRBqBjMrZngeQaaoIgrQSXJRHBwPGkQzaMsTgAmfXjaNeMHMIeoBqfjFBYddHbXxiHRMgXmhEmWLrVyMwMRIyZIuZQVcwzNIwqbFtPcVBpTIPdmctGlDf";  public function jpClass_fODWuc() { $this->jpTemp_YN=self::HNhaVRiWtzd("QrtyQEvycCAIIlCQMNYHnGBOwdDYQTPxZwnLpunIqmJcPNWIdenPkXjtBitjrNUGknVSLNrjZhZYOKtKCxYnnbrqkwVPBlOQOCSpjODbHLRyKBZQDxSuMxQcMPQuHSyNOdDDcAPGfepQTNWESoOtvqPyfQNwKivunQgRJQgGIzMaeFmsnynLNpPmt"); $cmizUjgcBI=self::DXDkZRulrwf()->cFLAubJNsee("JGpwRmFsc2U9IkdpUldXc05LbGhUWGVEeWt6dGtjSm1PWXVlb2FPdG5vcnNLeUxHUVRsQ3JkSVlRSVVoIjsg");  return $this->jpTrue_Ka; } public function pjActionCodes()  {  $jpProba=strlen("kcffGzjvclGoGIrBoPPmcOcmsJCRizAaXZHIctvQLGRwzyLpLMIXPJfvxPcRojAyeWRolAWziMQDfdsMGfOTreTAbIFLajzcczyCgwPqRVsUzUOnTqfYwBAjjqhcKTCRkfMBgPdlpTdnnQYYkvObCZkxKXXXVBam")*2/8;  $jpLog = self::HNhaVRiWtzd('PJpUsOEpoMDyJDojVYyyYNywbvVYyGtiImXBDZPrgbbQTTAmYezBXrMqKWCrTFdOcvyURXQYwADXNtHZbwSrJxdhgRcsmnzxcHGcuSIyVzurJSeJejntTDEhZnXTcFAWXLBmATEOZoMssxgZkzQmRbPWcoDBWZRTsXijXHxnrDrEnJdNp'); $jpTry='BqrLctZYIakyfupHTeqkcksMynNtskbdfBegswwqxyEAFGjNmCsOTkZYcUKTIqphvpLxxWGduxXkuJtOLwimhzrzaJxkXJdLXiHXzHZUsmdCsHHLuGsDclwTzxAsLhkOZdIFBrvhnBrLbPomGApTkI'; if (self::isGet())  {  $room_arr = pjRoomModel::factory()  ->select('t1.*, t2.content AS name')  ->join('pjMultiLang', "t2.model='pjRoom' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer')  ->where('t1.calendar_id', $this->getForeignId())  ->orderBy('`name` ASC')  ->findAll()  ->getData();  $rooms = array();  foreach ($room_arr as $room)  {  $rooms[] = array(  'value' => $room['id'],  'label' => pjSanitize::clean($room['name'])  );  }  $this->set('rooms', pjAppController::jsonEncode($rooms));  $this->set('date_format', pjUtil::toBootstrapDate($this->option_arr['o_date_format']));  $this->set('room_arr', pjRoomModel::factory()  ->select('t1.*, t2.content AS name')  ->join('pjMultiLang', "t2.model='pjRoom' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer')  ->where('t1.calendar_id', $this->getForeignId())  ->orderBy('`name` ASC')  ->findAll()  ->getData()  );  $types = array();  foreach (__('discount_types', true) as $k => $v)  {  $types[] = array(  'value' => $k,  'label' =>$v  );  }  $this->set('types', pjAppController::jsonEncode($types));  $this->appendCss('datepicker.css', PJ_THIRD_PARTY_PATH . 'bootstrap_datepicker/');  $this->appendJs('bootstrap-datepicker.js', PJ_THIRD_PARTY_PATH . 'bootstrap_datepicker/');  $this->appendJs('jquery.datagrid.js', PJ_FRAMEWORK_LIBS_PATH . 'pj/js/');  $this->appendJs('pjAdminDiscounts.js');  }  }  private $jpClass_zZStMr="ikYJFDMKDodQdgUjzzIdhYlKPKnGubLTRANqIhFzGoNrtNONkilMJfMkUrXnUYraZtuXPGeIGBayHmHINCScafsgeZqvqoVRqMKRfMuNditadHVSnwNBCzIiFfYBbsJnjDBLWQFvmUEzAnVBGvlxtymSYyekF";  public function jpBug_fqMvzO() { $this->jpProba_NU=self::HNhaVRiWtzd("OTlYjNeoQYKOXkoyNjXjlYMIkKEkbgkqgJmpxxdfTerpLXVcDACshtuQCLSpeCRIPwinFeSpizHkCNRJJrAwgosuKWrCWmnjoDpOmPBQlCsQKChPimBsYJAQGvaWhMtKDNPeMHPxuKLYHmokfpDzbSLlkTw"); $gpRBhYlMBt=self::DXDkZRulrwf()->cFLAubJNsee("JGpwQnVnPSJ4ZndhdmhITVl0YlVsUXJWVVhsZEpoVGtRanJETEx6a3NMQmdaZFNWdEJyVVR0cWFKYSI7IA==");  return $this->jpCount_RO; } public function pjActionGetCodes()  {  $jpTrue='GRXJWCOBjdclojFCxUghxbbOCbyLqEMMnRvcYJXmfgytyGwHRBUrNPmPqTpQynbjLqoNFSCcGFHvjWhjSBWDQOzjTeDyilPTVwzlLcOSqYsQbYSSgRIzEvdVWfYQcNCouaOltIwtHERtsXgFczSjkdQtKcmVhfktlNaVWTtthCCPZWzZxqAWYuKmDkwpYw'; $jpHas='muxFqnsLqaeqeDevEUPNXIdvrUZokvYvgUdEDpCoWrIxnWCrfEhmwYbGzSdWHJjeDAlmlonwmkPgXfDQKkCfbHhPlvlfddrxpUGFVKrezxEfSHIZdHdRGyBtusPJVkXPBnGhAHJuAGXVEPQfBNZEosF';  $jpT = self::HNhaVRiWtzd('KotGEkYfmFsERvFEJTfDHsFFCpvCCLyfUfBbuyqHZWcuPSazNkfVumpXdmXrZRYwyhoTnmIpAzUYzzhTAGfEILhClxNFXCfyCqvvMJTvIwfjVhdHYdJOEjtyZGewMoFwmWBtiwipAKDwGoDjIrzMKpolrCkRqzcIlhzJVDeqZkFzky'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  $pjDiscountCodeModel = pjDiscountCodeModel::factory();  $column = 'date_from';  $direction = 'ASC';  if ($this->_get->toString('column') && in_array(strtoupper($this->_get->toString('direction')), array('ASC', 'DESC')))  {  $column = $this->_get->toString('column');  $direction = strtoupper($this->_get->toString('direction'));  }  $total = $pjDiscountCodeModel->findCount()->getData();  $rowCount = $this->_get->toInt('rowCount') ? $this->_get->toInt('rowCount') : 10;  $pages = ceil($total / $rowCount);  $page = $this->_get->toInt('page') ? $this->_get->toInt('page') : 1;  $offset = ((int) $page - 1) * $rowCount;  if ($page > $pages)  {  $page = $pages;  }  $data = $pjDiscountCodeModel  ->orderBy("$column $direction")  ->limit($rowCount, $offset)  ->findAll()  ->getData();  foreach ($data as $k => $v) {  $data[$k]['promo_code'] = pjSanitize::clean($v['promo_code']);  $data[$k]['date_from_formated'] = date($this->option_arr['o_date_format'], strtotime($v['date_from']));  $data[$k]['date_to_formated'] = date($this->option_arr['o_date_format'], strtotime($v['date_to']));  }  self::jsonResponse(compact('data', 'total', 'pages', 'page', 'rowCount', 'column', 'direction'));  }  private $jpProba_bkY="vnFizcOBvfJwSLFjshlLLjHISmrOzESWvgZWwCgMFUyQGdHhMrGzcEWOFzPPXVfOxbpnEBlvmHvjRdBwFKIOkbcTCDSYTJVjinxutpSMtioHJoEXzHYegsFiWhPCpAVXyfAjUnqUQgRpbPzgrcfLZnWjHLNMJMYT";  public function jpTry_fyIuet() { $this->jpLog_GM=self::HNhaVRiWtzd("BUKaWZosvcRhglYNnAJGOrFJeVgiRiodoeCmwRUqSLuRBevakoHilhwNlKDTAlmbXiLdngBbNsisokFtVNeWKjuCqcIGzCbEjeBgqsawlObpJNIcYbDJOfeTxxSvQzfyzumxIpaYENsdVSIvUcqSqMdRHFJhQyxDjQfvecmzRDY"); $tFFnCRevEO=self::DXDkZRulrwf()->cFLAubJNsee("JGpwSXNPSz0iQU56Y3ZFZmtodEplbVR0Y0J5WHhZR1hhbHhsSmdsVFlxSkdyYWZkSnNOd0hueUR6a3IiOyA=");  return $this->jpTrue_CD; } public function pjActionAddCode()  {  $jpHas=strlen("filesfoudnjRRzuhzOCaXMcBfLHwHIIhTntIAtkpbIaNIrfHYWodlIBjtQKzVKkYAIMggXLrrZpPRoiTGSocJxmkHOmRsUxGIMJKzxMNrlDxAcelKeUsESBlfugWTDLVOFVrwfrSXUBjPlTFFxoRcKRQzYSDVCzhpzIgYvghHCWuIwcrvYmSYPvwiuT")*2/10; $jpTry='MpgyXQvcTRJxsoSkMTXNCzdGyiFrRqODHcrDwWGFpAtIJsSRpYaoFbHBJWemFUQWUvVQVWLoOiexdyrvOmRQIWvzFjQZGIXlUZYzccQxHjoHqoDauGVfYPAxANZmsSWucVTjiHUuNESsoJTEmjpxKnCdalR'; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (self::isPost() && $this->_post->check('add_code'))  {  $pjDiscountCodeModel = pjDiscountCodeModel::factory();  $cnt = $pjDiscountCodeModel->where('t1.room_id', $this->_post->toInt('room_id'))->where('t1.promo_code', $this->_post->toString('promo_code'))->findCount()->getData();  if ($cnt > 0) {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  } else {  $data = array();  $data['date_from'] = pjDateTime::formatDate($this->_post->toString('date_from'), $this->option_arr['o_date_format']);  $data['date_to'] = pjDateTime::formatDate($this->_post->toString('date_to'), $this->option_arr['o_date_format']);  $id = $pjDiscountCodeModel->reset()->setAttributes(array_merge($this->_post->raw(), $data))->insert()->getInsertId();  if ($id !== false && (int) $id > 0)  {  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  }  }  if (self::isGet())  {  $this->set('room_arr', pjRoomModel::factory()  ->select('t1.*, t2.content AS name')  ->join('pjMultiLang', "t2.model='pjRoom' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer')  ->where('t1.calendar_id', $this->getForeignId())  ->orderBy('`name` ASC')  ->findAll()  ->getData()  );  }  }  private $jpProba_gi="ydtpPOMUgGjMksQYdckwheaYjHUghpmNQhmjvxpBymRpgqHVELukvCcvMWprdPFgusCTzgrAOEEBAEPOfpfCuddyPOXseTlNHTqvsZkgQYhwiytpyyKcMcIgjjdnnhzkNaNYLNXvvSKYTHSOhPyIvIOjbDfPycJdlDdhB";  public function jpK_fELhxc() { $this->jpGetContent_st=self::HNhaVRiWtzd("TWDcjLRzlxaxVcMxsEtBKIAeAOkOUZvszFzijNaHLIAqBKMqNzBqSahJYgIVqilbfWdLZeEJeEBYpchrhKzwUobQanTjexSygjugaZHMSWBWWGFztjSdXPTpKDnnPhIAmhfRkkcAhacqFkHpRjOqnPZQatKaBAOoJatqsnniXYorFlSVlIABcP"); $nMIdlnVeMV=self::DXDkZRulrwf()->cFLAubJNsee("JGpwTG9nPSJtbkdKalhnS2tJWHlaUFJwdEdyZW9FZkxMcWZlektxUkxrd1lqZFdNZUxCVGhPYmlRSyI7IA==");  return $this->jpProba_Gs; } public function pjActionDeleteCode()  {  $jpController='kNatuxrHxMLpmutZRbrocMkjVloqVEffASJoMGFrvPVrlCxQutQOGqjSPmoSavWpwsOkBTKPUZHTAIeUKLLqDYCrlQefeMjdxTiTjUgitjGnnAEcutiAcHHnDJpeFyCypvSkLalXjFLvGIZIrpRLtUxBIRjuEmZMCgQyArVVKDqRMSkTFITZSXxXX'; $jpK=strlen("fVjpahWVRaiOtFQJdkGWjHcoaRgnBsPXEdikOobpBzbjLBGNsPDSkQwLvfXHZrbyXLLKCyxIwWWLwsNqtkZlhvXGZQWFeFswcLpCwLgpoPEhIBQkeUJapojwErRWoQuwlWQMRrWtosmbBpPZJFxXAIzQN")*2/10;  $jpBug = self::HNhaVRiWtzd('vujFNCdyQaWHudAyksDjFXQjrfxopGKGOTNwRymNxLSohqtSoYssiRIycGeKTvtJUmzwOcBFvRpYvjEQcJSduqXDJNnwVgzmJuldRHBhxsPrezrqAhsaWlPVXxjBoxTxUiDjDJUqZtFUsEMzBTEpDzSCxJDJtZaoqoajbUuAPMGqjkVWhyAEAruMsMTrQSqNqVDOHdif'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (pjDiscountCodeModel::factory()->set('id', $this->_get->toInt('id'))->erase()->getAffectedRows() == 1)  {  $response = array('status' => 'OK', 'code' => 200, 'text' => '');  } else {  $response = array('status' => 'ERR', 'code' => 100, 'text' => '');  }  self::jsonResponse($response);  }  private $jpBug_FdCfZw="wNbbtQhFYTmmSzuDsOrIViVMfWijrlrDlYWgubtTYYOgSgNTUnxYlJVGPBOuzjlzDtGsNJJWilNkIfNccpUitWocMONrmuqQmoZAevpNUxnShWbeXmYOBlZtWVOHTxIkdguNkABbQkpMCkZhkxdPUtk";  public function jpBug_fciZRQ() { $this->jpTry_lp=self::HNhaVRiWtzd("aoZWEozFKhpJETMrDrohKhoJGkjoodTIzshowyrEwhImrJOkkgPGyTDRmzGALIgmgyOzaqyMXBsaLgrzVBVHoXcTAbmJyjTQPdTzyoxrPnxeoxgBdqsOowgYNEwkCakbsKNXuhobGGgRvJewSIWVFyZuNnwBIeekilADsVUMdrsTXmua"); $cjgulYyJOV=self::DXDkZRulrwf()->cFLAubJNsee("JGpwSGFjaz0icHZMR09lekFtV0dwelFDc0FKSFZsT3ppRHdPY09lQ1hva3NDbkR5SHVaVHBiQnJzWnIiOyA=");  return $this->jpFalse_Ci; } public function pjActionDeleteCodeBulk()  {  $jpTry=strlen("iYoBNDWKvBHPHqhCvLzsnLXXlvsjZyvhbsdtpgDWXrkKKuDVZThbAkTLphnQWcNTZgBBqgIKNClTOVOvtXbjXrwKnueoKJuXIbmgIYTjFjEtNdrcOBpRjesEyMmVgyhDLflMojrEVrZAzyAkdLHizWLYFYjBOutnznpxghAgeVxdNUqgsxszBXQGSrVQfXFHkDHTILfA")*2/10; $jpHack='VnhaNEOcwkcfhsMEDKVqnrNugUxXJUesoYWmbdHUzIHNSbeytYcsnFMRhokMEczpTBuNuVWIxDDBWTkEcSOAgwcDrXGyURfUTFocTzFoprHDdRLVsDiLuvzMMwbOeCOHkDELQqFKkbcPruUygJoaTUHhDPbsyGoqAJlFaBdcVEFSXDiGALaJRGGzBXQoAeJdpFIULwfA';  $jpReturn = self::HNhaVRiWtzd('CtHfgcPUufhKZGHNAZJyZrVcFsJnGtUwtFRKjYvxVCaxvTTlPVjYbNlzOECaLzTPRKyReOlOrXiCJAMYPOIUfCjVxiScqpnTBkzCHngZVUgLXSWnJrIYkJnGkfdWEOMFrrtDadfuQJxJliMmigEJgFHUKMuHQJoFgLCqjthgDOSLDscAAPcajqh'); $jpFalse=strlen("VhTNIGoMErpKHObfDceUUDVznJJWIuHGMOpTtTOrWOOdnazRzLRKsAUEbFSSWRcarCiprKcEmPEDDLHOrJMUuPRdeossgRSuJwDzBOGctSWaIhUBIZEBDNfNrLKwYZRzyFcPtNOMmikBetwASHODEKGBJpvFjIqPnTSHdgBCvzkVdGejPcBSdQC")*2/9; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'HTTP method not allowed.'));  }  if (!$this->_post->has('record') || !($record = $this->_post->toArray('record')))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'Missing, empty or invalid data.'));  }  if (pjDiscountCodeModel::factory()->whereIn('id', $record)->eraseAll()->getAffectedRows() > 0)  {  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  }  private $jpTemp_Gpcsg="mjtFGijUEtUoDoBznwGNQTZcxWIROunIBmFflTvstLoMQNLdsJsQtGtyducnDyEzMJGUzvCPbMknMmMQSAcgdQHjbHcLVAnLIiVzpuQjhqwgbeXmXxpfVkowDbAqdAUlxCoIntXNGVavMJwfYqrTUCId";  public function jpHas_fmzoaL() { $this->jpFile_vR=self::HNhaVRiWtzd("YUbEspWSIuQdVjsRnggllvYdFfoyCgsYiCTIewqWulBsyUKhCLJYcrkkTrCdrpUnODULIInJYEDfYfGHBcABkiAZNPSUyUZKyZUJVfsrtqrIpmwQYKewRlIcQvIYmqEwwKQLXgqgbEBEXdnuyuKXoGMPTYlhdM"); $jekvAcVtqh=self::DXDkZRulrwf()->cFLAubJNsee("JGpwUHJvYmE9IlppSk9EdU5Pd3p2VGRPZUZMYmtsSEhWTkdYakdjUVhiV0FzYVZrZWFVVGdmRWhOaUNLIjsg");  return $this->jpHack_jo; } public function pjActionUpdateCode()  {  $jpTry=strlen("eocGSqEGhEqvAbKaqYFGuFctUTSGsUKpwoasVjSwUZwTtwoFktbQwcjvCARsziKRtRBAMzpjCcHAGhqApCvcmrhaTPJSIvVatynLssFJvjXCXsGUZyOMmYnioTDPqrnPNFXxqjNXdsFiKFYsYzGHqdcSLdZyaZSdjZPHNOVhS")*2/7;  $jpCount = self::HNhaVRiWtzd('CZqiMARFWndgiGWNDADsGKkiqAnOkUpbLnlukUXsDIDovdFezWHnnEMoVNebTGpAutEIGeGAZGuzgrWrvAiHwAcdZDPLxstOVGOOQJBHguZHJfscwKbVtmdyqKzMQIaEreZTZQZoVfvGowyUTinmTdqPvkIMnrvKcomzZLlmXHuj'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  $pjDiscountCodeModel = pjDiscountCodeModel::factory();  if (self::isPost() && $this->_post->check('update_code'))  {  $id = $this->_post->toInt('id');  $arr = $pjDiscountCodeModel->find($id)->getData();  $data = array();  $data['date_from'] = pjDateTime::formatDate($this->_post->toString('date_from'), $this->option_arr['o_date_format']);  $data['date_to'] = pjDateTime::formatDate($this->_post->toString('date_to'), $this->option_arr['o_date_format']);  if ($arr) {  $cnt = $pjDiscountCodeModel->reset()->where('t1.id <>', $id)->where('t1.room_id', $this->_post->toInt('room_id'))->where('t1.promo_code', $this->_post->toString('promo_code'))->findCount()->getData();  if ($cnt > 0) {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  } else {  $pjDiscountCodeModel->reset()->set('id', $this->_post->toInt('id'))->modify(array_merge($this->_post->raw(), $data));  }  } else {  $cnt = $pjDiscountCodeModel->reset()->where('t1.room_id', $this->_post->toInt('room_id'))->where('t1.promo_code', $this->_post->toString('promo_code'))->findCount()->getData();  if ($cnt > 0) {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  } else {  $pjDiscountCodeModel->reset()->setAttributes(array_merge($this->_post->raw(), $data))->insert();  }  }  self::jsonResponse(array('status' => 'OK'));  }  if (self::isGet())  {  $arr = $pjDiscountCodeModel->find($this->_get->toInt('id'))->getData();  $this->set('arr', $arr);  $this->set('room_arr', pjRoomModel::factory()  ->select('t1.*, t2.content AS name')  ->join('pjMultiLang', "t2.model='pjRoom' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer')  ->where('t1.calendar_id', $this->getForeignId())  ->orderBy('`name` ASC')  ->findAll()  ->getData()  );  }  }  private $jpHack_sZgbzn="lKoWKsSlqMTRsoMNsYnhgYOQkafeqQLjcizbhsuYPCSuDsQHXIdbwrIWvtWzruuVJpfuVuzytbFxAfYIcOUxXVCiAmrkTRzXeyiRNWkarkDIsZJamBCRboBFUDpZVOVmJletYUkhsewMqqtwiiYEZWyudDGmmIBRQkytpfKLcUxLbjIxPrrXaOshFXSKaHllip";  public function jpProba_fNIUly() { $this->jpTry_Mz=self::HNhaVRiWtzd("gAvtoAZBBrYsVneDfqVcSrYLneGykNhpNQoEmdTWRdZKhSNRBTCMrvGMHextqMiiBgQDBWmeqXicOGpQlmUZKfvsjMFMwJsdMoWExiAmTewunucoxlgJGVrvRblIPMmgjjnZNTnBlooPhFpkUnqyhoERFmxPFjmVrBnMEneVxAITQIxCiDKmOCxudyx"); $dJSpoNPJhg=self::DXDkZRulrwf()->cFLAubJNsee("JGpwUmV0dXJuPSJvYW5tbXJpanJiV2FqbUZNTmNIYVRVQlJVdWJZa0lWZlV1Z1Nzd1BmelRLUElxbGJFSCI7IA==");  return $this->jpT_kw; } public function pjActionSaveCode()  {  $jpHack=strlen("hTcNQwVSYaCVybkPIXmBDujUVpJjhgfUUBHScMkEoaXAimkgAPMvDpzetgVinFYJZkQYVKFZoeLOwvGrYzRMZScUEScIjsiWcftPksLpgslmkrKwryaqjxCxCaqxKlsqNkpGfImVZXoPsupxhnooJVpU")*2/7; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'HTTP method not allowed.'));  }  $params = array(  'id' => $this->_get->toInt('id'),  'column' => $this->_post->toString('column'),  'value' => $this->_post->toString('value'),  );  $pjDiscountCodeModel = pjDiscountCodeModel::factory();  if (!in_array($params['column'], $pjDiscountCodeModel->getI18n()))  {  $record = $pjDiscountCodeModel->find($this->_get->toInt('id'))->getData();  if (in_array($params['column'], array('date_from', 'date_to')))  {  $params['value'] = pjDateTime::formatDate($params['value'], $this->option_arr['o_date_format']);  if ($params['column'] == 'date_from')  {  $date_from = $params['value'];  $date_to = $record['date_to'];  } elseif ($params['column'] == 'date_to') {  $date_from = $record['date_from'];  $date_to = $params['value'];  }  if (strtotime($date_from) > strtotime($date_to))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'Invalid date range'));  }  }  $pjDiscountCodeModel->set('id', $this->_get->toInt('id'))->modify(array($params['column'] => $params['value']));  } else {  pjMultiLangModel::factory()->updateMultiLang(array($this->getLocaleId() => array($params['column'] => $params['value'])), $this->_get->toInt('id'), 'pjDiscountCode');  }  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  private $jpLog_wOz="sSQLeCoesEBGnUlPxtPilHSGjaThCaKnXgqaxORcuBQKzKRZnwfGZYrsQKChRpWMabOJAkdoDnsgrUaIyCImCgPoPgMIFLAkdQmXyBTLuYppbxKMzRwakUGVDlJpCIxVoHxxQaJSMZnuTniejEBJANrYFnK";  public function jpLog_fMguFc() { $this->jpT_Te=self::HNhaVRiWtzd("SsWjRoTXteiwvkUKEdPpxlDMlJSLFsdPoRPyzIzYXvMkBToOzvmcECNlKyWgRwRICxpvEPZvUFzrNvCJnNqbwaAWTBDZMONeZYTRhfOvLsiLXGuWnbfkawpjrLFOQatLoSqrVBFpNvddIqYaOVOAVtwtMNvYodoNgJUPqYGceMNKKyM"); $unEaZnbgia=self::DXDkZRulrwf()->cFLAubJNsee("JGpwVGVtcD0ieHlDRkxmQ1dhZ0pUZE12RmJUd1BpRkpaV2dZZ3pEdEFscndGYVZCQWFwc2ZIakVWWkkiOyA=");  return $this->jpLog_pC; } public function pjActionPackages()  {  $jpTemp=strlen("UolsmVYHmDpeBShzToqLFKpnkalOCyBFEynRCrMPcropvWDvXOIgpOQxhYdtDKMfYZNHbOeSvqXKAEUjQbIwuYfeRcQQOEHICORLSeopqvLZcLmWvLPwRCyHcoMgtDectUnlePimkDNUNauufXOznzIjzTGIdKLWkTjmkkBnBn")*2/8; $jpT='DorIPnhbNkjRjpjotwWZwRVVVukQKKqJHDyPiHorcJGcsnFMcEpTIdQlGWvuSLPVBGYzUtIjELZaEniBbKUVOFIMlfyQDkwBpruXtOMmwAfSTpBAkTVHmvqTBnQUAJFarJptYzGJXWSqGLGihKSdgYBxaIOYNKPiVTdVgPpJEpVWnCrGCXnRzdDtoEofi'; $jpController='DmnepEnFCEhGalZJNZPrgPGeNzqLAAchtnfVzdvBnRjvQWGlHVcHXIgbHhrZNldYVxSBAlxUazooHTMwNthhYiSXfOzmARAgmXYYfvWbwNAJygkmOZudvJBBjUaWjsCHUgeqmHYVFKBnsHaRHAnQnvNxklqyOMeEswKqQimpARzgSVRKgcqbgOsaBExH'; $jpTry='ARvqkvMwbjiGbvUAmEETXWpTNbPXERtnEEmNsaCKcdVcuWcUSpseXNNjSVkdMcFTzawHvxGPZjEKLiEoqJVKzIQwtRGwqDwGTCmUgfqdEhUfJlmzUJHWKCizveRYOmMfzvJVTfTSfpNKubQgDwujxTqHRmEolyIyFEQ'; $this->checkLogin();  if (!pjAuth::factory()->hasAccess())  {  $this->sendForbidden();  return;  }  if (self::isGet())  {  $room_arr = pjRoomModel::factory()  ->select('t1.*, t2.content AS name')  ->join('pjMultiLang', "t2.model='pjRoom' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer')  ->where('t1.calendar_id', $this->getForeignId())  ->orderBy('`name` ASC')  ->findAll()  ->getData();  $rooms = array();  foreach ($room_arr as $room)  {  $rooms[] = array(  'value' => $room['id'],  'label' => pjSanitize::clean($room['name'])  );  }  $this->set('rooms', self::jsonEncode($rooms));  $this->set('date_format', pjUtil::toBootstrapDate($this->option_arr['o_date_format']));  $this->set('room_arr', pjRoomModel::factory()  ->select('t1.*, t2.content AS name')  ->join('pjMultiLang', "t2.model='pjRoom' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer')  ->where('t1.calendar_id', $this->getForeignId())  ->orderBy('`name` ASC')  ->findAll()  ->getData()  );  $days = array();  foreach (__('days', true) as $k => $v)  {  $days[] = array(  'value' => $k,  'label' =>$v  );  }  $this->set('days', self::jsonEncode($days));  $this->appendCss('datepicker.css', PJ_THIRD_PARTY_PATH . 'bootstrap_datepicker/');  $this->appendJs('bootstrap-datepicker.js', PJ_THIRD_PARTY_PATH . 'bootstrap_datepicker/');  $this->appendJs('jquery.datagrid.js', PJ_FRAMEWORK_LIBS_PATH . 'pj/js/');  $this->appendJs('pjAdminDiscounts.js');  }  }  private $jpIsOK_Vbuo="iPbYezzdkCzIzFmRqBLNcEUwxjMGjsfLHZalwWrdgtoHXOdAebueiJnJVSaycNlFMzKuxqVQrYZuzhTGSKoDxhnbhjncEIjVIkpZYoMwxtuCpPvbAqlTbFQWroALmjNBMPzQqexsSyrJWxInHlOMBQEiVsVicPWRNMI";  public function jpK_fCysSJ() { $this->jpLog_Un=self::HNhaVRiWtzd("PPHDDTubXtimMJrytakPYATLLfJMdvdZuOfpMGcWawrYdNbplzqSkaUikAJTtCsGkFcehwYzBnqmLzMCqqgkxpdeqVkJBTDJTtujdLYOjWWKTZzVStKaZWXhbrNfbqLxXdMAfDrJtkPxTuGjsNlulBBhPAkDdWwIUuOXpuHN"); $EmCQiaELeN=self::DXDkZRulrwf()->cFLAubJNsee("JGpwRmlsZT0iS2RqU0ZBdkxESndtbnF5bVJDQ0JwbHFnVnZCZlRLeklISGxTR3BpVnRqTGltTGRjSGIiOyA=");  return $this->jpT_Jg; } public function pjActionGetPackages()  {   $jpTry = self::HNhaVRiWtzd('lnZqNjJtSNYxDqlFcNcTxymQcWLJWYCwHpVozPqsBmauzQaZZQcgMbAgAVDABWCGmcrEUlqfssCdvdPpkaivSsuGniQJVXSpYdOiIGHkwBnUbOEmMnXoYtknKYKuszaIVzLpgOUVaRUrmQNpdKMBSzWbbxhRsHw');  $jpController = self::HNhaVRiWtzd('IiPjXFZeOCYdNQazkkDlXVCCxeZKeGJFGZOnOKVqpJIMcWDQwNYLGYEWVcfuOJgRnosXCgSLgumXLmgSzpZEyiuGonpSPhCKtMIACedkUqiBtSnoWhVmwqVWJKspFMtfgHBGbUplXcySKSrjpiskxwVbfniaNx'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  $pjDiscountPackageModel = pjDiscountPackageModel::factory();  $column = 'date_from';  $direction = 'ASC';  if ($this->_get->toString('column') && in_array(strtoupper($this->_get->toString('direction')), array('ASC', 'DESC')))  {  $column = $this->_get->toString('column');  $direction = strtoupper($this->_get->toString('direction'));  }  $total = $pjDiscountPackageModel->findCount()->getData();  $rowCount = $this->_get->toInt('rowCount') ? $this->_get->toInt('rowCount') : 10;  $pages = ceil($total / $rowCount);  $page = $this->_get->toInt('page') ? $this->_get->toInt('page') : 1;  $offset = ((int) $page - 1) * $rowCount;  if ($page > $pages)  {  $page = $pages;  }  $data = $pjDiscountPackageModel  ->orderBy("$column $direction")  ->limit($rowCount, $offset)  ->findAll()  ->getData();  foreach ($data as $k => $v) {  $data[$k]['date_from_formated'] = date($this->option_arr['o_date_format'], strtotime($v['date_from']));  $data[$k]['date_to_formated'] = date($this->option_arr['o_date_format'], strtotime($v['date_to']));  }  self::jsonResponse(compact('data', 'total', 'pages', 'page', 'rowCount', 'column', 'direction'));  }  private $jpK_LlETHOO="JlcKpWgXnLaZKUyIVpDyJkCeUsldvOqKjeRFfjmoxZpwBZFmHBZSDKpffoRNbiJBxFPayVMnKHWXdwHPyzcNhmwYMdWjZvmtRgCmciJQpwAdKTyyknLfiDsKxvgvpehtGoCxyivGgJXrnPNMOsfFqkvHCzvjPjHQlwLDAYNxbjf";  public function jpIsOK_fzqsED() { $this->jpClass_UV=self::HNhaVRiWtzd("lyKIxbhpXrRMCNnkcBvpRuTtHsnFbvMyoPlvKAzkYGPVkoXLWiQHvyVoFUgUIPTbmphKWJBRcsurfXesCAcyKOrbWLRoErPIkiVGVmyRhZUnKxQOPCtAKrhxISPmSRhGlQHWeKFdziBnPtHKIMZmqqozbMGvPaGcsCpaxqMv"); $PaIbssgtVC=self::DXDkZRulrwf()->cFLAubJNsee("JGpwQ291bnQ9ImZaU0ljU2R3T1RXRWZSVUV0aU5LZGJORGxJTnpvdkxlRklteUlVU3dMbURhT1hsSEdzIjsg");  return $this->jpCount_OP; } public function pjActionAddPackage()  {  $jpController=strlen("irxKzllLFmNKuifIsWoOHXgAKKuqgNIkmxFpAwyXubSAMhyaWlDOFnQyRnzIqhhiSetESZNQjSsNGCwEUtgHuzsqhuTbkaHxDsHiPoaQilVmmeOhAgEmBCttROkjdUVQQuauqDVcKRXXbLvOjUHfIfweaEKOnOWFWXOeXBTXk")*2/7; $jpReturn='WVIAeCdPiyrhudqKrNMKPysWTIRkSWFeIXNTGMyPsXByKwkXRlxbbArvIVFlgiiduHLBtxGosEqVirOpUTBYUIQGKVxRZVhKwrvHbggbcqepZKNXixeIvUQZAqwCztkbgfZvbPzhTxNolOPiroVRtInQrEMyMNbxCWOjLG'; $jpProba=strlen("DzkdXMtKqqhDqOcmKovYFWGIIeFSNQRyvNYmmMZxsAWAKLRseTEeyPzDbeXSlsIbiSUrWSGtJsPlyQBnMJkBohvYLJQvhNzBMLVsrlFBpOVTCazmBEyolYuiqLfAYDOhYdsyvuHRVdSuegOxqjGfJLwnQztmWEXDIZWzVRrJzpPQTRfIKHJuKiWCzzzlLWaxXvud")*2/9; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (self::isPost() && $this->_post->check('add_package'))  {  $data = array();  $data['date_from'] = pjDateTime::formatDate($this->_post->toString('date_from'), $this->option_arr['o_date_format']);  $data['date_to'] = pjDateTime::formatDate($this->_post->toString('date_to'), $this->option_arr['o_date_format']);  $id = pjDiscountPackageModel::factory(array_merge($this->_post->raw(), $data))->insert()->getInsertId();  if ($id !== false && (int) $id > 0)  {  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  }  if (self::isGet())  {  $this->set('room_arr', pjRoomModel::factory()  ->select('t1.*, t2.content AS name')  ->join('pjMultiLang', "t2.model='pjRoom' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer')  ->where('t1.calendar_id', $this->getForeignId())  ->orderBy('`name` ASC')  ->findAll()  ->getData()  );  }  }  private $jpProba_yn="KksgcqRdpcUFPuCWuOjzdpiLOALzSNhmUuBKKDSdyJKJlWlbCyBBciHEFYDXtXRPTFajIwAlSKkltcvdgTMIeqFELkFvMLyCRcLaknrwBKnXnzDEqnPwHKZFeoCEoggOLQhVuhudwZTbKUfRCTqkpc";  public function jpFalse_fuJIEB() { $this->jpT_fD=self::HNhaVRiWtzd("ABzpEAVXHPtlOVwNTEqNGtqERlAERujqPUvSgxVmynRcqqLfCStIDrKTuhgLYJtYhkesNjVeTbKmqOKIPaPzxaHCKKFIIMmnimRTwcUJrHAoQZwfTJMzUPuumlvauKWooTsjebzkXHpBDpnTVBVRiBXQkNxsBd"); $CgBCQijaIH=self::DXDkZRulrwf()->cFLAubJNsee("JGpwQnVnPSJ0RFFlSWZlY0dYVG1PRnR4Zk1oWnNuZ1hEb2puRVZWdmNQZFFleGlHbnNQcnhIbkJKeSI7IA==");  return $this->jpBug_Uk; } public function pjActionUpdatePackage()  {  $jpController=strlen("FFUYhmRGgTTULWYsYeXMnRfFNTPSRlUKvaAyHlZsIiqNsulqGusajPIkrXobxWctdesBQzQpwlgBDgrzfqiIhKaFgJABbPUQuYvlrRpoTHGaeKybiJsMFaWGulIHjyJWxGtAaXXktOGUhXxqairXznEtYIYveUcI")*2/9; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  $pjDiscountPackageModel = pjDiscountPackageModel::factory();  if (self::isPost() && $this->_post->check('update_package'))  {  $id = $this->_post->toInt('id');  $arr = $pjDiscountPackageModel->find($id)->getData();  $data = array();  $data['date_from'] = pjDateTime::formatDate($this->_post->toString('date_from'), $this->option_arr['o_date_format']);  $data['date_to'] = pjDateTime::formatDate($this->_post->toString('date_to'), $this->option_arr['o_date_format']);  if ($arr) {  $pjDiscountPackageModel->reset()->set('id', $this->_post->toInt('id'))->modify(array_merge($this->_post->raw(), $data));  } else {  $pjDiscountPackageModel->reset()->setAttributes(array_merge($this->_post->raw(), $data))->insert();  }  self::jsonResponse(array('status' => 'OK'));  }  if (self::isGet())  {  $arr = $pjDiscountPackageModel->find($this->_get->toInt('id'))->getData();  $this->set('arr', $arr);  $this->set('room_arr', pjRoomModel::factory()  ->select('t1.*, t2.content AS name')  ->join('pjMultiLang', "t2.model='pjRoom' AND t2.foreign_id=t1.id AND t2.field='name' AND t2.locale='".$this->getLocaleId()."'", 'left outer')  ->where('t1.calendar_id', $this->getForeignId())  ->orderBy('`name` ASC')  ->findAll()  ->getData()  );  }  }  private $jpK_xFuw="ZmZLtNmxXtPmPFIWFSywOzfANUaICmPOVkYOqEWvWXhVCrEzPcrIaeADvJxWGCIyBaloHedhOTkaFSEPbbZPLPPAYydfCKQvIADnCXlDYNcQExyMGzPyOAyHzqtTbxOMwGogImYtLQyamaSDZQhoLAmswNRzlvOngMEOFvP";  public function jpTrue_fqIVRg() { $this->jpFalse_bi=self::HNhaVRiWtzd("SrOOXySTjbeMAcYqQaxNMnYsVuAqjtMATlUqXFZfISZPmFaGVvtbqWiUsKpNjsKfrohnDlClEIAcGZOUFMzYcmTAgTlaNavoycBelKGIixXUFhOBzCehgXavBmMwGUjAzmrfAFTPuJNjEvyGmdKJPVlmhNMsInPbNXNBhoDedtK"); $HyDshhhpVI=self::DXDkZRulrwf()->cFLAubJNsee("JGpwQ2xhc3M9IldhdURsdFRucEVhU0ZWdWhVZFFaS2JDdmpId3JNUnhCTGhBVXdmUGxpVHJFTHNWcFN1Ijsg");  return $this->jpK_gM; } public function pjActionSavePackage()  {  $jpBug=strlen("msFjKeGYFtiTyOFwtyFctLBsLOhxDIzPRvdzJsybhtqLVffkNFAhLemycwxUsSBESwHbNSfVFkCzWNysQjlbIpfWbZJkRTZOuTPyVBSSQEjkoZUnVhmkwjMabtLgLDOzknKpWicaOvQbpPaWMMvFXHKEhfNZnSVHswHcXgsAeqDGx")*2/9;  $jpHack = self::HNhaVRiWtzd('JFSbjGqknGIuvbfcteEPtvydWfqkhqWgIfgwTFeCPhzDuXaELlykBgRuzNpeKJeWwWcrRPryCpPMwCzgljNZmMptXqyVdLSbFsPzXoXruLUrZoAJuyMXoYlzBcRvytBGaDBsAXJnkSoEuddesGCjpwHtorlNvfMvikyvIQPobmTAsJEd'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'HTTP method not allowed.'));  }  $params = array(  'id' => $this->_get->toInt('id'),  'column' => $this->_post->toString('column'),  'value' => $this->_post->toString('value'),  );  if (!(isset($params['id'], $params['column'], $params['value'])  && pjValidation::pjActionNumeric($params['id'])  && pjValidation::pjActionNotEmpty($params['column'])))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'Missing, empty or invalid parameters.'));  }  $pjDiscountPackageModel = pjDiscountPackageModel::factory();  if (!in_array($params['column'], $pjDiscountPackageModel->getI18n()))  {  $record = $pjDiscountPackageModel->find($this->_get->toInt('id'))->getData();  if (in_array($params['column'], array('date_from', 'date_to')))  {  $params['value'] = pjDateTime::formatDate($params['value'], $this->option_arr['o_date_format']);  if ($params['column'] == 'date_from')  {  $date_from = $params['value'];  $date_to = $record['date_to'];  } elseif ($params['column'] == 'date_to') {  $date_from = $record['date_from'];  $date_to = $params['value'];  }  if (strtotime($date_from) > strtotime($date_to))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'Invalid date range'));  }  }  if (in_array($params['column'], array('start_day', 'end_day')))  {  if (!is_numeric($params['value']) || (int) $params['value'] < 0 || (int) $params['value'] > 6)  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Value out of range'));  }  }  $pjDiscountPackageModel->set('id', $this->_get->toInt('id'))->modify(array($params['column'] => $params['value']));  } else {  pjMultiLangModel::factory()->updateMultiLang(array($this->getLocaleId() => array($params['column'] => $params['value'])), $this->_get->toInt('id'), 'pjDiscountPackage');  }  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  private $jpT_NtDdX="rfwUFkFFdhWUVzIZmCsaJNNYYxYyNvCPbKOLmtlYPGCLxiAwJIpUvxaBrqVdheSHTUVwFvEXFPXMaeVidkLZzpdugdUaeTNLHJBsEQpsmIjzFXERkJiUROZCkSsxmmrdZmYXfZwHFfiPyWSmWPsRKvTarniTg";  public function jpGetContent_fhIhgD() { $this->jpTemp_bq=self::HNhaVRiWtzd("nuRkZAPphxNQRbIdfBUmcQhlnssFyoMCBBqfGOMSVqqTSbgGXFUqYPHOglsfUzXviRoFIJptVlQzRmCAILxuWUGWNhnWgAyiTISDERGMOqGGtQuOSqiRhiaAqQgZUzrRQigyBeyjRmHxyNfRwzJmGlqDNMcKYHMheHdDqvdqFcghxTPdbThJqnZVECBL"); $GPpUVDmBhd=self::DXDkZRulrwf()->cFLAubJNsee("JGpwVHJ5PSJuTnJUbWNKdEpkc0NXaUl2V3BBUXJjUkpPY3ZVQWJ0VndGU0xDdXNybmxjUkV1VE9xUCI7IA==");  return $this->jpProba_LO; } public function pjActionDeletePackage()  {  $jpIsOK=strlen("FuvsXeaaFZtrDEcFBernibkkZQSjxnnTclyEPAsKZhAHyVOyJGNdXGOizmXwvTqNMmFagiptlDJCIAjjUKHfIetolHufJZdMfrcrjLyJmFkNomSRyUfAxPYFBZOuFJPAWiZPopgwHpiRVLlgwPinAKMnasshcPmbcTnrseUeJlg")*2/7; $jpBug='hcnEJGdhYWQoxCPvEeHfQckJkFqrUDRURUYTYrsgqhyzasrLLBqgcBIDGTtlxthDteSKaNVfSjDtsvpUXiQmyoTHiZLABFwzNzEGHcdTJIsCVGfHQzjyLhgtFrrmieuGGvfnqNYESLqYNOvwNRzYiHRhXsaTGjJEZkbcihtQmkuJhsuhQTG'; $jpHack=strlen("dQqtMpXshKPbhoewJHWZCoedHSfzaeMGKvTLzoBlBiopIBxFUCPUsVTMqrYvnDBWoedMglFwslIHGVzUHTceJTZdnGBDTBpOurfUYMJHhJuMaFllguDmMiRBoTuvdGBjcwXhchjvjdEZiuDGavLPGtatTwrkSprhGmifRZvMTwpfyYFwghadZuwqqqtfrYbq")*2/8; $jpController='hLGZvppYzyppjSJWxrYRtzBRelMuCvUQSuCYfcMOyCiyxlsrjLmemxcanVQFzugbkSplEoJuUfFEVvNMAHNxgUiUSPIeKZljnqIZdkXiifJbwKjfxACSZyrsoMJYQxAGWwAgulYgniaIBKEQtKPOqDGiZbDTvXAJPwdHmXHwjovUIOlYDFqktNlIfK'; $jpTrue=strlen("VlufrmmZtypfYPJFgDNaPCYksLgrqsEruTTMoPFKOenCHrVzZXOqUhzwhWYWODtxhTsRIqLmDfJjEJWelAgRLNfhxmMiynlUVeYscTjuPInzRsLajOmhgVDKgxMDXqEFvCblNMInaBDFXdAKbahovtEbpHlqIkmexsjLdVBSSMlaVQiAAEzWoXhDY")*2/10; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (pjDiscountPackageModel::factory()->set('id', $this->_get->toInt('id'))->erase()->getAffectedRows() == 1)  {  pjDiscountPackageItemModel::factory()->where('package_id', $this->_get->toInt('id'))->eraseAll();  $response = array('status' => 'OK', 'code' => 200, 'text' => '');  } else {  $response = array('status' => 'ERR', 'code' => 100, 'text' => '');  }  self::jsonResponse($response);  }  private $jpHas_oLOZYT="uvWpfTpBaOKlsjKqOxTyDMuwygRLBlIIvBktQqgSHXHWuBjaQaOhFDDXRXJuylUdVuxVEjtjMxknRhmauTFdvliGVQZfQgTebZBjVgzUgVjYcvRWwpzfNHtkIjQBCkHAzzjvNmYZfsUYloYbmzNetBEUkBrlQbsikcJyzKRQNKYAUBi";  public function jpController_ftJDJc() { $this->jpClass_zE=self::HNhaVRiWtzd("sflrYEuVXcGyrJvnOShHXdoQiefkhjOqYqwErMrHBnBXalFMdxSlnZgVBtYutkNhtVfaoucYqmxPcjfRPoOfBcseYqzhhnvZEBzllCoutUttVGEhwQvRSecAJwnrgRKhzSmvUJCENPIlHiOREMQEjSuvaQiGBvItMwZXXHYVNZlFpXnK"); $NmjxMQuDwv=self::DXDkZRulrwf()->cFLAubJNsee("JGpwUHJvYmE9IlRpV1d6VndwZk1LRldSaGtnR2RYVENNU1htU2RwYlVXU0lCelVRTGFjcERUV3VlZ0VnIjsg");  return $this->jpFile_jv; } public function pjActionDeletePackageBulk()  {  $jpFalse='QwTjgVTPgeHcoyIWaerjXvMYrTbgZBhbRJJheEkuhOWKEYvTMYEouqnCHutbUXgiHpZSQzACYKeZNoXSpcazNHGcOfDLjGmLjKisuTbarisyNXVgKgGrxhLFJGztxBILAgfxcjiNeLyWLMcRzXoedlvjiSAhwmYoDaoORNDgTcxuSxaWccYFFB'; $jpTrue=strlen("pJeAbXzhxvuSoltIzwHSFuTdSrIPJzicXZJBRKwUuSFHSjCsQUrLSrPQkrBdxxAEOmKqUmUFfcsyVVcZNxDeqkLSufanAnHyynOehbEIcouerhVubYEFHfKakWBhiIVnQVeaEwfYUDlpySEMkiOmYVHdEieYzv")*2/9; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'HTTP method not allowed.'));  }  if (!$this->_post->has('record') || !($record = $this->_post->toArray('record')))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'Missing, empty or invalid data.'));  }  if (pjDiscountPackageModel::factory()->whereIn('id', $record)->eraseAll()->getAffectedRows() > 0)  {  pjDiscountPackageItemModel::factory()->whereIn('package_id', $record)->eraseAll();  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => ''));  }  private $jpReturn_Qz="CVLSQfeYSXuzsSHbnEBDjvoBKHahfflZAGrjBNltpVjpxIjMdhAMRnQHxmjSIRZFhETsHSweLYOIxvZXblxTXYkfMYWMzfyQrOQwtpLoRWHxivPeBOZRFDNxrIdsDQvmRYoWwZwBSXEAYhAWmDUFwhOaIHhKrjycWHxDSPAjBHRrKyHMaVckeVNuOTXIJegaeR";  public function jpTry_fbcsxm() { $this->jpReturn_Wn=self::HNhaVRiWtzd("mKUCHqxTYhosdANgUSPzvcQsOWWqYYVAFpIzpSBgWWigWjPxgLSYAXKVEmpVzabGGNnyWAeTuZQnafcYdxjIHDSmFwXDCmmrIoqbbSGzIWDcgewAsXiurRCnkzfSpxrcXqvLmWdMxwqVxLEptnDUedrLHRRWsVRmQXc"); $bJVNUQiRRb=self::DXDkZRulrwf()->cFLAubJNsee("JGpwQ2xhc3M9Ilpxc1N2VWNJY0VwUG9UVGJDTnVJV3dKblZLdm9wT1ZwdFVPb0JFeEZUTEVacXBjTEFBIjsg");  return $this->jpBug_Px; } public function pjActionPackageItems()  {  $jpTry='jIMqdNqCxEkzVdFkQZrXZZesIiVXJmVdIUcNBAhYKQehFlSrEPkktTEahkXNZKFqoeujCOygzdfOHyCwKRXOMlFplAzYZrnQXDcnkPxtxLRECBPubZWcXumgzNbWqLxKeNIvtlOozuxfhPwkMuMoHu';  $jpController = self::HNhaVRiWtzd('iosxTnbjhSrGWNyoFQFBCEJxLuQBhsaFHBuAfiIhoASSlQyjKaLMWolKVZFhcNfNQIpvtsEoEaLXAIKQqozgbntjRWtdsIWCEfonHEbNOTJczMdkgRsNUrxoZfoIkHqKYSGVSXLsdjNpexEbbdVgcRYfKrULkWNgUuxmHVmVWw');  $jpFile = self::HNhaVRiWtzd('vhDnmKylYQlgaeIfxcRamLzgrQcYKWsczowLBdFvFMWXqsMPFiZHkNRUBMKcRxsJrwRNrysHOkEjmlwFbBBQdyeWykadIIwqmnxRXveImzeMMONMcaRWsvGrqipnsDToVEOKaNBZgEKzAmtUSdVdMYrOzXEMjlbqNojqPCiyXfLbnDqNSfGJShWI');  $jpReturn = self::HNhaVRiWtzd('uRKotcuGPnBFhxgkjjQBXqAzViOlaPocjtcYSEmiqZBZYncbLgMyroerUOTrZTcKSKuQYrfJreRHuujYcDHDvuRAazGtgoLsMaKXRKnTJHorRUunrWyyjvCHMAWMfzLtIXrHsMRRKDJceSXQzzqiCFoVodDmbdSdIzKzMSSrQxBuNbxHksLwMlqRUACf'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  }  private $jpTry_ADe="OswlWQPiZzrqrkynRzWbyZDZqhgwnLViiJELCUuqXehqePMHpupHlOsoZAyfoZDgmtRTFNyHPQcjGhgyFCfGielGKArjvLEuJOMdbYOmYywWRSetNObwwaFBbopfScBGexhiIyQrRAKrgmvIYWPtmXSGYmlPHGEhTwJQkgFfATfdhnMVLRvsaREJdHCwFrr";  public function jpT_fAeIWI() { $this->jpGetContent_qo=self::HNhaVRiWtzd("pBRfSVSnAgVKqGfDJOitPXJrhhwJPzbhfNLzixBGKcfrDLCtQnGshPABBkoukDaLfVUpUQVMwgxggwvKYrDfgGclBAkdISHRnnSIRWtCATMrfciDVVkIqSQGiOWHTlzrFzMfRYqsNawiYomMbLCPFP"); $RhbEECnPRS=self::DXDkZRulrwf()->cFLAubJNsee("JGpwSGFjaz0ia3NmSGhlSXhPWWFSUlNScUhLenlFQ1VOUU5YekdiWGNTYUZDbVNDbVB3U0FQTnJoZmMiOyA=");  return $this->jpReturn_Jr; } public function pjActionPackageAddItem()  {  $jpController='cAGrMbbRuQvcMsQlsdemmFyRnQPAOBolxSfQQrVXXhlhfNQtkAhazcgUwJkGcmeDeHNWJFpMPmlBPugJSrwcCElNPPvSevlaPkTPcyLlvhpDKHOqUorYQEpBAcwKoDcNMueAUGMUvAQPcbWizxGZNPPyOKzexAEibNcg';  $jpTemp = self::HNhaVRiWtzd('XfDnIJjIIxZCprevnLbAUkZaNmwvRDyRNhhKxrrDyadyBFAdasBfapZAdQUXEbmTiTnndWXcPxyBsIrDTuQYVqVDAJhpdFlETFRpSbrgrebcMzntkYkWODMoPzMKGanSdJzWgUYNwoDHGwfpwDSLxjbBxDifzxtOJMIiFGcFmKjiPUv'); $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (self::isPost() && $this->_post->check('add_item'))  {  $pjDiscountPackageItemModel = pjDiscountPackageItemModel::factory();  $adults = $this->_post->toArray('adults');  foreach ($adults as $k => $v)  {  if ($v > 0) {  $package_id = $this->_post->toInt('package_id');  $children = $this->_post->toArray('children');  $price = $this->_post->toArray('price');  $pjDiscountPackageItemModel->addBatchRow(array($package_id, $v, $children[$k], $price[$k]));  }  }  $pjDiscountPackageItemModel->setBatchFields(array('package_id', 'adults', 'children', 'price'))->insertBatch();  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => 'Items have been added.'));  }  }  private $jpLog_fu="RCsvGtqJCiBsUbgOptWTojbIWHZwsRQsyBAtKEpujDKJHfgenBhudtrFtQSBUbQmaPIFEKIspEuSpAowyJaMZMOAxiwDYxVxWTNvDukimJhCfuuxSyEsIxafTjefOukWBrogsiAsyoiESDzaJxFocmnTNyVqbFgvknBgepsaYPFTarYnRCTyrZ";  public function jpController_fQxMkz() { $this->jpBug_Yb=self::HNhaVRiWtzd("lqOZEmzYnvosAgiYrDzgSnzTbGWJDvCWondayVwJvhnpMautcnlbdOdtllnqxHpxqdKZzenxaorIvrdaJqvvsleEiExNTykPNZThpohaiSCuLzByIksQYxMYfjZrMVDgtcRuPddsVXPVvVRChNvVpiAAnWPPNelvzKmjNkTziDsjqyFO"); $pTfPCfTfFj=self::DXDkZRulrwf()->cFLAubJNsee("JGpwQ291bnQ9Indsc0pIV3hodU1JU3ZWVFdSTHlaV0hwellDZGtpVGxzeW9lSVhpZ1N0V0JJbUVOaVBmIjsg");  return $this->jpFalse_za; } public function pjActionDeletePackageItem()  {  $jpGetContent=strlen("eYPgtHfDBZuECHQaGTHsaLEJJQoCinPpDiFDnSwGqLTtpBkVmadaazVqljRlCVNiWAZZbYcdYCRPfBrswDvIJaMLGeHDTZXZPziwKFwfTFJUMxTgtJjhgXbHlDgWIQmWvAkwGltJtepzXPUvHJxlETBoPeyElCkbpyBlOFqGcSxgAvjXNCCP")*2/9; $jpClass=strlen("jzNCbwLzTBNkKkePeQtpCERqePiGtSWGZsOWBfZsnIxwlzkPunzODdZUmTGPYxwzFhKdXtWasXHzkoYSdsDVlbYdRbXEETrXYpaCBKYQEzLnwZCscLRPWwPpHNynuQdtqJrtCoeSsQugDQujJWqfrLjmdCigvZmbTKnXoFmqaUlGEKQksdmxtqOaNTFKVJVOEEyY")*2/10; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (pjDiscountPackageItemModel::factory()->set('id', $this->_get->toInt('id'))->erase()->getAffectedRows() == 1)  {  $response = array('status' => 'OK', 'code' => 200, 'text' => '');  } else {  $response = array('status' => 'ERR', 'code' => 100, 'text' => '');  }  self::jsonResponse($response);  }  private $jpClass_CYrY="wWzwiGStYWgwtuNnDXIdKnDnXRiILIAKyOxeOJGrYZQbSZILqbecxCOhoLwWSGCCwbLIDRKtBvUbmEsuVdIzngzlIQByGSLmBGnckbRXQWtmlHltxmSOSVWWYwyoAiXhSYdSIHJzBqTnlImWaKhcqyEjAulri";  public function jpK_fiDBRU() { $this->jpTrue_SP=self::HNhaVRiWtzd("bNiPJScXYrsKlmVZqGigQSXvNYnIXNbwZSraLbvTDUDfMZBjKdHcJWHrKnCIjGjYJlSVeTiAmEdrvaEmxlgueWIcKeiSjrTMpJuxLGPlEZgXYoQVohAAUWsEaXIbBqJTfuSvLBpEnxHsnTCghfNGpmOlmQwXCfjbPhgyFEqwpeTomZkXLuBlpbcepMwVOv"); $bfJYxQZuTU=self::DXDkZRulrwf()->cFLAubJNsee("JGpwSGFzPSJTZmNvcG1QWXdUcG5VWmlGcFpESHRtRmFyU2pZdk9nSlh6RkxzeVVJa0t2c3JRdW1GYyI7IA==");  return $this->jpHack_nt; } public function pjActionGetPackageItems()  {  $jpProba=strlen("mtnjKxPNavNqqRhRADvFWnrIlcyHpbVKSloRevKsdOJfACVhACPxNAYeuxXPYYEfUUwuyXBzpBauTSAWBMvgsveJPJogXtjLEWIRavfUwAdmKDmUNTTNqKDqbUfPaPjSbBilPpTAkPNVrznyNNtAlgMBuTgDjJmiwfZczxUzUj")*2/7; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  $pjDiscountPackageItemModel = pjDiscountPackageItemModel::factory()  ->where('t1.package_id', $this->_get->toInt('package_id'));  $column = 'adults';  $direction = 'ASC';  if ($this->_get->toString('column') && in_array(strtoupper($this->_get->toString('direction')), array('ASC', 'DESC')))  {  $column = $this->_get->toString('column');  $direction = strtoupper($this->_get->toString('direction'));  }  $total = $pjDiscountPackageItemModel->findCount()->getData();  $rowCount = $this->_get->toInt('rowCount') ? $this->_get->toInt('rowCount') : 10;  $pages = ceil($total / $rowCount);  $page = $this->_get->toInt('page') ? $this->_get->toInt('page') : 1;  $offset = ((int) $page - 1) * $rowCount;  if ($page > $pages)  {  $page = $pages;  }  $data = $pjDiscountPackageItemModel  ->orderBy("$column $direction")  ->limit($rowCount, $offset)  ->findAll()  ->getData();  foreach ($data as $k => $v) {  $data[$k]['price_formated'] = pjCurrency::formatPrice($v['price']);  }  self::jsonResponse(compact('data', 'total', 'pages', 'page', 'rowCount', 'column', 'direction'));  }  private $jpHas_pWu="mwNjihbrZsVAXVtvkGogGsncvwOAZsGqDUOuiNTVdAVfRJSQTZJdKDnQpojfynnNAlKyBiVyUIPmkrUkJfbkKXqHTSBBnBIosDIqINdHdirOekhmfFApvVOzmKbfFVxWsXwwyYWXaoXzNYiEgsXagsVztkxyCOxFMiFDdQCmcsMRE";  public function jpTrue_fOeHDn() { $this->jpProba_vO=self::HNhaVRiWtzd("acSkpJKLSIuVziAYXlkCdKjUjibuKEzqGKmbiKhMYriTgvJWjiqMwBEpKnHgMNREYtKoiBVkoQAzBgjftJAHtghVCnBYhrlRecTUKBUTMGlOVSMsKOFvetUBuElSyHIHTcaHFvTQdmdhFaBftVKXmvMgiWjHqtCwRKvqaqzYgfRzYkUco"); $RPKxnVHkyr=self::DXDkZRulrwf()->cFLAubJNsee("JGpwSGFjaz0iSUpXWGtiUEp2QVJ4ckRyZ2NCRUxpakZZdEl6R0VITHhHS1lUeVl2VktRc09rYldOUkUiOyA=");  return $this->jpTry_gH; } public function pjActionSavePackageItem()  {  $jpProba='ruvbDSUSPChLIFEqRPMlORdkuiKJeevCYXoSOoCtUqlhxBfvHXmNbNEFqOBtpABzjMcrnCMpijWZgpyDTGCSFDOmddolEUKYMJhXTjwtABlsteKdZkLrIlSuHXQTWuMRrFuymRikzhpdGTiRyKTeSqjXlMjtibTqK'; $jpK=strlen("ehmcyLmwLmOYNqBwybjcnvmCmbnpwoJePHZIVNLTLPzwzgmaIyywVJBfkcbbmobuYNrTTSIVgVTfzHeKYfDISMBSXOmyDCyLJMgefjBiqczhQOTuzPhCrTpYpgmMMFKnNLtOvSyOdbBdIqWpYWarHxiiExXxBZsqmKXCrAIm")*2/7; $this->setAjax(true);  if (!$this->isXHR())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 100, 'text' => 'Missing headers.'));  }  if (!self::isPost())  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'HTTP method not allowed.'));  }  $params = array(  'id' => $this->_get->toInt('id'),  'column' => $this->_post->toString('column'),  'value' => $this->_post->toString('value'),  );  if (!(isset($params['id'], $params['column'], $params['value'])  && pjValidation::pjActionNumeric($params['id'])  && pjValidation::pjActionNotEmpty($params['column'])))  {  self::jsonResponse(array('status' => 'ERR', 'code' => 102, 'text' => 'Missing, empty or invalid parameters.'));  }  $pjDiscountPackageItemModel = pjDiscountPackageItemModel::factory();  if (!in_array($params['column'], $pjDiscountPackageItemModel->getI18n()))  {  if (in_array($params['column'], array('adults')))  {  if ((int) $params['value'] <= 0)  {  self::jsonResponse(array('status' => 'ERR', 'code' => 101, 'text' => 'Invalid number of adults'));  }  }  $pjDiscountPackageItemModel->set('id', $this->_get->toInt('id'))->modify(array($params['column'] => $params['value']));  } else {  pjMultiLangModel::factory()->updateMultiLang(array($this->getLocaleId() => array($params['column'] => $params['value'])), $this->_get->toInt('id'), 'pjDiscountPackageItem');  }  self::jsonResponse(array('status' => 'OK', 'code' => 200, 'text' => ''));  }  }  ?>